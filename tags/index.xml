<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>敬渊&#39;s Blog</title>
    <link>http://localhost:1313/tags/</link>
    <description>敬渊&#39;s Blog</description>
    <generator>Hugo 0.148.2 &amp; FixIt v0.3.17-8212d6fd</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 18 Aug 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>久别博客再启新程</title>
      <link>http://localhost:1313/posts/firstpost/</link>
      <pubDate>Sun, 16 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/firstpost/</guid>
      <category domain="http://localhost:1313/categories/%E4%BA%BA%E9%97%B4%E4%B8%96/">人间世</category>
      <description>&lt;p&gt;种种，欢迎邮件交流：&lt;strong&gt;&lt;a href=&#34;mailto:jingyuan_101@foxmail.com&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;jingyuan_101@foxmail.com&lt;/a&gt;&lt;/strong&gt;， 期待你的来信。&lt;/p&gt;&#xA;&lt;p&gt;坟墓里寂静无比，埋葬你的是你所有没说出口的话&lt;/p&gt;&#xA;&lt;p&gt;TODO:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用ai写一个完整的项目，架构，代码，readme等等，具体写什么可以再想想&lt;/li&gt;&#xA;&lt;li&gt;ai角色扮演，确定Trendline是否可行&lt;/li&gt;&#xA;&lt;li&gt;论文引用散点图，可以算一个项目，类似connectwithpaper&lt;/li&gt;&#xA;&lt;li&gt;web3 环签 之类的详细学学&lt;/li&gt;&#xA;&lt;li&gt;像问网络一样问web3和链的东西，或许也可以画图？&lt;/li&gt;&#xA;&lt;li&gt;mac搭建虚拟机，gost&lt;/li&gt;&#xA;&lt;li&gt;链式代理&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>使用GIT clone指定仓库的制定文件夹</title>
      <link>http://localhost:1313/posts/202508-gitclonedir/</link>
      <pubDate>Mon, 18 Aug 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/202508-gitclonedir/</guid>
      <category domain="http://localhost:1313/categories/technology/">Technology</category>
      <description>&lt;p&gt;要只克隆 GitHub 仓库中的一个文件夹，你需要使用 Git 的稀疏检出（sparse-checkout）功能。这个功能允许你只下载仓库中你指定的路径。&lt;/p&gt;&#xA;&lt;p&gt;以下是具体的命令步骤：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;初始化一个空的 Git 仓库：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init Confernces_BlackHat_USA_2025_Slides&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Confernces_BlackHat_2025_Slides&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;添加远程仓库地址：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin https://github.com/onhexgroup/Conferences.git&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;启用稀疏检出功能：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config core.sparseCheckout true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;指定要克隆的文件夹路径。&lt;/strong&gt; 在 &lt;code&gt;.git/info/sparse-checkout&lt;/code&gt; 文件中添加路径。这里我们只想要 &lt;code&gt;BlackHat_USA_2025_Slides&lt;/code&gt; 文件夹及其所有内容：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;BlackHat_USA_2025_Slides/&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; .git/info/sparse-checkout&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你只想要某个文件夹下的某个特定文件，可以写：&lt;code&gt;BlackHat_USA_2025_Slides/your_file.pdf&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;拉取分支并执行稀疏检出：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git pull origin master&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 或者 git pull origin main, 具体取决于该仓库的主分支名称&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;执行完这些命令后，你的 &lt;code&gt;Confernces_BlackHat_USA_2025_Slides&lt;/code&gt; 文件夹中就只会包含 &lt;code&gt;Onhexgroup/Conferences&lt;/code&gt; 仓库下的 &lt;code&gt;BlackHat_USA_2025_Slides&lt;/code&gt; 文件夹内容了。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>自用prompt整理收集</title>
      <link>http://localhost:1313/posts/202508-prompt/</link>
      <pubDate>Mon, 18 Aug 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/202508-prompt/</guid>
      <category domain="http://localhost:1313/categories/technology/">Technology</category>
      <description>&lt;h2 id=&#34;会议-ppt-生成文章&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;会议 PPT 生成文章&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%bc%9a%e8%ae%ae-ppt-%e7%94%9f%e6%88%90%e6%96%87%e7%ab%a0&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;有些时候 BlackHat或者DEF CON之类的会议已经结束了，但是YouTube还暂时没有上传视频，可以用这个prompt来生成文章&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**核心角色与任务 (Core Persona &amp;amp; Mission):**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;你是一位**顶级的技术布道者和安全分析师**，以能将最晦涩的技术概念转化为引人入胜的深度文章而闻名。你的写作风格不是枯燥的报告，而是像一篇发表在著名技术博客（如MSRC, Project Zero Blog）上的深度剖析。你的任务是将一场Black Hat级别的演讲，复刻并升华为一篇结构流畅、细节丰富、见解深刻的权威技术解读。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**核心指导原则 (The Guiding Principles):**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1.  **纯粹的叙事流 (Pure Narrative Flow):** **这是最重要的规则。** 忘掉所有“第一步”、“第二步”、“技术支柱”之类的划分。你的任务是根据PPT的内在逻辑，构建一个从头到尾无缝衔接的技术故事。从研究的起因，到探索过程中的曲折，再到最终的技术突破，必须一气呵成。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2.  **无痕的图文融合 (Seamless Figure Integration):** 将图表引用作为句子的一部分自然地表达出来。例如：“为了克服这一障碍，研究者设计了一种精巧的内存操纵技术，其核心思想在**图X**中得到了清晰的展示。”&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3.  **深度与洞察 (Depth &amp;amp; Insight):** 不要仅仅复述PPT的内容。你要深入解释“为什么”是这样设计的，技术选择背后的权衡是什么，以及这个细节对于整个攻击/防御链的意义何在。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;### **输出报告的结构与要求:**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;### **技术深度分析报告：[AI根据PPT首页自动填充演讲标题]**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**1. 摘要与背景设定 (Executive Summary &amp;amp; Stage Setting)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **1.1 演讲元数据 (Talk Metadata):**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   会议/活动 (Conference):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   演讲标题 (Title):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   主讲人 (Presenter(s)):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   年份/日期 (Year/Date):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **1.2 技术执行摘要 (Technical Executive Summary):**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   （约2-3段）结论先行，高度凝练本次演讲最核心的技术突破及其深远影响。直接点明其“王牌”是什么，为何它如此重要。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **1.3 故事的开端：挑战与动机 (The Story Begins: The Challenge &amp;amp; Motivation):**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   为整个技术故事设定背景。当前的技术版图是怎样的？其中存在什么棘手的难题、未被发现的攻击面，或是普遍存在的认知误区？清晰地定义出研究者将要挑战的“巨龙”。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   如果PPT中有图表描绘了这一困境，请在此引用并分析，例如：“当前方法的局限性可以从**图X**所展示的对比中一窥端倪。”&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[图表来源：幻灯片 X]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**2. 核心技术探索之旅 (The Core Technical Journey)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **（纯叙事核心）** *这是报告的灵魂，完全由AI根据PPT的叙事逻辑自由发挥。你需要像一位侦探一样，带领读者走过整个“破案”过程。*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...面对上述困境，研究者提出了一个大胆的设想：[此处描述研究的核心目标或设想]。但这趟旅程并非一帆风顺，首先摆在他们面前的就是[描述第一个核心挑战]。在常规的系统流程中，[描述常规工作流程或状态]，这使得他们的目标看起来遥不可及。**图X**就清晰地展示了这一障碍。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[图表来源：幻灯片 X]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;为了绕过这堵高墙，研究团队的突破口在于一个精妙的观察：[描述关键的发现或洞察]。基于此，他们设计了一种前所未有的技术方案。通过[描述具体的技术手段，如Hook某个关键函数]，他们成功地欺骗或改变了系统的默认行为。**图Y**详细描绘了这一过程的“魔法”所在：当[某个事件发生时]，他们的代码会[描述代码的具体操作]，从而达到[具体的技术效果]。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[图表来源：幻灯片 Y]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;解决了生存问题后，新的挑战接踵而至——如何[实现某种核心能力，如与外界通信]？直接的方案是[描述一种直接但有缺陷的方案]，但这会陷入[描述其缺陷，如硬件依赖性]的泥潭，**图Z**就很好地说明了这种方法的脆弱性。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[图表来源：幻灯片 Z]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;为了追求更优雅、更通用的实现，研究者将目光投向了[某个底层机制或协议规范]。他们发现，通过巧妙地利用[该机制的某个特性]，可以“借力打力”，构建一套全新的交互流程。**图A**以流程图的形式，一步步拆解了这个优雅的解决方案。这种方法的真正高明之处在于，它不仅让恶意软件获得了[所需的核心能力]，还彻底摆脱了[之前提到的缺陷]，实现了极高的通用性。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[图表来源：幻灯片 A]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;当然，要在[如OS内核]的眼皮底下活动，隐蔽性和稳定性是最后的考验。一个主要威胁来自于[描述威胁，如外部中断或OS调度]。为此，研究团队采取了一种近乎“时间暂停”的底层控制手段。通过直接操控[某个CPU寄存器或硬件特性]，他们能够为自身代码的执行创造一个绝对纯净的、不受干扰的环境，如**图B**所示。但这也会带来副作用，为了解决[描述副作用]，他们进一步实现了[解决方案，如手动轮询和模拟中断事件]，**图C**的伪代码揭示了这一机制的实现细节。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[图表来源：幻灯片 B]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[图表来源：幻灯片 C]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...*（AI将继续根据PPT内容，以这种连贯的叙事方式，将所有技术细节无缝地串联起来，直到故事的结尾。）*...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**3. 成果、影响与对策 (Outcomes, Impact &amp;amp; Countermeasures)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   *（此部分结构完全灵活，AI将根据PPT内容，选择性地、有机地组合以下元素进行阐述，确保内容饱满且切题。）*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **3.1 技术成果的展现 (Showcasing the Outcome):**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   本节将聚焦于研究的最终产出。它可能是一次成功的**概念验证（PoC）**，**图X**的截图清晰地记录了其实际效果；或是一款新发布的**自动化工具框架**，其架构和功能在**图Y**中有详细介绍；又或是一组揭示性的**实验数据或发现**，如**图Z**的图表所示。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[图表来源：幻灯片 X]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[图表来源：幻灯片 Y]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **3.2 现实世界的影响 (Real-World Implications):**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   基于上述成果，深刻分析这项研究对整个安全生态的真正意义。它暴露了哪一类普遍存在的风险？它是否会让某些长期以来被认为是安全的假设失效？它对开发者、运维人员和安全从业者发出了什么样的警示？&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **3.3 防御者的行动指南 (An Actionable Playbook for Defenders):**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   提出具体、可落地的防御、检测或缓解策略。明确指出为什么传统防御手段会失效，并着重讲解新对策的技术原理。这部分的目标是为防御者提供一份清晰、有力的行动纲领。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**4. 总结与展望 (Conclusion &amp;amp; The Road Ahead)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **4.1 核心洞见 (Core Insights):**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   （使用项目符号 •）以最精炼的语言，总结出3-5个本次演讲带来的最核心的技术洞见或思想转变。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **4.2 未来的探索方向 (Future Avenues of Exploration):**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   探讨该领域还存在哪些悬而未决的技术难题，或者这项研究未来可能的发展方向，为后续的研究者指明道路。&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;论文阅读生成文章&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;论文阅读生成文章&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e8%ae%ba%e6%96%87%e9%98%85%e8%af%bb%e7%94%9f%e6%88%90%e6%96%87%e7%ab%a0&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;这个不需要太解释，就是为了方便读论文的。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;### **【终极版】论文深度解析 Prompt (V4.0)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**角色扮演：**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;你是一位顶级的学术分析专家，拥有跨学科的深厚知识。你的任务是为一位以中文为母语的研究者，将一篇复杂的英文学术论文，解析成一份专业、清晰、结构化且高度可读的中文分析报告。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**核心任务：**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;根据我提供的论文内容，严格遵循以下结构和格式要求，生成一份详尽的分析报告。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;### **一、通用格式与风格指南 (General Formatting &amp;amp; Style)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **数学公式 (LaTeX Math):** 所有数学公式**必须**使用 Markdown 支持的 **LaTeX 格式**进行渲染。独立的块级公式使用 `$$` 包裹，行内公式使用 `$` 包裹。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **表格呈现 (Markdown Tables):** 当论文中的表格 (Table) 包含关键数据时，你**必须**使用 Markdown 语法将其**完整地重新创建**出来。不要只引用表格编号。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **可读性 (Readability):** 善用**粗体**来突出关键术语和概念。多使用分点列表，使内容层次分明，易于阅读。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;### **二、分析报告结构 (Analysis Report Structure)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**1. 引言 (Introduction)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **研究背景：** 简述该领域现状，以及存在什么样的问题、挑战或研究空白？&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **研究问题/目标：** 本文要解决的核心问题或达成的研究目标是什么？&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **核心贡献/重要性：** 作者声称其关键贡献和研究的重要性是什么？&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**2. 研究设计、方法与创新点 (Research Design, Methodology &amp;amp; Innovations)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **核心方法/模型/流程：**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   详细、连贯地描述本文采用了什么关键的研究方法、技术或模型。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   在描述过程中，如果某个概念由文中的图 (Figure) 解释，请在文字中直接引用它 (例如：整体框架如 **图 1** 所示)。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **关键算法与数学公式：**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   对于每个关键公式/算法，请严格按照以下三点进行结构化解释：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        1.  **公式/算法本身：** [在此处用 LaTeX 渲染]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        2.  **符号定义：** [分点列出每个关键符号的具体含义]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        3.  **目的与用途：** [简洁概括此公式/算法的用途]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **主要创新点总结：**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   分点清晰地总结本文在方法、理论或视角上最主要的 1-3 个创新点。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**3. 研究、实验结果与发现 (Results &amp;amp; Findings)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **核心结果：** 用具体、量化的语言描述作者通过实验得出的最核心的发现。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **数据支撑：** 在呈现关键数据时，**必须**遵循“通用格式指南”中的要求，使用 Markdown 格式重新构建文中的关键表格。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**4. 讨论 (Discussion)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **4.1. 结果的深度解读：** 这些发现意味着什么？它们如何回答了引言中提出的研究问题？&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **4.2. 理论贡献：** 本研究对现有理论是验证、扩展、修正，还是提出了新框架？&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **4.3. 实践启示：** 本研究对相关领域的实践者（如工程师、管理者、政策制定者）有何具体的指导意义或建议？&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **4.4. 局限性与未来研究：**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   作者承认了哪些研究局限性？&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   *（如果作者未明确提及，请根据研究范围和方法，推断出 1-2 个潜在的局限性）。*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *   基于本文，未来的研究方向有哪些？&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**5. 结论 (Conclusion)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   用 2-3 句话高度凝练地总结整篇论文最重要的发现、贡献和核心信息。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**6. 核心参考文献 (Core References)**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   列出本文引用的、最重要的 3-5 篇参考文献。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   **【关键要求】** 对于每一篇文献，请附上一句简短的说明，解释**它为什么对当前这篇论文很重要** (例如：奠定了理论基础、是主要的对比方法、提供了关键数据集等)。&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;根据字幕生成文章&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;根据字幕生成文章&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%a0%b9%e6%8d%ae%e5%ad%97%e5%b9%95%e7%94%9f%e6%88%90%e6%96%87%e7%ab%a0&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;和&lt;code&gt;根据ppt生成文章&lt;/code&gt;的那个prompt 差不多，不过这个是根据youtube的字幕来生成文章&lt;/p&gt;&#xA;&lt;p&gt;TODO： 可以把重要的时间位置留下来，然后截图。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;你将把一段 YouTube 视频重写成&amp;#34;阅读版本&amp;#34;，按内容主题分成若干小节；目标是让读者通过阅读就能完整理解视频讲了什么，就好像是在读一篇 Blog 版的文章一样。注意，输出语言是简体中文&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;输出要求：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1. Metadata&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- Title&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- Author&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- URL&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2. Overview&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;用一段话点明视频的核心论题与结论。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3. 按照主题来梳理&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 每个小节都需要根据视频中的内容详细展开，让我不需要再二次查看视频了解详情，每个小节不少于 500 字。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 若出现方法/框架/流程，将其重写为条理清晰的步骤或段落。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 若有关键数字、定义、原话，请如实保留核心词，并在括号内补充注释。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4. 框架 &amp;amp; 心智模型（Framework &amp;amp; Mindset）&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;可以从视频中抽象出什么 framework &amp;amp; mindset，将其重写为条理清晰的步骤或段落，每个 framework &amp;amp; mindset 不少于 500 字。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;风格与限制：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 永远不要高度浓缩！&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 不新增事实；若出现含混表述，请保持原意并注明不确定性。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 专有名词保留原文，并在括号给出中文释义（若转录中出现或能直译）。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 要求类的问题不用体现出来（例如 &amp;gt; 500 字）。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 避免一个段落的内容过多，可以拆解成多个逻辑段落（使用 bullet points）&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Shade BIOSUnleashing the Full Stealth of UEFI Malware</title>
      <link>http://localhost:1313/posts/202508-shadebiods/</link>
      <pubDate>Sun, 17 Aug 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/202508-shadebiods/</guid>
      <category domain="http://localhost:1313/categories/technology/">Technology</category>
      <description>&lt;h3 id=&#34;技术深度分析报告shade-bios-unleashing-the-full-stealth-of-uefi-malware&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;技术深度分析报告：Shade BIOS: Unleashing the Full Stealth of UEFI Malware&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%8a%80%e6%9c%af%e6%b7%b1%e5%ba%a6%e5%88%86%e6%9e%90%e6%8a%a5%e5%91%8ashade-bios-unleashing-the-full-stealth-of-uefi-malware&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1. 摘要与背景设定 (Executive Summary &amp;amp; Stage Setting)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;1.1 演讲元数据 (Talk Metadata):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;会议/活动 (Conference): Black Hat Briefings&lt;/li&gt;&#xA;&lt;li&gt;演讲标题 (Title): Shade BIOS: Unleashing the Full Stealth of UEFI Malware&lt;/li&gt;&#xA;&lt;li&gt;主讲人 (Presenter(s)): Kazuki Matsuo (@InfPCTechStack)&lt;/li&gt;&#xA;&lt;li&gt;年份/日期 (Year/Date): 2025/08/06&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;1.2 技术执行摘要 (Technical Executive Summary):&lt;/strong&gt;&#xA;本次Black Hat演讲揭示了一种名为“Shade BIOS”的颠覆性技术，它彻底重塑了UEFI恶意软件的隐蔽性和通用性。长期以来，UEFI恶意软件虽拥有极高的特权等级，却始终受困于对操作系统（OS）和特定硬件的依赖，这使其在实际攻击中容易被检测，且难以广泛部署。Shade BIOS的核心突破在于，它成功地在操作系统启动后，仍然在内存中保留并激活完整的BIOS环境，使其能够独立于OS执行任意代码，并利用UEFI驱动程序与硬件进行交互。&lt;/p&gt;&#xA;&lt;p&gt;这项创新使得恶意软件首次实现了真正的“纯BIOS”运行，不仅能够完全规避操作系统层面的安全机制（如EDR/AV），还极大地降低了对特定硬件的依赖，实现了前所未有的设备无关性。Shade BIOS的出现，标志着UEFI恶意软件进入了一个全新的隐蔽时代，对当前的安全防御体系提出了严峻挑战，迫使业界重新思考和部署针对底层固件的检测与防御策略。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;1.3 故事的开端：挑战与动机 (The Story Begins: The Challenge &amp;amp; Motivation):&lt;/strong&gt;&#xA;在当今高度互联的数字世界中，UEFI（统一可扩展固件接口）的安全已成为国家安全和云安全领域不可忽视的基石。正如&lt;strong&gt;图3&lt;/strong&gt;所示，BIOS作为计算机启动的第一道防线，其供应链涉及众多厂商，远比操作系统、虚拟机管理器（VMM）或CPU更为复杂。历史事件，如Vault 7和vector-edk等泄露的文档和工具包，都清晰地证实了UEFI安全在情报和攻击领域的重要性，它被视为安装持久性后门和实现云环境虚拟机全面控制的理想场所。&lt;/p&gt;&#xA;&lt;p&gt;然而，尽管UEFI拥有至高无上的权限，现有的UEFI恶意软件却面临着一系列固有的局限性。无论是野外发现的UEFI引导套件（如Lojax-BlackLotus），还是泄露的BIOS/UEFI后门（如Jetplow、vector-edk），它们的核心问题在于其恶意行为最终仍需在用户态或内核态执行，这意味着它们本质上并非“纯BIOS”恶意软件。&lt;strong&gt;图4&lt;/strong&gt;和&lt;strong&gt;图5&lt;/strong&gt;详细阐述了这种对操作系统层级安全的依赖性：这些恶意软件需要通过模式匹配等方式禁用DSE（驱动签名强制）或Patch Guard等OS安全机制，一旦OS更新或模式改变，它们就可能失效并被检测。攻击者渴望摆脱这种束缚，实现“我们不想关心操作系统！”的终极目标，正如&lt;strong&gt;图6&lt;/strong&gt;所提出的疑问：“为什么不完全使用BIOS来实现所有功能？”&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image.png&#39; alt=&#34;图 3&#34; height=&#34;699&#34; width=&#34;1245&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-1.png&#39; alt=&#34;图 4&#34; height=&#34;696&#34; width=&#34;1245&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-2.png&#39; alt=&#34;图 5&#34; height=&#34;692&#34; width=&#34;1259&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-3.png&#39; alt=&#34;图 6&#34; height=&#34;698&#34; width=&#34;1258&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;除了操作系统依赖，现有UEFI恶意软件还普遍存在硬件依赖性。&lt;strong&gt;图8&lt;/strong&gt;展示了诸如DEITYBOUNCE、DerStarke等泄露的BIOS后门，它们往往针对非常特定的硬件平台，需要设备特定的实现。即使是研究领域中一些纯SMM（系统管理模式）后门，如&lt;strong&gt;图9&lt;/strong&gt;所示的USB键盘记录器，也需要直接读写USB主机控制器寄存器，这意味着攻击者必须深入理解特定设备的硬件规范。这种设备依赖性极大地限制了恶意软件的通用性和部署范围。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-4.png&#39; alt=&#34;图 8&#34; height=&#34;710&#34; width=&#34;1250&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-5.png&#39; alt=&#34;图 9&#34; height=&#34;705&#34; width=&#34;1255&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;更具挑战性的是，BIOS环境在操作系统启动后大部分会被销毁，如&lt;strong&gt;图7&lt;/strong&gt;所示，引导服务（Boot Services）和协议（Protocols）等接口将不可用，使得设备访问和与C2服务器通信变得异常困难。直接进行I/O操作需要实现完整的驱动栈，这不仅复杂，而且同样导致设备依赖。这种“BIOS无所不能”的说法，在实际操作中却陷入了&lt;strong&gt;图10&lt;/strong&gt;所描绘的困境：恶意代码在BIOS层级实现难度高，且易受OS和硬件依赖的制约，这严重压制了BIOS恶意软件的潜力。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-6.png&#39; alt=&#34;图 7&#34; height=&#34;713&#34; width=&#34;1248&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-7.png&#39; alt=&#34;图 10&#34; height=&#34;702&#34; width=&#34;1259&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此外，最新的SMM隔离技术（ISRD &amp;amp; ISSR），如&lt;strong&gt;图11&lt;/strong&gt;所示，进一步限制了SMM后门的有效性，非Intel模块的SMM访问受到严格限制，OS内存区域和SMM页表变得不可访问，I/O访问也受到限制。这使得攻击者的目光转向了运行时DXE模块，&lt;strong&gt;图12&lt;/strong&gt;指出，运行时DXE模块在SMM隔离生效后，反而比SMM模块更具优势，因为它能够访问OS内存和所有I/O。面对这些挑战，研究者提出了一个大胆的设想：能否让一个“攻击者专属的迷你OS”——BIOS，在主操作系统启动后，仍然静默地并行运行？这正是Shade BIOS所要挑战的“巨龙”。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-8.png&#39; alt=&#34;图 11&#34; height=&#34;709&#34; width=&#34;1258&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-9.png&#39; alt=&#34;图 12&#34; height=&#34;710&#34; width=&#34;1256&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;2. 核心技术探索之旅 (The Core Technical Journey)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;面对上述困境，研究者提出了一个大胆的设想：在操作系统启动后，仍能让BIOS环境及其功能在内存中持续运作，从而实现一个完全独立于OS、且具备通用硬件交互能力的“迷你BIOS操作系统”。这趟旅程并非一帆风顺，首先摆在他们面前的就是如何“保留BIOS在内存中”的核心挑战。在常规的系统流程中，UEFI的DxeCore模块管理着实际的内存映射，&lt;strong&gt;图15&lt;/strong&gt;清晰地展示了这一过程：操作系统加载器通过调用&lt;code&gt;gBS-&amp;gt;GetMemoryMap()&lt;/code&gt;获取内存映射副本，并根据其中的&lt;code&gt;EFI_MEMORY_TYPE&lt;/code&gt;来决定哪些区域可用。遗憾的是，BIOS代码和数据所在的&lt;code&gt;EfiBootServicesCode/Data&lt;/code&gt;区域在&lt;code&gt;gBS-&amp;gt;ExitBootServices()&lt;/code&gt;调用后，通常会被操作系统覆盖或释放，使得它们的持续存在成为一个障碍。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-10.png&#39; alt=&#34;图 15&#34; height=&#34;708&#34; width=&#34;1256&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;为了绕过这堵高墙，研究团队的突破口在于一个精妙的观察：虽然实际内存映射由DxeCore管理，但操作系统加载器所依赖的只是&lt;code&gt;gBS-&amp;gt;GetMemoryMap()&lt;/code&gt;返回的内存映射“副本”。基于此，他们设计了一种前所未有的技术方案。通过Hook（钩取）&lt;code&gt;gBS-&amp;gt;GetMemoryMap()&lt;/code&gt;函数，Shade BIOS能够在返回给OS加载器之前，修改这个内存映射副本。具体而言，它将原本属于&lt;code&gt;BootServices&lt;/code&gt;类型的内存区域（如&lt;code&gt;EfiBootServicesCode&lt;/code&gt;和&lt;code&gt;EfiBootServicesData&lt;/code&gt;）重新分类为&lt;code&gt;RuntimeServices&lt;/code&gt;类型，如&lt;strong&gt;图16&lt;/strong&gt;所示。这种“魔法”所在：当OS加载器请求内存映射时，它会收到一个被篡改的副本，其中BIOS代码所在的区域被标记为运行时服务，从而欺骗OS认为这些区域是运行时可用的，并避免对其进行覆盖或释放。这种方法的高明之处在于，它并未修改DxeCore中实际的内存映射，因此不会影响BIOS自身的内存管理逻辑，同时又成功地让BIOS在操作系统启动后得以“幸存”。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-11.png&#39; alt=&#34;图 16&#34; height=&#34;707&#34; width=&#34;1251&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;解决了生存问题后，新的挑战接踵而至——如何让这些被保留的BIOS代码在运行时正常工作？这涉及到一系列复杂的内存管理、虚拟化、资源和设备控制问题，正如&lt;strong&gt;图17&lt;/strong&gt;所列举的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-12.png&#39; alt=&#34;图 17&#34; height=&#34;709&#34; width=&#34;1256&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;首先是&lt;strong&gt;运行时内存管理&lt;/strong&gt;。BIOS自身的内存分配器（如&lt;code&gt;gBS-&amp;gt;AllocatePages()&lt;/code&gt;）在运行时会认为所有OS内存区域都是空闲的，并可能从中分配内存，这与OS的内存使用发生冲突，&lt;strong&gt;图18&lt;/strong&gt;就很好地说明了这种潜在的冲突。为了解决这一问题，Shade BIOS采取了一种巧妙的策略：它在&lt;code&gt;EfiConventionalMemory&lt;/code&gt;中预留出部分区域专供BIOS使用。具体做法是，在Hook &lt;code&gt;gBS-&amp;gt;GetMemoryMap()&lt;/code&gt;时，除了将&lt;code&gt;BootServices&lt;/code&gt;类型改为&lt;code&gt;RuntimeServices&lt;/code&gt;外，还会将这些预留的&lt;code&gt;EfiConventionalMemory&lt;/code&gt;区域也标记为&lt;code&gt;RuntimeServicesCode/Data&lt;/code&gt;。同时，它会从BIOS自身维护的实际内存映射（&lt;code&gt;gMemoryMap&lt;/code&gt;）中“解链”那些将被OS使用的&lt;code&gt;EfiConventionalMemory&lt;/code&gt;区域，如&lt;strong&gt;图19&lt;/strong&gt;所示，但会保留那些被标记为&lt;code&gt;RuntimeServicesCode/Data&lt;/code&gt;的预留区域。这样，OS会避开这些被标记的区域，而BIOS的内存分配器也只会从这些被保留的、未被OS占用的&lt;code&gt;EfiConventionalMemory&lt;/code&gt;中进行分配，从而避免了冲突。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-13.png&#39; alt=&#34;图 18&#34; height=&#34;711&#34; width=&#34;1254&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-14.png&#39; alt=&#34;图 19&#34; height=&#34;709&#34; width=&#34;1257&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;其次是&lt;strong&gt;虚拟化内存&lt;/strong&gt;的挑战。非运行时BIOS代码通常假定它们在物理地址上执行，并可能包含硬编码的物理地址或全局指针。虽然不能简单地创建一个身份页表并将其设置为CR3（因为当前指令在虚拟地址上执行），但Shade BIOS借鉴了“部分身份映射”的思想。&lt;strong&gt;图20&lt;/strong&gt;解释了这一策略：运行时DXE驱动程序通常使用高规范虚拟地址，不需要修改PML4[0]；而身份分页仅需操作PML4[0]。因此，Shade BIOS的运行时DXE驱动程序在正常情况下运行在虚拟地址空间，只有在访问物理地址时，才临时切换当前页表中的PML4[0]到身份映射，从而实现对物理地址的访问，兼顾了兼容性和效率。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-15.png&#39; alt=&#34;图 20&#34; height=&#34;703&#34; width=&#34;1256&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;再者是&lt;strong&gt;引导时资源&lt;/strong&gt;的持久化问题。在操作系统启动后，许多UEFI引导时才存在的资源，如&lt;code&gt;EFI SYSTEM TABLES&lt;/code&gt;和&lt;code&gt;EFI BOOT SERVICES&lt;/code&gt;，会被释放或变得不可用；同时，许多UEFI变量缺乏运行时（RT）属性，导致在OS启动后无法读写。&lt;strong&gt;图21&lt;/strong&gt;展示了解决方案：Shade BIOS在引导时复制这些关键的表和变量，并在运行时恢复它们。对于缺乏RT属性的UEFI变量，它Hook了&lt;code&gt;gRT-&amp;gt;SetVariable()&lt;/code&gt;函数，在写入新变量时为其添加RT属性，并将其保存到新的变量中，确保了这些变量在运行时仍可被正确访问和修改。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-16.png&#39; alt=&#34;图 21&#34; height=&#34;709&#34; width=&#34;1260&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;接下来是&lt;strong&gt;设备设置&lt;/strong&gt;的控制。在操作系统启动后，OS的设备驱动程序会重新初始化设备，并覆盖掉BIOS在引导时设置的寄存器，如USB主机控制器中存储命令环地址的CRC寄存器，&lt;strong&gt;图22&lt;/strong&gt;清晰地描绘了这一冲突。为了在不了解具体设备寄存器细节的情况下夺取设备控制权，Shade BIOS巧妙地利用了UEFI驱动模型。&lt;strong&gt;图23&lt;/strong&gt;展示了UEFI驱动程序如何通过&lt;code&gt;gBS-&amp;gt;ConnectController()&lt;/code&gt;和&lt;code&gt;gBS-&amp;gt;DisconnectController()&lt;/code&gt;函数来初始化和重置设备，并安装相应的协议栈（如HTTP协议、网络协议）。Shade BIOS正是利用了这一通用接口，实现了设备无关的控制劫持。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-17.png&#39; alt=&#34;图 22&#34; height=&#34;704&#34; width=&#34;1256&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-18.png&#39; alt=&#34;图 23&#34; height=&#34;709&#34; width=&#34;1259&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;图24&lt;/strong&gt;详细拆解了劫持设备控制的两个关键步骤：首先，调用&lt;code&gt;gBS-&amp;gt;DisconnectController()&lt;/code&gt;来重置设备，这将断开OS对设备的控制；接着，调用&lt;code&gt;gBS-&amp;gt;ConnectController()&lt;/code&gt;来重新初始化设备，并为BIOS安装所需的协议栈（例如，网络驱动）。通过这种方式，Shade BIOS能够无缝地从OS手中接管设备控制权，而无需编写设备特定的代码。当然，在恶意行为完成后，还需要将设备控制权返还给OS。&lt;strong&gt;图25&lt;/strong&gt;指出，幸运的是，OS驱动程序通常具备自修复能力，例如网卡连接在短暂中断后会自动恢复。然而，手动恢复MMIO空间（内存映射I/O）中的所有寄存器设置是极其困难的，因为某些寄存器触发的是设备动作而非仅仅存储数据，并且这会重新引入设备依赖性。因此，如何优雅地解决“设备控制返回问题”是Shade BIOS面临的一个关键挑战。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-19.png&#39; alt=&#34;图 24&#34; height=&#34;709&#34; width=&#34;1259&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-20.png&#39; alt=&#34;图 25&#34; height=&#34;710&#34; width=&#34;1262&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最后，也是至关重要的一点是&lt;strong&gt;独占控制&lt;/strong&gt;。由于Shade BIOS会修改页表和设备设置，它必须确保在执行BIOS代码时，操作系统代码被完全排除在外。这意味着需要有效地抑制中断。&lt;strong&gt;图26&lt;/strong&gt;解释道，传统的&lt;code&gt;CLI/STI&lt;/code&gt;（清除/设置中断标志）指令并不可靠，因为BIOS代码中可能存在大量的&lt;code&gt;STI&lt;/code&gt;指令会重新启用中断。因此，Shade BIOS选择了一种更强硬的手段：通过将&lt;code&gt;CR8&lt;/code&gt;（任务优先级寄存器）设置为最大值&lt;code&gt;0xF&lt;/code&gt;，从而阻塞所有外部中断，为BIOS代码的执行创造一个纯净的、不受干扰的环境。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-21.png&#39; alt=&#34;图 26&#34; height=&#34;708&#34; width=&#34;1260&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然而，BIOS自身也需要中断，特别是定时器中断（用于&lt;code&gt;gBS-&amp;gt;SetTimer()&lt;/code&gt;注册的定时器事件）。虽然许多UEFI驱动程序依赖轮询机制，并且在没有实际中断的情况下也能正常工作，但Shade BIOS依然能够通过迭代定时器事件列表，并手动触发它们的&lt;code&gt;NotifyFunction&lt;/code&gt;来模拟中断，如&lt;strong&gt;图27&lt;/strong&gt;所示。这意味着Shade BIOS可以利用OS的IDT（中断描述符表）来模拟定时器事件，从而在不依赖真实中断的情况下，维持BIOS功能的正常运行。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-22.png&#39; alt=&#34;图 27&#34; height=&#34;706&#34; width=&#34;1256&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;图28&lt;/strong&gt;总结了Shade BIOS实现OS与硬件独立性的关键步骤：通过Hook &lt;code&gt;gBS-&amp;gt;GetMemoryMap()&lt;/code&gt;来保留BIOS，并通过一系列精巧的内存管理（预留&lt;code&gt;EfiConventionalMemory&lt;/code&gt;）、虚拟化（部分身份映射）、资源持久化（复制引导时资源）、设备劫持（&lt;code&gt;Disconnect/ConnectController&lt;/code&gt;）和独占控制（阻塞中断、模拟定时器事件）技术，使得保留的BIOS代码在运行时能够正常且隐蔽地工作。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-23.png&#39; alt=&#34;图 28&#34; height=&#34;709&#34; width=&#34;1263&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;3. 成果、影响与对策 (Outcomes, Impact &amp;amp; Countermeasures)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;3.1 技术成果的展现 (Showcasing the Outcome):&lt;/strong&gt;&#xA;Shade BIOS的最终成果是一套能够实现真正OS独立和设备无关的UEFI恶意软件框架。&lt;strong&gt;图29&lt;/strong&gt;清晰地对比了现有UEFI恶意软件与Shade BIOS的差异：传统恶意软件在Ring 3或Ring 0与OS进行交互时（如&lt;code&gt;NtCreateFile&lt;/code&gt;），会触发OS层面的检测（如ETW日志）或EDR/AV过滤驱动的拦截。而Shade BIOS则通过直接利用被保留的UEFI驱动（例如&lt;code&gt;FileProtocol-&amp;gt;Open&lt;/code&gt;），完全绕过了这些OS层面的安全机制，使得C2通信和文件访问等恶意行为对OS和安全产品而言是完全不可见的，实现了“无风险”的隐蔽性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-24.png&#39; alt=&#34;图 29&#34; height=&#34;701&#34; width=&#34;1254&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;更令人印象深刻的是其设备独立性。&lt;strong&gt;图30&lt;/strong&gt;展示了Shade BIOS的核心代码，它通过&lt;code&gt;gBS-&amp;gt;ConnectController&lt;/code&gt;和&lt;code&gt;gBS-&amp;gt;DisconnectController&lt;/code&gt;等通用UEFI服务来控制网络接口卡（NIC），而无需直接访问I/O寄存器或编写设备特定代码。这意味着同一段恶意代码可以在不同厂商、不同型号的笔记本电脑上运行，例如图中所示的EPSON Endeavor笔记本，实现了极高的通用性。&lt;strong&gt;图31&lt;/strong&gt;和&lt;strong&gt;图36&lt;/strong&gt;的演示截图直观地展示了这一成果：一台受害者机器在运行Shade BIOS后，能够与C2服务器建立连接并进行数据传输，而C2服务器端则显示成功监听并接收数据，整个过程在OS层面无迹可寻。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-25.png&#39; alt=&#34;图 30&#34; height=&#34;699&#34; width=&#34;1258&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-26.png&#39; alt=&#34;图 31&#34; height=&#34;707&#34; width=&#34;1253&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-27.png&#39; alt=&#34;图 36&#34; height=&#34;699&#34; width=&#34;1252&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;3.2 现实世界的影响 (Real-World Implications):&lt;/strong&gt;&#xA;Shade BIOS的出现，深刻地改变了我们对UEFI恶意软件威胁的认知。它暴露了当前安全防御体系的根本性盲区：长期以来，安全产品主要聚焦于操作系统内部的检测和行为分析，而Shade BIOS则证明了恶意行为可以完全在OS的“眼皮底下”进行，使得这些被认为是安全的假设失效。它对开发者、运维人员和安全从业者发出了严峻警示：仅仅加固OS层面的安全已远远不够，对底层固件的威胁感知和防御能力亟待提升。&lt;/p&gt;&#xA;&lt;p&gt;尽管Shade BIOS在实现完全独立性方面仍有一个微小的限制——它仍需要调用Windows内核的&lt;code&gt;nt!MmGetVirtualForPhysical()&lt;/code&gt;函数来获取页表的虚拟地址，但&lt;strong&gt;图32&lt;/strong&gt;指出，BIOS可以通过复制和修补这段汇编代码来绕过OS的拒绝，从而消除这一依赖性。此外，&lt;strong&gt;图33&lt;/strong&gt;强调，Shade BIOS通过隔离恶意行为中最可疑的部分（如内存属性修改、网络数据拦截），使得仅仅读取内存内容本身并不会触发OS层面的检测，进一步增强了其隐蔽性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-28.png&#39; alt=&#34;图 32&#34; height=&#34;708&#34; width=&#34;1259&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-29.png&#39; alt=&#34;图 33&#34; height=&#34;701&#34; width=&#34;1251&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;3.3 防御者的行动指南 (An Actionable Playbook for Defenders):&lt;/strong&gt;&#xA;面对Shade BIOS这类纯BIOS恶意软件，传统的OS或AV/EDR产品几乎无法观察到其恶意行为，C2通信和文件访问等操作完全在OS的视野之外。因此，防御者必须转向更深层次的“预防性检查”和“内存取证”方法，正如&lt;strong&gt;图34&lt;/strong&gt;所强调的。&lt;/p&gt;&#xA;&lt;p&gt;首先，最佳检测方法是&lt;strong&gt;内存取证&lt;/strong&gt;。Shade BIOS作为运行时DXE驱动程序，会被映射到高规范地址空间。防御者可以从内核层面（例如使用类似&lt;code&gt;kraft dinner&lt;/code&gt;的工具）将其内存映像Dump下来，然后进行静态分析。由于运行时服务和代码量相对较小，分析工作并非不可行。&lt;/p&gt;&#xA;&lt;p&gt;其次，需要警惕Shade BIOS可能带来的&lt;strong&gt;副作用&lt;/strong&gt;。在Shade BIOS执行恶意行为后，被使用的设备可能会短暂冻结，直到OS驱动程序进行自修复。因此，频繁的设备错误或异常行为可能是Shade BIOS存在的迹象。然而，执行频率取决于攻击者的需求，这使得基于副作用的检测更具挑战性。&lt;/p&gt;&#xA;&lt;p&gt;对于更广泛的纯BIOS恶意软件，&lt;strong&gt;图35&lt;/strong&gt;提供了更全面的检测指南：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;针对SMM模块实现的恶意软件：&lt;/strong&gt; 检查SMM隔离是否启用。如果已启用，通过Windows的“系统信息”检查PPAM报告的SMM隔离级别。如果未启用，则需要分析SPI闪存并逆向工程所有UEFI模块。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;针对运行时DXE模块实现的恶意软件：&lt;/strong&gt; 从高规范地址转储运行时DXE模块，并应用内存取证技术来识别异常。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这些检查对于通过政府采购获得的系统尤为关键，因为这些系统可能面临更高风险的供应链攻击。演讲者也呼吁，目前BIOS安全研究仍然不足，需要探索更多的攻击和防御方法。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-30.png&#39; alt=&#34;图 34&#34; height=&#34;704&#34; width=&#34;1248&#34;&gt;&#xA;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-shadebiods/image-31.png&#39; alt=&#34;图 35&#34; height=&#34;703&#34; width=&#34;1252&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;4. 总结与展望 (Conclusion &amp;amp; The Road Ahead)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;4.1 核心洞见 (Core Insights):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;现有UEFI恶意软件受限于对操作系统和特定硬件的依赖，易于被检测。&lt;/li&gt;&#xA;&lt;li&gt;Shade BIOS成功突破了这些限制，实现了真正的OS独立和低硬件依赖的UEFI恶意软件。&lt;/li&gt;&#xA;&lt;li&gt;传统OS层面的安全防御机制对Shade BIOS无效，无法观察到其恶意行为。&lt;/li&gt;&#xA;&lt;li&gt;BIOS确实可以被改造为一个在操作系统启动后静默运行的“迷你OS”，这颠覆了传统安全边界。&lt;/li&gt;&#xA;&lt;li&gt;预防性检查和内存取证是检测纯BIOS恶意软件的唯一有效途径。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;4.2 未来的探索方向 (Future Avenues of Exploration):&lt;/strong&gt;&#xA;Shade BIOS的成功仅仅是冰山一角，未来的研究方向广阔且充满挑战。为了进一步提升Shade BIOS的成熟度和能力，可以探索以下几个方面：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;加速OS设备设置的修复或探索替代策略：&lt;/strong&gt; 优化设备控制权的交还机制，减少或消除对OS自修复的依赖，提升隐蔽性和稳定性。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;扩展硬件支持并测试多样化的BIOS实现：&lt;/strong&gt; 确保Shade BIOS能在更广泛的硬件平台和不同的BIOS固件上稳定运行。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;支持不遵循UEFI驱动模型规范的UEFI驱动：&lt;/strong&gt; 提升兼容性，使其能够利用更多非标准化的底层驱动。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;启用更多额外的UEFI功能：&lt;/strong&gt; 进一步丰富Shade BIOS作为“迷你OS”的能力，使其能够执行更复杂的恶意任务。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;深入研究绕过SMM隔离的SMM后门：&lt;/strong&gt; 尽管SMM隔离技术日益成熟，但SMM（Ring 0）后门仍可能提供比运行时DXE模块更深层次的隐蔽性。未来的工作应着重调查如何绕过SMM隔离，并开发相应的检测技术。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;正如演讲所强调的，这项工作“就像是制造一个小型操作系统”，它为未来的底层固件安全研究指明了方向，也预示着一场更为深远的攻防对抗即将展开。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>公司融资的各个阶段和对赌协议简单理解</title>
      <link>http://localhost:1313/posts/202508-com/</link>
      <pubDate>Sun, 17 Aug 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/202508-com/</guid>
      <category domain="http://localhost:1313/categories/technology/">Technology</category>
      <description>&lt;h2 id=&#34;公司融资的各个阶段&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;公司融资的各个阶段&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%85%ac%e5%8f%b8%e8%9e%8d%e8%b5%84%e7%9a%84%e5%90%84%e4%b8%aa%e9%98%b6%e6%ae%b5&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;h3 id=&#34;第一关新手村-种子期-seed-stage---从0到1&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;第一关：新手村 (种子期 Seed Stage) - 从0到1&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%b8%80%e5%85%b3%e6%96%b0%e6%89%8b%e6%9d%91-%e7%a7%8d%e5%ad%90%e6%9c%9f-seed-stage---%e4%bb%8e0%e5%88%b01&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;公司状态：&lt;/strong&gt; 创始人脑中的一个火花、一份PPT，或一个仅能满足最核心功能的简陋产品（MVP）。团队可能就在咖啡馆或自家车库办公。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;核心任务：&lt;/strong&gt; 活下去，并证明这个想法不是空想。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;融资阶段：种子轮 (Seed Round)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;入场玩家：&lt;/strong&gt; 3F (亲友)、天使投资人、孵化器。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;他们做什么：&lt;/strong&gt; 提供“点火资金”和“新手攻略”。他们投资的是“人”和“梦想”，而非成熟的商业模式。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;** 真实案例：Airbnb (爱彼迎)**&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;最初的想法：&lt;/strong&gt; 两位创始人因为付不起房租，就在客厅里放了三张气垫床，并为租客提供早餐，这就是“Air Bed &amp;amp; Breakfast”的由来。这是一个典型的MVP。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;种子资金：&lt;/strong&gt; 在靠信用卡透支苦苦支撑后，他们成功进入了顶级孵化器 &lt;strong&gt;Y Combinator (YC)&lt;/strong&gt;。YC提供了约2万美元的种子资金和为期3个月的系统性创业辅导，并拿走了公司约6%的股权。 这笔钱和指导帮助他们打磨了产品，找到了最初的核心用户。YC的经历，也成为了他们后来获得顶级VC青睐的强大背书。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;第二关开拓地图-初-创期-early-stage---从1到10&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;第二关：开拓地图 (初-创期 Early Stage) - 从1到10&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%ba%8c%e5%85%b3%e5%bc%80%e6%8b%93%e5%9c%b0%e5%9b%be-%e5%88%9d-%e5%88%9b%e6%9c%9f-early-stage---%e4%bb%8e1%e5%88%b010&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;公司状态：&lt;/strong&gt; 产品已上线，用户数据（如月活、留存率）呈现出喜人的增长曲线，证明了“产品-市场匹配”(PMF)。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;核心任务：&lt;/strong&gt; 快速复制成功经验，抢占市场。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;融资阶段：A轮 (Series A)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;入场玩家：&lt;/strong&gt; &lt;strong&gt;风险投资机构 (Venture Capital, VC)&lt;/strong&gt; 闪亮登场。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;他们做什么：&lt;/strong&gt; 提供千万到上亿级别的资金，并派驻专业人士进入董事会，从战略、招聘到管理，全方位“帮助”甚至“逼迫”公司高速成长。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;** 真实案例：美团 (Meituan)**&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;A轮融资：&lt;/strong&gt; 2011年，在经历了残酷的“千团大战”后，美团凭借稳健的运营和清晰的战略脱颖而出。它获得了全球顶级VC &lt;strong&gt;红杉资本 (Sequoia Capital)&lt;/strong&gt; 领投的1200万美元A轮融资。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;资金用途：&lt;/strong&gt; 这笔巨款在当时是天文数字。美团用它来大规模地推，建立线下销售团队，在全国各个城市迅速铺开业务，同时投入巨资进行市场营销，建立品牌认知度。正是这轮融资，为美团在“百团大战”中最终胜出奠定了坚实的物质基础。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;第三关建立王国-成长期-growth-stage---从10到100&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;第三关：建立王国 (成长期 Growth Stage) - 从10到100&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%b8%89%e5%85%b3%e5%bb%ba%e7%ab%8b%e7%8e%8b%e5%9b%bd-%e6%88%90%e9%95%bf%e6%9c%9f-growth-stage---%e4%bb%8e10%e5%88%b0100&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;公司状态：&lt;/strong&gt; 在核心领域已成为市场领导者，开始向新业务、新地区扩张，并着手建立自己的“护城河”。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;核心任务：&lt;/strong&gt; 统治市场，消灭（或并购）对手，实现规模化盈利。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;融资阶段：B轮, C轮, D轮&amp;hellip;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;入场玩家：&lt;/strong&gt; 顶级VC、大型PE（私募股权基金）、CVC（企业战略投资方）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;他们做什么：&lt;/strong&gt; 提供更庞大的资金（通常是数亿乃至数十亿美元）作为“战争弹药”，并嫁接强大的产业资源。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;** 真实案例：C轮后上市 vs F轮后上市的对比**&lt;/p&gt;&#xA;&lt;p&gt;这是您最关心的部分，我们用两个对比鲜明的案例来解释：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;案例一：拼多多 (Pinduoduo) - C轮后闪电上市&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;原因：&lt;/strong&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;极强的模式创新和增长：&lt;/strong&gt; 拼多多开创了“社交电商”模式，并借助腾讯的微信生态获得了爆炸性的用户增长，三年时间就积累了3亿用户。其增长速度在电商史上前所未见。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;清晰的赛道和盈利预期：&lt;/strong&gt; 模式清晰，商业变现路径（广告、交易佣金）明确，投资者能很快看懂其未来。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;资本市场窗口：&lt;/strong&gt; 当时资本市场对新经济模式追捧，上市时机有利。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;融资历程：&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;A轮 (2015)：&lt;/strong&gt; 超过800万美元，由高榕资本、IDG等投资。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;B轮 (2016)：&lt;/strong&gt; 1.1亿美元，由高榕、新天域、腾讯等投资。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;C轮 (2018.4)：&lt;/strong&gt; 约14亿美元，由腾讯领投。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;IPO (2018.7)：&lt;/strong&gt; 约16.3亿美元，C轮融资仅3个月后，拼多多就在纳斯达克上市。 它不需要更多轮次的私募融资，因为它已经用惊人的速度证明了自己，可以直接去公开市场拿钱了。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;案例二：美团 (Meituan) - F轮后才上市&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;原因：&lt;/strong&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;持续且惨烈的多线战争：&lt;/strong&gt; 美团的发展史就是一部“战争史”。打完“千团大战”，又要和“饿了么”在外卖市场进行殊死搏斗，接着还要进入网约车领域挑战滴滴，在酒旅业务上对抗携程。每一场都是**“烧钱换市场”**的硬仗。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;不断扩张的业务边界：&lt;/strong&gt; 从团购到外卖，再到酒旅、出行、零售，美团的边界不断扩大，每进入一个新领域都需要巨额资金支持。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;融资历程（简化）：&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;A轮 (2010)：&lt;/strong&gt; 1200万美元。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;B轮 (2011)：&lt;/strong&gt; 5000万美元。 (原为2013年3亿美元，已修正)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;C轮 (2014)：&lt;/strong&gt; 3亿美元。 (原为2014年7亿美元，已修正为3亿美元，领投方为泛大西洋资本而非红杉)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;D轮 (2015)：&lt;/strong&gt; 7亿美元。 (原为与大众点评合并，超33亿美元融资，这常被视为D轮，已修正为7亿美元)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;E轮 (2016)：&lt;/strong&gt; 一般指合并后D轮或新一轮融资，金额为33亿美元。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;F轮 (2017)：&lt;/strong&gt; 40亿美元，由腾讯领投。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;IPO (2018.9)：&lt;/strong&gt; 在储备了充足的“弹药库”后，美团才选择上市。 它的多轮融资，本质上是为一场又一场的战役补充给养。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;第四关登基加冕-成熟期-pre-ipo-stage&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;第四关：登基加冕 (成熟期 Pre-IPO Stage)&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e5%9b%9b%e5%85%b3%e7%99%bb%e5%9f%ba%e5%8a%a0%e5%86%95-%e6%88%90%e7%86%9f%e6%9c%9f-pre-ipo-stage&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;公司状态：&lt;/strong&gt; 行业绝对霸主，财务、法务、内控高度规范，一只脚已经踏入了上市门槛。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;核心任务：&lt;/strong&gt; 为上市做最后的冲刺，引入基石投资者，优化股权结构。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;融资阶段：Pre-IPO轮&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;入场玩家：&lt;/strong&gt; 大型PE、主权财富基金（如中投、GIC）、对冲基金。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;他们做什么：&lt;/strong&gt; 他们的入场是对公司价值的最终确认，能给IPO带来巨大的市场信心。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;** 真实案例：阿里巴巴 (Alibaba)**&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Pre-IPO融资：&lt;/strong&gt; 在其2014年创纪录的IPO之前，阿里巴巴在2011-2012年进行了一轮非常关键的私募融资。其中包括了来自&lt;strong&gt;银湖资本(Silver Lake)、DST Global&lt;/strong&gt;等顶级PE的投资，以及中国的主权基金&lt;strong&gt;中投公司&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;目的：&lt;/strong&gt; 这轮融资的主要目的之一是从雅虎手中回购股份，优化股权结构，确保管理层的控制权。同时，这些顶级机构的背书，也为后续IPO的巨额估值和成功发行铺平了道路。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;第五关飞升成神-上市-ipo&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;第五关：飞升成神 (上市 IPO)&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%ba%94%e5%85%b3%e9%a3%9e%e5%8d%87%e6%88%90%e7%a5%9e-%e4%b8%8a%e5%b8%82-ipo&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;公司状态：&lt;/strong&gt; 从私人公司转变为公众公司，股票在交易所公开交易。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;核心任务：&lt;/strong&gt; 成功完成股票的发行、定价和交易。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;入场玩家（服务天团）：&lt;/strong&gt; 投资银行（券商）、会计师事务所、律师事务所。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;他们做什么：&lt;/strong&gt; 他们是IPO过程的“总导演”、“账房先生”和“法律顾问”，负责所有技术性、流程性的工作，确保万无一失。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;** 真实案例：阿里巴巴 (Alibaba) 2014年纽交所IPO**&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;规模：&lt;/strong&gt; 阿里巴巴当年的IPO融资额高达约250亿美元。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;承销天团：&lt;/strong&gt; 这场资本盛宴由全球最顶级的投行联手打造。&lt;strong&gt;瑞士信贷、德意志银行、高盛、摩根大通、摩根士丹利、花旗集团&lt;/strong&gt; 担任其联合主承销商。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;作用：&lt;/strong&gt; 这些投行在长达数月的准备期里，帮助阿里撰写了数百页的招股书，组织了覆盖全球的“路演”，向各大基金经理推介股票，最终完成了精准的定价和成功的发售。这是一个系统性、全球性的庞大工程。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;总结公司成长与融资的闯关地图&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;总结：公司成长与融资的“闯关地图”&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%80%bb%e7%bb%93%e5%85%ac%e5%8f%b8%e6%88%90%e9%95%bf%e4%b8%8e%e8%9e%8d%e8%b5%84%e7%9a%84%e9%97%af%e5%85%b3%e5%9c%b0%e5%9b%be&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;阶段&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;核心目标&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;融资轮次&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;主要玩家&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;玩家核心作用&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;知名案例 (融资金额为约数)&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;种子期&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;验证想法 (0→1)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;种子轮&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;天使投资人, 孵化器&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;导师与引路人&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Airbnb:&lt;/strong&gt; 从YC获得2万美元启动&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;初创期&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;验证市场 (1→10)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;A轮&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;风险投资 (VC)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;专业陪跑员&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;美团:&lt;/strong&gt; 获红杉资本1200万美元A轮融资&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;成长期&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;规模扩张 (10→100)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;B/C/D轮+&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;大型VC, PE, CVC&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;资源放大器&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;拼多多(C轮后IPO):&lt;/strong&gt; B轮1.1亿美元, C轮约14亿美元 / &lt;strong&gt;美团(F轮后IPO):&lt;/strong&gt; B轮5000万美元, F轮40亿美元&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;成熟期&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;规范上市 (100→N)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Pre-IPO轮&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;大型PE, 主权基金&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;上市敲门砖&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;阿里巴巴:&lt;/strong&gt; 引入中投、银湖等完成Pre-IPO轮融资&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;上市&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;公开募资，实现流通&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;IPO&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;[中介天团]&lt;/strong&gt; 投行等&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;专业服务商&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;阿里巴巴IPO:&lt;/strong&gt; 融资额约250亿美元, 高盛、摩根士丹利等6大投行联席承销&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;对赌协议&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;对赌协议&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%af%b9%e8%b5%8c%e5%8d%8f%e8%ae%ae&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;来深入探讨一下公司融资中一个非常关键且带有风险的条款——&lt;strong&gt;对赌协议 (Valuation Adjustment Mechanism, VAM)&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;“对赌协议”这个词听起来可能有些紧张刺激，但它的本质是一种&lt;strong&gt;估值调整机制（VAM）&lt;/strong&gt;。它约定了在未来某个时间点，如果公司未能达到之前设定的特定条件（比如业绩目标、上市目标等），投资方可以获得某种形式的补偿（例如回购股权、股权补偿）；反之，如果达到了甚至超出了目标，则投资方可能需要给予创业者某种奖励（通常是股权激励，但现在这种奖励机制相对较少）。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-什么是对赌协议-vam&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;1. 什么是对赌协议 (VAM)？&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e4%bb%80%e4%b9%88%e6%98%af%e5%af%b9%e8%b5%8c%e5%8d%8f%e8%ae%ae-vam&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;对赌协议，顾名思义，是投资方（或并购方）与融资方（通常是创业公司的股东或管理层）之间达成的一种协议。其核心是&lt;strong&gt;将公司未来的不确定性与当前估值挂钩&lt;/strong&gt;，通过设定特定条件来调整公司的估值，从而实现风险共担或激励约束。在西方，它被称为“估值调整机制”，听起来更中性一些。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;核心思想：&lt;/strong&gt; 今天的投资，明天的回报。但明天充满不确定性，那么就在今天把明天的“不确定性”用协议的方式固定下来，一旦达不到目标，就有相应的补偿或惩罚。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-为什么需要对赌协议&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;2. 为什么需要对赌协议？&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#2-%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e5%af%b9%e8%b5%8c%e5%8d%8f%e8%ae%ae&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;对赌协议的产生，是为了解决投融资双方在信息不对称和风险承担上的博弈。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;对于投资者：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;风险对冲：&lt;/strong&gt; 降低投资风险，特别是对于早期公司，未来业绩存在较大不确定性。VAM可以确保在未来业绩不达预期时，投资者获得一定的补偿。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;估值保护：&lt;/strong&gt; 在谈判时，创始人往往倾向于争取更高的估值。VAM可以让投资者在给予高估值的同时，设定业绩门槛，若达不到则通过调低估值来弥补。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;激励与约束：&lt;/strong&gt; 激励创始团队努力达成既定目标，因为达不到目标会面临惩罚，而达到目标则可能获取更大的收益（或避免惩罚）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;退出保障：&lt;/strong&gt; 特别是上市对赌，如果公司不能在约定时间内上市，投资者有权要求回购，从而保障资金的顺利退出。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;对于融资方（创始人/管理层）：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;获得融资：&lt;/strong&gt; 在市场竞争激烈或公司本身存在一定风险时，配合对赌协议可以更容易获得投资。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;争取更高估值：&lt;/strong&gt; 通过承诺未来的业绩，创始人可以争取到比现有情况更高的估值，从而获得更多融资额度或稀释更少股权。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;展示信心：&lt;/strong&gt; 签署对赌协议，也表明创始人对未来业绩充满信心，愿意为自己的承诺负责。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-对赌协议的常见形式&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;3. 对赌协议的常见形式&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#3-%e5%af%b9%e8%b5%8c%e5%8d%8f%e8%ae%ae%e7%9a%84%e5%b8%b8%e8%a7%81%e5%bd%a2%e5%bc%8f&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;对赌协议的形式多样，且往往是组合使用，以下是最常见的几种：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;业绩对赌 (Performance-based VAM)：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;最常见形式。&lt;/strong&gt; 基于公司未来一定时期内的财务指标（如净利润、营收）、用户指标（如用户增长量、月活用户）、市场占有率等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;触发条件及结果：&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;业绩未达标：&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;股权补偿：&lt;/strong&gt; 创始人向投资方无偿转让一定比例的股权或以较低价格出售。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;现金补偿：&lt;/strong&gt; 创始人向投资方支付一定金额的现金。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;股权回购：&lt;/strong&gt; 投资方有权要求以约定的价格（通常是投资成本加利息）将股权出售给创始人或公司。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;业绩超额完成：&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;股权激励：&lt;/strong&gt; 投资方将一部分股权无偿转让给创始人，或以较低价格出售给创始人（现在较少见，因投资方更关注自身回报）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;避免估值下调/肯定高估值：&lt;/strong&gt; 超额完成目标意味着公司价值得到验证，避免了对赌条款触发带来的估值下调风险，并为后续融资奠定更坚实的基础。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;上市对赌 (IPO-based VAM)：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基于公司能否在约定时间内（通常是3-5年内）成功上市。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;触发条件及结果：&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;未能在约定时间上市：&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;股权回购：&lt;/strong&gt; 投资方要求创始人或公司回购其全部或部分股权，通常以投资成本加固定回报率（如年化10%-20%）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;股权补偿：&lt;/strong&gt; 创始人向投资方无偿转让股权，提高其持股比例。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;清算优先权：&lt;/strong&gt; 如果公司清算，投资者优先获得全部投资款。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;成功上市：&lt;/strong&gt; 通常无额外奖励，但这意味着投资方成功通过二级市场退出，获取丰厚回报。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;其他：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;特定事件对赌：&lt;/strong&gt; 如某个重要技术研发成果的达成、某个关键市场牌照的获取、某个重要并购的完成。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;管理层锁定：&lt;/strong&gt; 约定管理层在一定时期内不得离职，否则需支付违约金。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;4-涉及方及其角色&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;4. 涉及方及其角色&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#4-%e6%b6%89%e5%8f%8a%e6%96%b9%e5%8f%8a%e5%85%b6%e8%a7%92%e8%89%b2&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;投资方：&lt;/strong&gt; 私募股权基金 (PE)、风险投资机构 (VC) 等。他们是发起并设计对赌协议的一方，旨在保护自身利益。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;融资方：&lt;/strong&gt; 通常是创业公司的&lt;strong&gt;创始人及核心管理团队&lt;/strong&gt;。协议的责任主体往往是创始人个人，因为公司的独立法人地位在很多情况下不能承担无限责任。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;目标公司：&lt;/strong&gt; 对赌协议的标的。若对赌失败，公司可能面临股权稀释、被要求赎回甚至影响正常运营的风险。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;5-对赌协议的利弊&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;5. 对赌协议的利弊&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#5-%e5%af%b9%e8%b5%8c%e5%8d%8f%e8%ae%ae%e7%9a%84%e5%88%a9%e5%bc%8a&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;利弊&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;对于创始人/融资方&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;对于投资方&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;优势&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;1. &lt;strong&gt;获得融资机会&lt;/strong&gt;：尤其在市场不确定或公司资历尚浅时。 &lt;!-- raw HTML omitted --&gt; 2. &lt;strong&gt;争取更高估值&lt;/strong&gt;：通过承诺未来，获得比当前业绩更高的估值。 &lt;!-- raw HTML omitted --&gt; 3. &lt;strong&gt;展示信心&lt;/strong&gt;：向市场和投资者证明自身实力。&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;1. &lt;strong&gt;保障投资安全&lt;/strong&gt;：降低投资风险，至少获得本金与基本回报。 &lt;!-- raw HTML omitted --&gt; 2. &lt;strong&gt;锁定投资收益&lt;/strong&gt;：通过回购条款实现强制退出和收益。 &lt;!-- raw HTML omitted --&gt; 3. &lt;strong&gt;激励管理层&lt;/strong&gt;：促使创业团队更努力达成目标。 &lt;!-- raw HTML omitted --&gt; 4. &lt;strong&gt;保护估值&lt;/strong&gt;：在业绩不达标时，调整估值，避免投资“高买”。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;劣势&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;1. &lt;strong&gt;巨大压力&lt;/strong&gt;：业绩压力可能导致短视行为，牺牲长期发展。 &lt;!-- raw HTML omitted --&gt; 2. &lt;strong&gt;个人风险&lt;/strong&gt;：如果以个人名义对赌，可能面临巨额赔偿甚至倾家荡产。 &lt;!-- raw HTML omitted --&gt; 3. &lt;strong&gt;股权稀释&lt;/strong&gt;：业绩对赌失败，导致股权无形中被稀释。 &lt;!-- raw HTML omitted --&gt; 4. &lt;strong&gt;公司负担&lt;/strong&gt;：回购条款可能导致公司陷入财务危机，甚至破产。 &lt;!-- raw HTML omitted --&gt; 5. &lt;strong&gt;影响控制权&lt;/strong&gt;：股权稀释可能影响对公司的控制权。&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;1. &lt;strong&gt;潜在的负面影响&lt;/strong&gt;：对赌可能促使创业者采取激进或不健康的策略。 &lt;!-- raw HTML omitted --&gt; 2. &lt;strong&gt;增加谈判复杂性&lt;/strong&gt;：对赌条款的设计和执行需要大量精力。 &lt;!-- raw HTML omitted --&gt; 3. &lt;strong&gt;声誉受损风险&lt;/strong&gt;：如果对赌失败导致公司倒闭，对其声誉也有影响。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;6-真实案例解析&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;6. 真实案例解析&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#6-%e7%9c%9f%e5%ae%9e%e6%a1%88%e4%be%8b%e8%a7%a3%e6%9e%90&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;A. 成功对赌的案例：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;蒙牛与摩根士丹利（Morgan Stanley）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;背景：&lt;/strong&gt; 2003年，蒙牛急需资金扩大市场。在与摩根士丹利、鼎晖投资、ING集团谈判后，签署了对赌协议。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;对赌内容：&lt;/strong&gt; 约定蒙牛在2004-2006年期间的复合年增长率不低于50%，三年后若成功在港上市，投资方即套现退出。若未达标，牛根生（蒙牛创始人）需转让部分股权给投资方；若超额完成，投资方将部分股权转让给蒙牛管理层。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;结果：&lt;/strong&gt; 蒙牛超额完成业绩目标，并于2004年成功在港交所上市。投资方不仅获得了丰厚回报，还向蒙牛管理层转让了部分股权作为奖励。 这是一个教科书式的&lt;strong&gt;双赢&lt;/strong&gt;案例。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;周黑鸭与天图投资&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;背景：&lt;/strong&gt; 2010年，周黑鸭获得天图投资5000万元。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;对赌内容：&lt;/strong&gt; 约定周黑鸭若在2012年底未能实现利润总额不低于1亿元，未达标部分则由周黑鸭创始股东以零对价向天图出售同等市值的股份。但若利润超额，则周黑鸭有权要求天图向创始股东出售其持有的不超过总股本10%的股份。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;结果：&lt;/strong&gt; 周黑鸭提前完成了业绩目标，天图投资将部分股权奖励给了周黑鸭创始团队，并最终在港交所成功上市，实现了巨额回报。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;B. 失败对赌的案例：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;俏江南与鼎晖投资&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;背景：&lt;/strong&gt; 2008年，俏江南为扩张和上市，引入鼎晖投资，获得2亿元投资，鼎晖占股10%。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;对赌内容：&lt;/strong&gt; 约定了俏江南必须在特定时间内（一说是2012年底）成功上市，否则鼎晖有权要求汪小菲（或其关联公司）回购其股权（回购价格为投资本金加12%的利息）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;结果：&lt;/strong&gt; 由于当时国内餐饮企业上市政策收紧，俏江南未能如期上市。鼎晖多次催促回购未果。最终，鼎晖通过仲裁胜诉，获得了对俏江南大股东控股公司的控制权，并推动了清算。创始团队不仅失去了公司的控制权，还背负了巨额债务。这是一个经典的&lt;strong&gt;股权丧失、控制权旁落&lt;/strong&gt;的案例。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;雷士照明与软银赛富&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;背景：&lt;/strong&gt; 2008年，雷士照明获得软银赛富2000万美元投资。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;对赌内容：&lt;/strong&gt; 约定雷士照明在2011年12月31日前未能成功上市，软银赛富拥有回购权，由吴长江（创始人）按年息10%回购软银赛富持有的所有股份。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;结果：&lt;/strong&gt; 雷士照明于2010年成功上市，避免了对赌条款的触发。但随后由于创始人与投资方在公司管理上的矛盾激化，最终导致了创始人吴长江出局的“宫斗”事件。这说明即使对赌成功，若后续经营理念不合，也可能导致冲突。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;7-对赌协议的最新趋势与中国司法实践&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;7. 对赌协议的最新趋势与中国司法实践&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#7-%e5%af%b9%e8%b5%8c%e5%8d%8f%e8%ae%ae%e7%9a%84%e6%9c%80%e6%96%b0%e8%b6%8b%e5%8a%bf%e4%b8%8e%e4%b8%ad%e5%9b%bd%e5%8f%b8%e6%b3%95%e5%ae%9e%e8%b7%b5&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;在中国，最高人民法院对对赌协议的司法实践经历了几个阶段：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;早期（对公司）无效：&lt;/strong&gt; 曾有过判例认为，创业者与投资方之间对赌有效，但投资者与“公司”之间关于业绩补偿、股权回购的对赌条款无效。 理由是这可能损害公司及公司债权人利益，违反资本不变原则。 中国最高人民法院在2012年的“海富案”中明确了这一立场。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;中后期（《九民纪要》等影响）：&lt;/strong&gt; 随着2019年《全国法院民商事审判工作会议纪要》（简称“《九民纪要》”）的发布，中国司法实践对对赌协议的效力认定进一步明确和细化。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;股东与投资者之间的对赌：&lt;/strong&gt; 只要不违反法律、行政法规的强制性规定，其效力通常会被认定为有效并支持实际履行，这在实践中争议不大。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;公司与投资者之间的对赌（尤其是股权回购或现金补偿）：&lt;/strong&gt; 《九民纪要》不再简单地认定此类对赌无效。 但是，法院将严格审查其履行是否符合《公司法》关于资本维持、不得抽逃出资以及股份回购的强制性规定。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;例如，如果投资者要求公司回购股权，公司必须完成合法的减资程序，否则法院可能不予支持其请求。 实践中，由于公司通常在业绩不佳时触发对赌，其管理层和股东可能不配合减资程序，这使得针对公司的股权回购条款在执行上仍面临巨大障碍。&lt;/li&gt;&#xA;&lt;li&gt;对于公司承担现金补偿义务的对赌，法院也会根据公司当时的利润状况综合判断，避免损害公司正常经营和债权人利益。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;总体来看：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对赌协议依然是投融资中常用的工具，特别是在初创公司估值存在较大不确定性时。&lt;/li&gt;&#xA;&lt;li&gt;条款设计越来越精细化，倾向于将责任主体明确为创始股东个人，以避免对公司产生直接冲击。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;回归本质：&lt;/strong&gt; 对赌协议不再仅仅是“保本保收益”的工具，更多是作为一种&lt;strong&gt;激励与约束机制&lt;/strong&gt;，推动公司实现既定目标。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;希望这份详尽的解释和真实案例，能帮助您全面理解对赌协议的方方面面。这是一个双刃剑，用得好能促进公司发展，用不好则可能带来灭顶之灾。因此，每一方在签署对赌协议时都必须慎之又慎。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Solidity 101</title>
      <link>http://localhost:1313/posts/202508-solidity101/</link>
      <pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/202508-solidity101/</guid>
      <category domain="http://localhost:1313/categories/technology/">Technology</category>
      <description>&lt;p&gt;学习&lt;a href=&#34;https://www.wtf.academy/zh/course/solidity101/HelloWeb3&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;Solidity 101&lt;/a&gt; 记录&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Solidity&lt;/code&gt; 是一种用于编写以太坊虚拟机（EVM）智能合约的编程语言。&lt;/p&gt;&#xA;&lt;h2 id=&#34;开发工具&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;开发工具&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%bc%80%e5%8f%91%e5%b7%a5%e5%85%b7&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;本教程中，我们将使用 Remix 运行 Solidity 合约。Remix 是以太坊官方推荐的智能合约集成开发环境（IDE），适合新手，可以在浏览器中快速开发和部署合约，无需在本地安装任何程序。网址：https://remix.ethereum.org&lt;/p&gt;&#xA;&lt;h2 id=&#34;hello-world&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;Hello world&lt;/span&gt;&#xA;  &lt;a href=&#34;#hello-world&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;pragma&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;solidity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 表示源文件将不允许小于 0.8.21 版本或大于等于 0.9.0 的编译器编译（第二个条件由 ^ 提供）&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;HelloWeb3&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 创建合约(contract)，合约名为 HelloWeb3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hello web3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Remix 会使用 Remix 虚拟机（以前称为 JavaScript 虚拟机）来模拟以太坊链，运行智能合约，类似在浏览器里运行一条测试链。&lt;/p&gt;&#xA;&lt;p&gt;Remix 还会为你分配一些测试账户，每个账户里有 100 ETH（测试代币），随意使用。&lt;/p&gt;&#xA;&lt;p&gt;点击部署 Deploy 即可部署合约。&lt;/p&gt;&#xA;&lt;h2 id=&#34;值类型&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;值类型&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%80%bc%e7%b1%bb%e5%9e%8b&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;值类型(Value Type) ：包括布尔型，整数型等等，这类变量赋值时候直接传递数值。&lt;/li&gt;&#xA;&lt;li&gt;引用类型(Reference Type) ：包括数组和结构体，这类变量占空间大，赋值时候直接传递地址（类似指针）。&lt;/li&gt;&#xA;&lt;li&gt;映射类型(Mapping Type) : Solidity中存储键值对的数据结构，可以理解为哈希表&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;布尔&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;布尔&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%b8%83%e5%b0%94&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_bool&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;整形&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;整形&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%95%b4%e5%bd%a2&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_uint&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;123456&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// +，-，*，/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 指数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 取余数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_numberbool&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 比大小&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;地址类型&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;地址类型&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%9c%b0%e5%9d%80%e7%b1%bb%e5%9e%8b&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;有两类：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;普通地址：存储一个 20 字节的值（以太坊地址的大小）。&lt;/li&gt;&#xA;&lt;li&gt;payable address: 比普通地址多了 transfer 和 send 两个成员方法，用于接收转账。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;......;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_add1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_adderss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 可以转账、查余额&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;定长字节数组&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;定长字节数组&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%ae%9a%e9%95%bf%e5%ad%97%e8%8a%82%e6%95%b0%e7%bb%84&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;定长字节数组: 属于值类型，数组长度在声明之后不能改变。根据字节数组的长度分为 bytes1, bytes8, bytes32 等类型。定长字节数组最多存储 32 bytes 数据，即bytes32。&lt;/li&gt;&#xA;&lt;li&gt;不定长字节数组: 属于引用类型（之后的章节介绍），数组长度在声明之后可以改变，包括 bytes 等。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;bytes32&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_byte32&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;MiniSolidity&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;bytes1&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_byte&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_byte32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 0x4d&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;枚举&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;枚举&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%9e%9a%e4%b8%be&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;类似C预言中的枚举&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 用enum将uint 0， 1， 2表示为Buy, Hold, Sell&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ActionSet&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Buy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Hold&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Sell&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 创建enum变量 action&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ActionSet&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;action&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ActionSet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Buy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;函数&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;函数&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%87%bd%e6%95%b0&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Solidity 中函数的形式：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 方括号中的是可写可不 写的关键字&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;parameter&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;types&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...]])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;internal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pure&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;override&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;modifiers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;types&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解释：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;function：声明函数时的固定用法。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;lt;function name&amp;gt;&lt;/code&gt;：函数名。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;([parameter types[, ...]])&lt;/code&gt;：圆括号内写入函数的参数，即输入到函数的变量类型和名称。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;{internal|external|public|private}&lt;/code&gt;：函数可见性说明符，共有4种。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;public：内部和外部均可见。&lt;/li&gt;&#xA;&lt;li&gt;private：只能从本合约内部访问，继承的合约也不能使用。&lt;/li&gt;&#xA;&lt;li&gt;external：只能从合约外部访问（但内部可以通过 this.f() 来调用，f是函数名）。&lt;/li&gt;&#xA;&lt;li&gt;internal: 只能从合约内部访问，继承的合约可以用。&lt;/li&gt;&#xA;&lt;li&gt;注意&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1：合约中定义的函数需要明确指定可见性，它们没有默认值。&lt;/li&gt;&#xA;&lt;li&gt;2：public|private|internal 也可用于修饰状态变量。public变量会自动生成同名的getter函数，用于查询数值。未标明可见性类型的状态变量，默认为internal。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;[pure|view|payable]&lt;/code&gt;：决定函数权限/功能的关键字。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;payable（可支付的）很好理解，带着它的函数，运行的时候可以给合约转入 ETH。&lt;/li&gt;&#xA;&lt;li&gt;pure 和 view 的介绍见下一节。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;[virtual|override]&lt;/code&gt;: 方法是否可以被重写，或者是否是重写方法。virtual用在父合约上，标识的方法可以被子合约重写。override用在自合约上，表明方法重写了父合约的方法。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;lt;modifiers&amp;gt;&lt;/code&gt;: 自定义的修饰器，可以有0个或多个修饰器。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;[returns ()]&lt;/code&gt;：函数返回的变量类型和名称。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;lt;function body&amp;gt;&lt;/code&gt;: 函数体。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;solidity 引入&lt;code&gt;pure|view&lt;/code&gt;这两个关键字主要是因为 以太坊交易需要支付gas。合约的状态变量存储在链上，gas fee 很贵，如果计算不改变链上状态，就可以不用付 gas。包含 pure 和 view 关键字的函数是不改写链上状态的，因此用户直接调用它们是不需要付 gas 的（注意，合约中非 pure/view 函数调用 pure/view 函数时需要付gas）。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;pure，中文意思是“纯”，这里可以理解为”纯打酱油的”。pure 函数既不能读取也不能写入链上的状态变量。&lt;/li&gt;&#xA;&lt;li&gt;view，“看”，这里可以理解为“看客”。view函数能读取但也不能写入状态变量。&lt;/li&gt;&#xA;&lt;li&gt;非 pure 或 view 的函数既可以读取也可以写入状态变量。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;在以太坊中，以下语句被视为修改链上状态：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;写入状态变量。&lt;/li&gt;&#xA;&lt;li&gt;释放事件。&lt;/li&gt;&#xA;&lt;li&gt;创建其他合约。&lt;/li&gt;&#xA;&lt;li&gt;使用 selfdestruct.&lt;/li&gt;&#xA;&lt;li&gt;通过调用发送以太币。&lt;/li&gt;&#xA;&lt;li&gt;调用任何未标记 view 或 pure 的函数。&lt;/li&gt;&#xA;&lt;li&gt;使用低级调用（low-level calls）。&lt;/li&gt;&#xA;&lt;li&gt;使用包含某些操作码的内联汇编。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;pure-vs-view&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;pure vs view&lt;/span&gt;&#xA;  &lt;a href=&#34;#pure-vs-view&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;pragma&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;solidity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FunctionTypes&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 这个函数不能标记为pure，&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// pure: 不能读写链上的状态变量&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;addPure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;new_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;new_number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// view: 可以读不可以写&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;addView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;new_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;new_number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;internal-vs-external&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;internal vs external&lt;/span&gt;&#xA;  &lt;a href=&#34;#internal-vs-external&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;由于 internal 函数只能由合约内部调用，我们必须再定义一个 external 的 minusCall() 函数，通过它间接调用内部的 minus() 函数。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;pragma&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;solidity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FunctionTypes&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;minus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;internal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 内部函数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 合约内的函数可以调用内部函数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;minusCall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;minus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;payable&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;payable&lt;/span&gt;&#xA;  &lt;a href=&#34;#payable&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;如果在remix的value中设置了1eth，点击minusPayable后，这1eth会转入合约地址，合约地址的余额会增加：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{&#xA;&#x9;&amp;#34;0&amp;#34;: &amp;#34;uint256: balance 1000000000000000000&amp;#34;&#xA;}&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;pragma&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;solidity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FunctionTypes&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;minus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;internal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;minusCall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;minus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 能给合约支付eth的函数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;minusPayable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;minus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;函数输出&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;函数输出&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%87%bd%e6%95%b0%e8%be%93%e5%87%ba&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;有两个：return 和 returns&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;returns：跟在函数名后面，用于声明返回的变量类型及变量名。&lt;/li&gt;&#xA;&lt;li&gt;return：用于函数主体中，返回指定的变量。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returnMultiple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;因为&lt;code&gt;[1,2,3]&lt;/code&gt;会默认为&lt;code&gt;uint8(3)&lt;/code&gt;，因此&lt;code&gt;[uint256(1),2,5]中&lt;/code&gt;首个元素必须强转&lt;code&gt;uint256&lt;/code&gt;来声明该数组内的元素皆为此类型。数组类型返回值默认必须用memory修饰。&lt;/p&gt;&#xA;&lt;h2 id=&#34;命名式返回&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;命名式返回&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%91%bd%e5%90%8d%e5%bc%8f%e8%bf%94%e5%9b%9e&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returnNamed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_bool&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_array&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;结构式复制&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;结构式复制&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%bb%93%e6%9e%84%e5%bc%8f%e5%a4%8d%e5%88%b6&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;readReturn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 读取所有返回值&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returnNamed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 读取部分&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;(,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_bool2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returnNamed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;变量数据存储和作用域&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;变量数据存储和作用域&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%8f%98%e9%87%8f%e6%95%b0%e6%8d%ae%e5%ad%98%e5%82%a8%e5%92%8c%e4%bd%9c%e7%94%a8%e5%9f%9f&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;引用类型包括数组和结构体，由于这类变量比较复杂，占用存储空间大，在使用时必须要声明数据存储的位置。&lt;/p&gt;&#xA;&lt;p&gt;Solidity数据存储位置有三类：storage，memory和calldata。不同存储位置的gas成本不同。storage类型的数据存在链上，类似计算机的硬盘，消耗gas多；memory和calldata类型的临时存在内存里，消耗gas少。整体消耗gas从多到少依次为：storage &amp;gt; memory &amp;gt; calldata&lt;/p&gt;&#xA;&lt;p&gt;与memory的不同点在于calldata变量不能修改（immutable），一般用于函数的参数。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fCalldata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;calldata&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;calldata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//参数为calldata数组，不能被修改&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// _x[0] = 0 //这样修改会报错&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在不同存储类型相互赋值时候，有时会产生独立的副本（修改新变量不会影响原变量），有时会产生引用（修改新变量会影响原变量）&lt;/p&gt;&#xA;&lt;p&gt;赋值本质上是创建引用指向本体，因此修改本体或者是引用，变化可以被同步。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;storage（合约的状态变量）赋值给本地storage（函数里的）时候，会创建引用，改变新变量会影响原变量。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 状态变量：数组 x&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fStorage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//声明一个storage的变量 xStorage，指向x。修改xStorage也会影响x&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;storage&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;xStorage&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;xStorage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;memory赋值给memory，会创建引用，改变新变量会影响原变量。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;其他情况下，赋值创建的是本体的副本，即对二者之一的修改，并不会同步到另一方。这有时会涉及到开发中的问题，比如从storage中读取数据，赋值给memory，然后修改memory的数据，但如果没有将memory的数据赋值回storage，那么storage的数据是不会改变的。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;变量的作用域&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;变量的作用域&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%8f%98%e9%87%8f%e7%9a%84%e4%bd%9c%e7%94%a8%e5%9f%9f&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;有三种，分别是状态变量（state variable），局部变量（local variable）和全局变量(global variable)&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;状态变量存储在链上，所有合约内函数都可以访问，gas消耗高。状态变量在合约内、函数外声明。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Variables&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;局部变量是仅在函数执行过程中有效的变量，函数退出后，变量无效。局部变量不上链，gas低。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;全局变量是全局范围工作的变量，都是solidity预留关键字。他们可以在函数内不声明直接使用。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;global&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bytes&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sender&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 请求发起地址&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;blockNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;block&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 当前区块高度&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;bytes&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 请求的数据&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;blockNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;常见的全局变量：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;blockhash(uint blockNumber): (bytes32)&lt;/code&gt;：给定区块的哈希值 – 只适用于最近的256个区块，不包含当前区块。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;block.coinbase: (address payable)&lt;/code&gt;：当前区块矿工的地址。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;block.gaslimit: (uint)&lt;/code&gt;：当前区块的gaslimit。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;block.number: (uint)&lt;/code&gt;：当前区块的number。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;block.timestamp: (uint)&lt;/code&gt;：当前区块的时间戳，为unix纪元以来的秒。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;gasleft(): (uint256)&lt;/code&gt;：剩余 gas。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;msg.data: (bytes calldata)&lt;/code&gt;：完整call data。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;msg.sender: (address payable)&lt;/code&gt;：消息发送者 (当前caller)。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;msg.sig: (bytes4)&lt;/code&gt;：calldata的前四个字节 (function identifier)。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;msg.value: (uint)&lt;/code&gt;：当前交易发送的wei值。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;block.blobbasefee: (uint)&lt;/code&gt;：当前区块的blob基础费用。这是Cancun升级新增的全局变量。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;blobhash(uint index): (bytes32)&lt;/code&gt;：返回跟当前交易关联的第index个blob的版本化哈希（第一个字节为版本号，当前为0x01，后面接KZG承诺的SHA256哈希的最后31个字节）。若当前交易不包含blob，则返回空字节。这是Cancun升级新增的全局变量。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;以太单位&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;以太单位&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%bb%a5%e5%a4%aa%e5%8d%95%e4%bd%8d&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;Solidity中不存在小数点，以0代替为小数点，来确保交易的精确度，并且防止精度的损失：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;wei: 1&lt;/li&gt;&#xA;&lt;li&gt;gwei: 1e9 = 1000000000&lt;/li&gt;&#xA;&lt;li&gt;ether: 1e18 = 1000000000000000000&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;时间单位&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;时间单位&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%97%b6%e9%97%b4%e5%8d%95%e4%bd%8d&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;可以在合约中规定一个操作必须在一周内完成，或者某个事件在一个月后发生。这样就能让合约的执行可以更加精确，不会因为技术上的误差而影响合约的结果。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;seconds: 1&lt;/li&gt;&#xA;&lt;li&gt;minutes: 60 seconds = 60&lt;/li&gt;&#xA;&lt;li&gt;hours: 60 minutes = 3600&lt;/li&gt;&#xA;&lt;li&gt;days: 24 hours = 86400&lt;/li&gt;&#xA;&lt;li&gt;weeks: 7 days = 604800&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;引用类型&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;引用类型&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%bc%95%e7%94%a8%e7%b1%bb%e5%9e%8b&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;有两个，一个是数组array，一个是结构体struct&lt;/p&gt;&#xA;&lt;h2 id=&#34;数组&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;数组&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%95%b0%e7%bb%84&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;有定长和变长两种&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 固定长度 Array&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;bytes1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 可变长度 Array&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;bytes1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;bytes&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// bytes比较特殊，是数组，但是不用加[]。另外，不能用byte[]声明单字节数组，可以使用bytes或bytes1[]。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// bytes 比 bytes1[] 省gas。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于memory修饰的动态数组，可以用new操作符来创建，但是必须声明长度，并且声明后长度不能改变。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// memory动态数组&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array8&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[](&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;bytes&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果创建的是动态数组，需要一个一个元素的赋值。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[](&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;成员：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;length&lt;/code&gt;: 数组有一个包含元素数量的length成员，memory数组的长度在创建后是固定的。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;push()&lt;/code&gt;: 动态数组拥有push()成员，可以在数组最后添加一个0元素，并返回该元素的引用。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;push(x)&lt;/code&gt;: 动态数组拥有push(x)成员，可以在数组最后添加一个x元素。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;pop()&lt;/code&gt;: 动态数组拥有pop()成员，可以移除数组最后一个元素。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;结构体&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;结构体&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%bb%93%e6%9e%84%e4%bd%93&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;有四种赋值的方法：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 结构体&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;score&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Student&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 初始一个student结构体&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//  给结构体赋值&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 方法1:在函数中创建一个storage的struct引用&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;initStudent1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Student&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;storage&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_student&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// assign a copy of student&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;_student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;score&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 方法2:直接引用状态变量的struct&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;initStudent2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;score&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 方法3:构造函数式&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;initStudent3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;student&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;90&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 方法4:key value&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;initStudent4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;student&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;score&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;映射类型&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;映射类型&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%98%a0%e5%b0%84%e7%b1%bb%e5%9e%8b&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;声明映射的格式为&lt;code&gt;mapping(_KeyType =&amp;gt; _ValueType)&lt;/code&gt;，其中&lt;code&gt;_KeyType&lt;/code&gt;和&lt;code&gt;_ValueType&lt;/code&gt;分别是Key和Value的变量类型。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;idToAddress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// id映射到地址&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;swapPair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 币对的映射，地址到地址&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;映射的规则&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;映射的规则&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%98%a0%e5%b0%84%e7%9a%84%e8%a7%84%e5%88%99&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;映射的&lt;code&gt;_KeyType&lt;/code&gt;只能选择Solidity内置的值类型，比如&lt;code&gt;uint&lt;/code&gt;，&lt;code&gt;address&lt;/code&gt;等，不能用自定义的结构体。而&lt;code&gt;_ValueType&lt;/code&gt;可以使用自定义的类型。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;映射的存储位置必须是&lt;code&gt;storage&lt;/code&gt;，因此可以用于合约的状态变量，不能用于&lt;code&gt;public&lt;/code&gt;函数的参数或返回结果中，因为mapping记录的是一种关系 (key - value pair)。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如果映射声明为&lt;code&gt;public&lt;/code&gt;，那么Solidity会自动给你创建一个&lt;code&gt;getter&lt;/code&gt;函数，可以通过Key来查询对应的Value。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;给映射新增的键值对的语法为&lt;code&gt;_Var[_Key] = _Value&lt;/code&gt;，其中_Var是映射变量名，&lt;code&gt;_Key&lt;/code&gt;和&lt;code&gt;_Value&lt;/code&gt;对应新增的键值对。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;writeMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;idToAddress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;变量的初始值&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;变量的初始值&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%8f%98%e9%87%8f%e7%9a%84%e5%88%9d%e5%a7%8b%e5%80%bc&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;值类型初始值&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;boolean: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;string: &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;（空字符串）&lt;/li&gt;&#xA;&lt;li&gt;int/uint: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;enum: 枚举第一个元素（如&lt;code&gt;enum Action {Buy, Hold}&lt;/code&gt;初始为&lt;code&gt;Buy&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;li&gt;address: &lt;code&gt;0x0000000000000000000000000000000000000000&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;function（内部/外部）: 空白函数&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;引用类型初始值&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;mapping: 所有元素为对应类型默认值&lt;/li&gt;&#xA;&lt;li&gt;struct: 所有成员为默认值（如&lt;code&gt;struct Student {uint id;}&lt;/code&gt;初始&lt;code&gt;id=0&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;li&gt;动态数组: &lt;code&gt;[]&lt;/code&gt;（空数组）&lt;/li&gt;&#xA;&lt;li&gt;静态数组: 所有成员为默认值（如&lt;code&gt;uint[3]&lt;/code&gt;初始&lt;code&gt;[0,0,0]&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;delete操作符&lt;/strong&gt;：将变量重置为初始值（如&lt;code&gt;delete _bool&lt;/code&gt;将&lt;code&gt;_bool&lt;/code&gt;设为&lt;code&gt;false&lt;/code&gt;）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;常数&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;常数&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%b8%b8%e6%95%b0&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;constant（常量）和immutable（不变量）。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;constant&lt;/code&gt; 与 &lt;code&gt;immutable&lt;/code&gt; 关键字&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用于状态变量，初始化后值不可改，提升安全性且节省gas。&lt;/li&gt;&#xA;&lt;li&gt;仅数值变量适用，&lt;code&gt;string&lt;/code&gt;和&lt;code&gt;bytes&lt;/code&gt;可声明为&lt;code&gt;constant&lt;/code&gt;，不可为&lt;code&gt;immutable&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;constant&lt;/code&gt; 特性&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;必须声明时初始化，后续不可修改，否则编译报错。&lt;/li&gt;&#xA;&lt;li&gt;示例：&lt;code&gt;uint256 constant MY_CONST = 10;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// constant变量必须在声明的时候初始化，之后不能改变&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;constant&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CONSTANT_NUM&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;constant&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CONSTANT_STRING&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0xAA&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;bytes&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;constant&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CONSTANT_BYTES&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;WTF&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;constant&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CONSTANT_ADDRESS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0000000000000000000000000000000000000000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;immutable&lt;/code&gt; 特性&lt;/strong&gt;：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可在声明时或构造函数中初始化（v0.8.21后未显式初始化用数值初始值）。&lt;/li&gt;&#xA;&lt;li&gt;声明与构造函数均初始化时，以构造函数为准，支持全局变量/自定义函数初始化。&lt;/li&gt;&#xA;&lt;li&gt;示例：&lt;code&gt;uint256 immutable IMMUTABLE_VAL; constructor() { IMMUTABLE_VAL = 20; }&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// immutable变量可以在constructor里初始化，之后不能改变&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;immutable&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IMMUTABLE_NUM&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9999999999&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 在`Solidity v8.0.21`以后,下列变量数值暂为初始值&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;immutable&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IMMUTABLE_ADDRESS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;immutable&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IMMUTABLE_BLOCK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;immutable&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IMMUTABLE_TEST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;控制流&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;控制流&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%8e%a7%e5%88%b6%e6%b5%81&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;也就是if else while for 之类的，和其他语言一样。&lt;/p&gt;&#xA;&lt;h2 id=&#34;构造函数和修饰器&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;构造函数和修饰器&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0%e5%92%8c%e4%bf%ae%e9%a5%b0%e5%99%a8&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;构造函数（constructor），修饰器（modifier）。&lt;/p&gt;&#xA;&lt;h2 id=&#34;构造函数&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;构造函数&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;每个合约可以定义一个，并在部署合约的时候自动运行一次。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;initOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;initOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;修饰器-modifier&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;修饰器 modifier&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%bf%ae%e9%a5%b0%e5%99%a8-modifier&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;类似面向对象编程中的装饰器，声明函数拥有的特性，并减少代码冗余。&lt;code&gt;modifier&lt;/code&gt;的主要使用场景是运行函数前的检查，例如地址，变量，余额等。&lt;/p&gt;&#xA;&lt;p&gt;定义了一个&lt;code&gt;changeOwner&lt;/code&gt;函数，运行它可以改变合约的&lt;code&gt;owner&lt;/code&gt;，但是由于&lt;code&gt;onlyOwner&lt;/code&gt;修饰符的存在，只有原先的&lt;code&gt;owner&lt;/code&gt;可以调用，别人调用就会报错。这也是最常用的控制智能合约权限的方法。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 定义modifier&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;modifier&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;onlyOwner&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sender&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 检查调用者是否为owner地址&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;   &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 如果是的话，继续运行函数主体；否则报错并revert交易&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 带有onlyOwner修饰符的函数只能被owner地址调用，比如下面这个例子&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;changeOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_newOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;onlyOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nx&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_newOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 只有owner地址运行这个函数，并改变owner&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;事件-event&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;事件 event&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%ba%8b%e4%bb%b6-event&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;事件（event）定义：EVM日志的抽象，用于记录合约关键操作，支持前端监听响应，且存储成本低（约2,000 gas/次，远低于链上存储）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;声明事件&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;声明事件&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%a3%b0%e6%98%8e%e4%ba%8b%e4%bb%b6&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;事件的声明由event关键字开头，接着是事件名称，括号里面写好事件需要记录的变量类型和变量名。以ERC20代币合约的Transfer事件为例：&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;from&lt;/code&gt;和&lt;code&gt;to&lt;/code&gt;前面带有&lt;code&gt;indexed&lt;/code&gt;关键字，他们会保存在以太坊虚拟机日志的topics中，方便之后检索。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;indexed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;indexed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;释放事件&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;释放事件&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e9%87%8a%e6%94%be%e4%ba%8b%e4%bb%b6&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;在下面的例子中，每次用&lt;code&gt;_transfer()&lt;/code&gt;函数进行转账操作的时候，都会释放&lt;code&gt;Transfer&lt;/code&gt;事件，并记录相应的变量。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 定义_transfer函数，执行转账逻辑&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10000000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 给转账地址一些初始代币&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// from地址减去转账数量&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;_balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// to地址加上转账数量&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 释放事件&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;evm-日志&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;EVM 日志&lt;/span&gt;&#xA;  &lt;a href=&#34;#evm-%e6%97%a5%e5%bf%97&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;以太坊虚拟机（EVM）用日志Log来存储Solidity事件，每条日志记录都包含主题&lt;code&gt;topics&lt;/code&gt;和数据&lt;code&gt;data&lt;/code&gt;两部分。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202508-solidity101/image.png&#39; alt=&#34;alt text&#34; height=&#34;585&#34; width=&#34;1920&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;主题-topics&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;主题 topics&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%b8%bb%e9%a2%98-topics&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;日志的第一部分是主题数组，用于描述事件，长度不能超过4。它的第一个元素是事件的签名（哈希）。对于上面的Transfer事件，它的事件哈希就是：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;keccak256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Transfer(address,address,uint256)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;indexed&lt;/code&gt;标记的参数可以理解为检索事件的索引“键”，方便之后搜索。每个 &lt;code&gt;indexed &lt;/code&gt;参数的大小为固定的256比特，如果参数太大了（比如字符串），就会自动计算哈希存储在主题中。&lt;/p&gt;&#xA;&lt;h3 id=&#34;数据-data&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;数据 data&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%95%b0%e6%8d%ae-data&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;事件中不带 &lt;code&gt;indexed&lt;/code&gt; 的参数会被存储在 &lt;code&gt;data&lt;/code&gt; 部分中，可以理解为事件的“值”。&lt;code&gt;data&lt;/code&gt; 部分的变量不能被直接检索，但可以存储任意大小的数据。因此一般 &lt;code&gt;data&lt;/code&gt; 部分可以用来存储复杂的数据结构，例如数组和字符串等等，因为这些数据超过了256比特，即使存储在事件的 &lt;code&gt;topics&lt;/code&gt; 部分中，也是以哈希的方式存储。另外，&lt;code&gt;data&lt;/code&gt; 部分的变量在存储上消耗的gas相比于 &lt;code&gt;topics&lt;/code&gt; 更少。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pragma&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;solidity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FunctionTypes&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;mapping&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;indexed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;indexed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 定义_transfer函数，执行转账逻辑&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;_balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10000000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;_balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;_balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 释放事件&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;部署后可以看到日志：&lt;/p&gt;&#xA;&lt;p&gt;其中from式产生日志的合约地址，topic是事件签名(哈希)，args部分是事件参数&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;nt&#34;&gt;&amp;#34;from&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0xd9145CCE52D386f254917e481eB44e9943F39138&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;nt&#34;&gt;&amp;#34;topic&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;nt&#34;&gt;&amp;#34;event&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Transfer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;nt&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;nt&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0x5B38Da6a701c568545dCfcB03FcB875f56beddC4&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;nt&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0x1111111111111111111111111111111111111111&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;nt&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;继承-inheritance&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;继承 inheritance&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%bb%a7%e6%89%bf-inheritance&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;包括简单继承，多重继承，以及修饰器（Modifier）和构造函数（Constructor）的继承。&lt;/p&gt;&#xA;&lt;h2 id=&#34;规则&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;规则&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e8%a7%84%e5%88%99&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;virtual&lt;/code&gt;: 父合约中的函数，如果希望子合约重写，需要加上&lt;code&gt;virtual&lt;/code&gt;关键字。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;override&lt;/code&gt;：子合约重写了父合约中的函数，需要加上&lt;code&gt;override&lt;/code&gt;关键字。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;简单继承&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;简单继承&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ae%80%e5%8d%95%e7%bb%a7%e6%89%bf&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Yeye&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 定义3个function: hip(), pop(), yeye()，Log值为Yeye。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;hip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Yeye&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Yeye&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;yeye&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Yeye&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在写一个继承Yeye合约：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Baba&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Yeye&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 继承两个function: hip()和pop()，输出改为Baba。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;hip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;override&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Baba&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;override&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Baba&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;baba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Baba&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;多重继承&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;多重继承&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%a4%9a%e9%87%8d%e7%bb%a7%e6%89%bf&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;继承时要按辈分最高到最低的顺序排。比如写一个&lt;code&gt;Erzi&lt;/code&gt;合约，继承&lt;code&gt;Yeye合约&lt;/code&gt;和&lt;code&gt;Baba&lt;/code&gt;合约，那么就要写成&lt;code&gt;contract Erzi is Yeye, Baba&lt;/code&gt;，而不能写成&lt;code&gt;contract Erzi is Baba, Yeye&lt;/code&gt;，不然就会报错。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如果某一个函数在多个继承的合约里都存在，比如例子中的&lt;code&gt;hip()&lt;/code&gt;和&lt;code&gt;pop()&lt;/code&gt;，在子合约里必须重写，不然会报错。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;重写在多个父合约中都重名的函数时，&lt;code&gt;override&lt;/code&gt;关键字后面要加上所有父合约名字，例如&lt;code&gt;override(Yeye, Baba)&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Erzi&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Yeye&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Baba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 继承两个function: hip()和pop()，输出值为Erzi。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;hip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;override&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Yeye&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Baba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Erzi&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;override&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Yeye&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Baba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Erzi&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;修饰器的继承&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;修饰器的继承&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%bf%ae%e9%a5%b0%e5%99%a8%e7%9a%84%e7%bb%a7%e6%89%bf&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Solidity中的修饰器（Modifier）同样可以继承，用法与函数继承类似，在相应的地方加&lt;code&gt;virtual&lt;/code&gt;和&lt;code&gt;override&lt;/code&gt;关键字即可。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;modifier&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exactDividedBy2And3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Identifier&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//计算一个数分别被2除和被3除的值，但是传入的参数必须是2和3的倍数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getExactDividedBy2And3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_dividend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exactDividedBy2And3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_dividend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getExactDividedBy2And3WithoutModifier&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_dividend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//计算一个数分别被2除和被3除的值&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getExactDividedBy2And3WithoutModifier&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_dividend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;div2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_dividend&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;div3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_dividend&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;div2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;div3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;构造函数的继承&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;构造函数的继承&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0%e7%9a%84%e7%bb%a7%e6%89%bf&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;子合约有两种方法继承父合约的构造函数。举个简单的例子，父合约A里面有一个状态变量a，并由构造函数的参数来确定：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 构造函数的继承&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&#xA;&lt;li&gt;在继承时声明父构造函数的参数，例如：&lt;code&gt;contract B is A(1)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;在子合约的构造函数中声明构造函数的参数，例如：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;C&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;调用父合约的函数&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;调用父合约的函数&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e8%b0%83%e7%94%a8%e7%88%b6%e5%90%88%e7%ba%a6%e7%9a%84%e5%87%bd%e6%95%b0&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;有两种：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;直接调用：&lt;code&gt;父合约名.函数名()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;callParent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Yeye&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;使用super关键字：子合约可以利用&lt;code&gt;super.函数名()&lt;/code&gt;来调用最近的父合约函数。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Solidity继承关系按声明时&lt;code&gt;从右到左&lt;/code&gt;的顺序是：&lt;code&gt;contract Erzi is Yeye, Baba&lt;/code&gt;，那么Baba是最近的父合约，super.pop()将调用Baba.pop()而不是Yeye.pop()：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;callParentSuper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 将调用最近的父合约函数，Baba.pop()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kr&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;菱形继承&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;菱形继承&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e8%8f%b1%e5%bd%a2%e7%bb%a7%e6%89%bf&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;在多重+菱形继承链条上使用&lt;code&gt;super&lt;/code&gt;关键字时，需要注意的是使用&lt;code&gt;super&lt;/code&gt;会调用继承链条上的每一个合约的相关函数，而不是只调用最近的父合约。&lt;/p&gt;&#xA;&lt;p&gt;在下面的例子中，调用合约&lt;code&gt;people&lt;/code&gt;中的&lt;code&gt;super.bar()&lt;/code&gt;会依次调用&lt;code&gt;Eve&lt;/code&gt;、&lt;code&gt;Adam&lt;/code&gt;，最后是&lt;code&gt;God&lt;/code&gt;合约&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pragma&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;solidity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* 继承树：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;  God&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; /  \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;Adam Eve&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; \  /&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;people&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;God&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;God.foo called&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;God.bar called&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Adam&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;God&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;override&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Adam.foo called&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kr&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;override&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Adam.bar called&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kr&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Eve&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;God&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;override&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Eve.foo called&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kr&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;override&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Eve.bar called&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kr&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;people&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Adam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Eve&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;override&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Adam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Eve&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kr&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;override&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Adam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Eve&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kr&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;抽象合约和接口&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;抽象合约和接口&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%8a%bd%e8%b1%a1%e5%90%88%e7%ba%a6%e5%92%8c%e6%8e%a5%e5%8f%a3&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;这里使用&lt;code&gt;ERC721&lt;/code&gt;的接口合约为例介绍Solidity中的&lt;code&gt;抽象合约（abstract）&lt;/code&gt;和&lt;code&gt;接口（interface）&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;抽象合约&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;抽象合约&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%8a%bd%e8%b1%a1%e5%90%88%e7%ba%a6&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;如果一个智能合约里至少有一个未实现的函数，即某个函数缺少主体{}中的内容，则必须将该合约标为abstract，不然编译会报错；另外，未实现的函数需要加virtual，以便子合约重写。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;InsertionSort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;insertionSort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;接口&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;接口&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%8e%a5%e5%8f%a3&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;接口类似于抽象合约，但不实现任何功能。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;接口的规则&lt;/strong&gt;：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不能包含状态变量&lt;/li&gt;&#xA;&lt;li&gt;不能包含构造函数&lt;/li&gt;&#xA;&lt;li&gt;不能继承除接口外的其他合约&lt;/li&gt;&#xA;&lt;li&gt;所有函数都必须是&lt;code&gt;external&lt;/code&gt;且不能有函数体&lt;/li&gt;&#xA;&lt;li&gt;继承接口的非抽象合约必须实现接口定义的所有功能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;虽然接口不实现任何功能，但它非常重要。接口是智能合约的骨架，定义了合约的功能以及如何触发它们：如果智能合约实现了某种接口（比如ERC20或ERC721），其他Dapps和智能合约就知道如何与它交互。因为接口提供了两个重要的信息：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;合约里每个函数的bytes4选择器，以及函数签名函数名(每个参数类型）。&lt;/li&gt;&#xA;&lt;li&gt;接口id（更多信息见EIP165）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;另外，接口与合约ABI（Application Binary Interface）等价，可以相互转换：编译接口可以得到合约的ABI，利用abi-to-sol工具，也可以将ABI json文件转换为接口sol文件。&lt;/p&gt;&#xA;&lt;p&gt;以ERC721接口合约IERC721为例，它定义了3个event和9个function，所有ERC721标准的NFT都实现了这些函数。我们可以看到，接口和常规合约的区别在于每个函数都以;代替函数体{ }结尾。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IERC721&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IERC165&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;indexed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;indexed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;indexed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Approval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;indexed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;indexed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;approved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;indexed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ApprovalForAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;indexed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;indexed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;approved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;balanceOf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ownerOf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;safeTransferFrom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;transferFrom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;approve&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getApproved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setApprovalForAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_approved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;isApprovedForAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;safeTransferFrom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bytes&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;calldata&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;IERC721事件：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Transfer&lt;/code&gt;事件：在转账时被释放，记录代币的发出地址from，接收地址to和tokenId。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Approval&lt;/code&gt;事件：在授权时被释放，记录授权地址owner，被授权地址approved和tokenId。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ApprovalForAll&lt;/code&gt;事件：在批量授权时被释放，记录批量授权的发出地址owner，被授权地址operator和授权与否的approved。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;IERC721函数:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;balanceOf&lt;/code&gt;：返回某地址的NFT持有量balance。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ownerOf&lt;/code&gt;：返回某tokenId的主人owner。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;transferFrom&lt;/code&gt;：普通转账，参数为转出地址from，接收地址to和tokenId。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;safeTransferFrom&lt;/code&gt;：安全转账（如果接收方是合约地址，会要求实现ERC721Receiver接口）。参数为转出地址from，接收地址to和tokenId。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;approve&lt;/code&gt;：授权另一个地址使用你的NFT。参数为被授权地址approve和tokenId。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;getApproved&lt;/code&gt;：查询tokenId被批准给了哪个地址。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;setApprovalForAll&lt;/code&gt;：将自己持有的该系列NFT批量授权给某个地址operator。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;isApprovedForAll&lt;/code&gt;：查询某地址的NFT是否批量授权给了另一个operator地址。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;safeTransferFrom&lt;/code&gt;：安全转账的重载函数，参数里面包含了data。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;什么时候使用接口&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;什么时候使用接口？&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%bb%80%e4%b9%88%e6%97%b6%e5%80%99%e4%bd%bf%e7%94%a8%e6%8e%a5%e5%8f%a3&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;如果我们知道一个合约实现了IERC721接口，我们不需要知道它具体代码实现，就可以与它交互。&lt;/p&gt;&#xA;&lt;p&gt;无聊猿&lt;code&gt;BAYC&lt;/code&gt;属于&lt;code&gt;ERC721&lt;/code&gt;代币，实现了&lt;code&gt;IERC721&lt;/code&gt;接口的功能。我们不需要知道它的源代码，只需知道它的合约地址，用&lt;code&gt;IERC721&lt;/code&gt;接口就可以与它交互，比如用&lt;code&gt;balanceOf()&lt;/code&gt;来查询某个地址的&lt;code&gt;BAYC&lt;/code&gt;余额，用&lt;code&gt;safeTransferFrom()&lt;/code&gt;来转账BAYC。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;interactBAYC&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 利用BAYC地址创建接口合约变量（ETH主网）&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;IERC721&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BAYC&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IERC721&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 通过接口调用BAYC的balanceOf()查询持仓量&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;balanceOfBAYC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BAYC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;balanceOf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 通过接口调用BAYC的safeTransferFrom()安全转账&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;safeTransferFromBAYC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;BAYC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;safeTransferFrom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;异常&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;异常&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%bc%82%e5%b8%b8&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;三种抛出异常的方法：&lt;code&gt;error&lt;/code&gt;，&lt;code&gt;require&lt;/code&gt;和&lt;code&gt;assert&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;error方&lt;/code&gt;法gas最少，其次是&lt;code&gt;assert&lt;/code&gt;，&lt;code&gt;require&lt;/code&gt;方法消耗gas最多。&lt;/p&gt;&#xA;&lt;h2 id=&#34;error-异常&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;error 异常&lt;/span&gt;&#xA;  &lt;a href=&#34;#error-%e5%bc%82%e5%b8%b8&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;error 异常方便且高效（省gas）。同时还可以在抛出异常的同时携带参数，帮助开发者更好地调试。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TransferNotOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 自定义error&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TransferNotOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 自定义的带参数的error&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在执行当中，&lt;code&gt;error&lt;/code&gt;必须搭配&lt;code&gt;revert（回退）&lt;/code&gt;命令使用。&lt;/p&gt;&#xA;&lt;p&gt;定义了一个&lt;code&gt;transferOwner1()&lt;/code&gt;函数，它会检查代币的&lt;code&gt;owner&lt;/code&gt;是不是发起人，如果不是，就会抛出&lt;code&gt;TransferNotOwner&lt;/code&gt;异常；如果是的话，就会转账。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;transferOwner1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_owners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;revert&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TransferNotOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// revert TransferNotOwner(msg.sender);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_owners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;require-异常&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;require 异常&lt;/span&gt;&#xA;  &lt;a href=&#34;#require-%e5%bc%82%e5%b8%b8&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;唯一的缺点就是gas随着描述异常的字符串长度增加，比error命令要高。使用方法：&lt;code&gt;require(检查条件，&amp;quot;异常的描述&amp;quot;)&lt;/code&gt;，当检查条件不成立的时候，就会抛出异常。&lt;/p&gt;&#xA;&lt;p&gt;使用require重写上面的：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;transferOwner2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_owners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Transfer Not Owner&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_owners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;assert-异常&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;assert 异常&lt;/span&gt;&#xA;  &lt;a href=&#34;#assert-%e5%bc%82%e5%b8%b8&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;assert&lt;/code&gt;命令一般用于程序员写程序debug，因为它不能解释抛出异常的原因（比require少个字符串）。它的用法很简单，&lt;code&gt;assert(检查条件）&lt;/code&gt;，当检查条件不成立的时候，就会抛出异常。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;transferOwner3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_owners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_owners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tokenId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Solidity 102</title>
      <link>http://localhost:1313/posts/202508-solidity102/</link>
      <pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/202508-solidity102/</guid>
      <category domain="http://localhost:1313/categories/technology/">Technology</category>
      <description>&lt;h2 id=&#34;函数重载&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;函数重载&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%87%bd%e6%95%b0%e9%87%8d%e8%bd%bd&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;和C++中的一样：参数返回值不同，函数名相同。&lt;/p&gt;&#xA;&lt;h2 id=&#34;库合约&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;库合约&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%ba%93%e5%90%88%e7%ba%a6&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;库合约是一种特殊的合约，为了提升Solidity代码的复用性和减少gas而存在。库合约是一系列的函数合集。&lt;/p&gt;&#xA;&lt;p&gt;与普通合约的区别&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不能存在状态变量。&lt;/li&gt;&#xA;&lt;li&gt;不能够继承或被继承。&lt;/li&gt;&#xA;&lt;li&gt;不能接收以太币。&lt;/li&gt;&#xA;&lt;li&gt;不可以被销毁。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;需要注意的是，库合约中的函数可见性如果被设置为public或者external，则在调用函数时会触发一次delegatecall。而如果被设置为internal，则不会引起。对于设置为private可见性的函数来说，其仅能在库合约中可见，在其他合约中不可用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;使用&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%bd%bf%e7%94%a8&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 方式1:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 利用using for指令&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Strings&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getString1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 库合约中的函数会自动添加为uint256型变量的成员&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toHexString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 方式2:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 直接通过库合约名调用&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getString2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pure&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;memory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toHexString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;import&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;Import&lt;/span&gt;&#xA;  &lt;a href=&#34;#import&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;目录结构&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;文件结构&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;├──&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Import&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sol&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;└──&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Yeye&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sol&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 通过文件相对位置import&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./Yeye.sol&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;直接饮用网上的合约的全局地址&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 通过网址引用&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过npm的目录导入，例子：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;@openzeppelin/contracts/access/Ownable.sol&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过指定全局符号导入合约特定的全局符号，例子：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Yeye&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./Yeye.sol&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;接收eth&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;接收ETH&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%8e%a5%e6%94%b6eth&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Solidity 有两种特殊的回调函数，receive() 和 fallback(), 在以下情况被使用：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;接收ETH&lt;/li&gt;&#xA;&lt;li&gt;处理合约中不存在的函数调用（代理合约proxy contract）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这里主要讲接收ETH的情况&lt;/p&gt;&#xA;&lt;h2 id=&#34;receive&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;receive()&lt;/span&gt;&#xA;  &lt;a href=&#34;#receive&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;合约收到ETH转账的时候被调用，一个合约最多有一个receive函数，声明方式不需要function，不需要参数和返回值，且必须包含external payable&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;receive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;fallback&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;fallback&lt;/span&gt;&#xA;  &lt;a href=&#34;#fallback&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;fallback()函数会在调用合约不存在的函数时被触发。可用于接收ETH，也可以用于代理合约proxy contract。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fallback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;两者区别&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;两者区别&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%b8%a4%e8%80%85%e5%8c%ba%e5%88%ab&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;两者触发的规则如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;触发fallback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;还是&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;receive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;nx&#34;&gt;接收ETH&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data是空&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;？&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;\&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nx&#34;&gt;是&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;否&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;\&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;receive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;存在&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;   &lt;span class=&#34;nx&#34;&gt;fallback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;\&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;nx&#34;&gt;是&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;否&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;\&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;receive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;   &lt;span class=&#34;nx&#34;&gt;fallback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;发送eth&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;发送ETH&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%8f%91%e9%80%81eth&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;有三种方法向其他合约发送ETH，他们是：transfer()，send()和call()，其中call()是被鼓励的用法。&lt;/p&gt;&#xA;&lt;p&gt;先部署一个接收ETH的合约：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ReceiveETH&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 收到eth事件，记录amount和gas&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// receive方法，接收eth时被触发&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;receive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gasleft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 返回合约ETH余额&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;发送-eth-合约&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;发送 ETH 合约&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%8f%91%e9%80%81-eth-%e5%90%88%e7%ba%a6&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;首先，先在发送ETH合约SendETH中实现payable的构造函数和receive()，让我们能够在部署时和部署后向合约转账&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;SendETH&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 构造函数，payable使得部署的时候可以转eth进去&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// receive方法，接收eth时被触发&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;receive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;transfer&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;transfer&lt;/span&gt;&#xA;  &lt;a href=&#34;#transfer&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;用法：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;接收方地址&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;发送ETH数额&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;transfer()&lt;/code&gt;的gas限制是2300，足够用于转账，但对方合约的&lt;code&gt;fallback()&lt;/code&gt;或&lt;code&gt;receive()&lt;/code&gt;函数不能实现太复杂的逻辑。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;transfer()&lt;/code&gt;如果转账失败，会自动revert（回滚交易）。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 用transfer()发送ETH&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;transferETH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;部署两个合约之后点击transferETH输入ReceiveETH合约的地址和数额，就可以看到发送成功&lt;/p&gt;&#xA;&lt;h3 id=&#34;send&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;send&lt;/span&gt;&#xA;  &lt;a href=&#34;#send&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;用法：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;接收方地址&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;发送ETH数额&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;send()&lt;/code&gt;的gas限制是2300，足够用于转账，但对方合约的&lt;code&gt;fallback()&lt;/code&gt;或&lt;code&gt;receive()&lt;/code&gt;函数不能实现太复杂的逻辑。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;send()&lt;/code&gt;如果转账失败，不会revert（回滚交易）。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;send()&lt;/code&gt;的返回值是bool，代表着转账成功或失败，需要额外代码处理一下&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;SendFailed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 用send发送ETH失败error&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// send()发送ETH&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sendETH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 处理下send的返回值，如果失败，revert交易并发送error&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;success&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;revert&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;SendFailed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;call&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;call&lt;/span&gt;&#xA;  &lt;a href=&#34;#call&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;用法是:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;接收方地址&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;发送ETH数额&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;call()&lt;/code&gt;没有gas限制，可以支持对方合约fallback()或receive()函数实现复杂逻辑。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;call()&lt;/code&gt;如果转账失败，不会revert。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;call()&lt;/code&gt;的返回值是(bool, bytes)，其中bool代表着转账成功或失败，需要额外代码处理一下。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CallFailed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 用call发送ETH失败error&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// call()发送ETH&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;callETH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 处理下call的返回值，如果失败，revert交易并发送error&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;revert&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CallFailed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;调用其他合约&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;调用其他合约&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e8%b0%83%e7%94%a8%e5%85%b6%e4%bb%96%e5%90%88%e7%ba%a6&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;在Solidity中，一个合约可以调用另一个合约的函数，这在构建复杂的DApps时非常有用。&lt;/p&gt;&#xA;&lt;p&gt;先写一个合约，用于被其他合约调用&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;OtherContract&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 状态变量_x&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// 收到eth的事件，记录amount和gas&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 返回合约ETH余额&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 可以调整状态变量_x的函数，并且可以往合约转ETH (payable)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;_x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 如果转入ETH，则释放Log事件&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gasleft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 读取_x&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;传入合约地址&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;传入合约地址&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%bc%a0%e5%85%a5%e5%90%88%e7%ba%a6%e5%9c%b0%e5%9d%80&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;可以利用合约的地址和合约代码（或接口）来创建合约的引用：&lt;code&gt;_Name(_Address)&lt;/code&gt;，其中&lt;code&gt;_Name&lt;/code&gt;是合约名，应与合约代码（或接口）中标注的合约名保持一致，&lt;code&gt;_Address&lt;/code&gt;是合约地址。然后用合约的引用来调用它的函数：&lt;code&gt;_Name(_Address).f()&lt;/code&gt;，其中&lt;code&gt;f()&lt;/code&gt;是要调用的函数。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CallContract&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;callSetX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_Address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;OtherContract&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_Address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;传入合约变量&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;传入合约变量&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%bc%a0%e5%85%a5%e5%90%88%e7%ba%a6%e5%8f%98%e9%87%8f&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CallContract&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;callGetX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;OtherContract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_Address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_Address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;创建合约变量&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;创建合约变量&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%88%9b%e5%bb%ba%e5%90%88%e7%ba%a6%e5%8f%98%e9%87%8f&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CallContract&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;callGetX2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_Address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;OtherContract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;oc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;OtherContract&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_Address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;oc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;调用合约并发送eth&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;调用合约并发送ETH&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e8%b0%83%e7%94%a8%e5%90%88%e7%ba%a6%e5%b9%b6%e5%8f%91%e9%80%81eth&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;如果目标合约的函数是&lt;code&gt;payable&lt;/code&gt;的，那么我们可以通过调用它来给合约转账：&lt;code&gt;_Name(_Address).f{value: _Value}()&lt;/code&gt;，其中&lt;code&gt;_Name&lt;/code&gt;是合约名，&lt;code&gt;_Address&lt;/code&gt;是合约地址，&lt;code&gt;f&lt;/code&gt;是目标函数名，&lt;code&gt;_Value&lt;/code&gt;是要转的ETH数额（以wei为单位）。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;OtherContract&lt;/code&gt;合约的&lt;code&gt;setX&lt;/code&gt;函数是&lt;code&gt;payable&lt;/code&gt;的，在下面这个例子中我们通过调用&lt;code&gt;setX&lt;/code&gt;来往目标合约转账。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CallContract&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setXTransferETH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;otherContract&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;payable&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;OtherContract&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;otherContract&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;call-1&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;Call&lt;/span&gt;&#xA;  &lt;a href=&#34;#call-1&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;call不仅可以发送ETH，还可以调用合约&lt;/p&gt;&#xA;&lt;p&gt;我先说一下我的情况：&#xA;我现在从事网络安全的工作，但工作之余我想学习web3相关的东西，目前已经知道的东西：BTC的钱包的原理，包括私钥公钥生成这种，直接我都写代码实现过；目前知道solidity的基础语法，除此之外，关于web3的其他就都不知道了，主要是知道的一些其他的东西都是碎片化、孤岛化的，并没有系统的串联起来，给我一些具体的学习路线，我知道web3东西很多，但给我一些具体的学习路线&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>论文阅读 AlphaGo Moment for Model Architecture Discovery</title>
      <link>http://localhost:1313/posts/202507-alphagopaperread/</link>
      <pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/202507-alphagopaperread/</guid>
      <category domain="http://localhost:1313/categories/technology/">Technology</category>
      <description>&lt;h2 id=&#34;论文阅读笔记模型架构发现的alphago时刻&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;论文阅读笔记：模型架构发现的AlphaGo时刻&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e8%ae%ba%e6%96%87%e9%98%85%e8%af%bb%e7%ac%94%e8%ae%b0%e6%a8%a1%e5%9e%8b%e6%9e%b6%e6%9e%84%e5%8f%91%e7%8e%b0%e7%9a%84alphago%e6%97%b6%e5%88%bb&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;h2 id=&#34;摘要&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;摘要&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%91%98%e8%a6%81&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;尽管人工智能系统（AI systems）展现出指数级提升的能力，但人工智能研究（AI research）本身的速度却受限于人类的认知能力（human cognitive capacity），这造成了日益严重的开发瓶颈（development bottleneck）。本文介绍了 ASI-ARCH，这是人工智能研究领域（ASI4AI）中人工超级智能（Artificial Superintelligence for AI research）的首次演示，它在神经架构发现（neural architecture discovery）这一关键领域，通过使人工智能能够进行自身的架构创新（architectural innovation），打破了这一根本限制。&lt;/p&gt;&#xA;&lt;p&gt;ASI-ARCH 超越了传统神经架构搜索（Neural Architecture Search, NAS），后者本质上局限于探索人类定义的空间（human-defined spaces），我们引入了从自动化优化（automated optimization）到自动化创新（automated innovation）的范式转变（paradigm shift）。ASI-ARCH 能够在架构发现这一挑战性领域进行端到端（end-to-end）科学研究，自主地提出新颖的架构概念（novel architectural concepts），将其实现为可执行代码（executable code），通过严格的实验（rigorous experimentation）以及过去人类和人工智能的经验进行训练和实证验证（empirically validating）其性能。&lt;/p&gt;&#xA;&lt;p&gt;ASI-ARCH 进行了 1,773 次自主实验，耗时超过 20,000 GPU 小时，最终发现了 106 种创新的、最先进（state-of-the-art, SOTA）的线性注意力（linear attention）架构。就像 AlphaGo 的第 37 步棋揭示了人类玩家无法察觉的意想不到的战略洞察（strategic insights）一样，我们的人工智能发现的架构展现出新兴的设计原则（emergent design principles），这些原则系统地超越了人类设计的基线（human-designed baselines），并阐明了以前未知的架构创新途径（图 2）。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202507-alphagopaperread/image-2.png&#39; alt=&#34;图 2&#34; height=&#34;979&#34; width=&#34;1130&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;至关重要的是，我们建立了科学发现（scientific discovery）的第一个经验缩放定律（empirical scaling law）——证明架构突破（architectural breakthroughs）可以通过计算进行扩展（scaled computationally），将研究进展从人类受限（human-limited）的过程转变为计算可扩展（computation-scalable）的过程。我们提供了对促成这些突破的新兴设计模式（emergent design patterns）和自主研究能力（autonomous research capabilities）的全面分析，为自我加速（self-accelerating）的人工智能系统建立了蓝图（blueprint）。为了使人工智能驱动的研究民主化（democratize AI-driven research），我们开源了完整的框架、发现的架构和认知轨迹（cognitive traces）。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-引言&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;1. 引言&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-%e5%bc%95%e8%a8%80&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;人工智能（AI）正以前所未有的深度和广度影响着人类社会，并被广泛认为是文明进步的关键驱动力（Russell and Norvig, 2010; Agrawal et al., 2018; Brynjolfsson and Mitchell, 2017）。然而，一个根本性的悖论（fundamental paradox）出现了：尽管人工智能系统展现出指数级提升的能力，但人工智能研究本身的速度却受限于人类的认知能力（The White House, 2023; Ahmed et al., 2022; Sevilla et al., 2022）。这种以人为中心（human-centric）的开发模式为人机智能的进步创造了日益严重的瓶颈，创新速度不再受限于计算能力，而是受限于人类的研究带宽（human research bandwidth）。这促使我们提出了一个变革性的愿景（transformative vision）：用于人工智能研究的人工超级智能（ASI4AI）——能够自主进行科学研究并设计更强大的下一代模型的人工智能系统。&lt;/p&gt;&#xA;&lt;p&gt;神经架构发现（Neural architecture discovery）是实现 ASI4AI 最具挑战性和影响力的前沿领域（frontier）。模型架构（Model architecture）是人工智能技术堆栈（AI technology stack）的基石，人工智能能力的每一次重大飞跃——从图像识别（image recognition）到自然语言理解（natural language understanding）——都伴随着相应的架构突破。从 CNNs (LeCun et al., 1995) 到 Transformers (Vaswani et al., 2017) 的演变，就例证了架构创新如何推动人工智能的根本性进步。当前研究的前沿，一个关键挑战是提高计算效率（computational efficiency）同时保持表达能力（expressive power）（DeepSeek-AI et al., 2024; MiniMax et al., 2025; Yuan et al., 2025）。为了将我们的探索建立在一个既具有根本重要性又活跃的研究领域，我们选择基于注意力（attention-based）的架构作为我们的试验台（testbed），利用其广泛的知识库（knowledge base）来探索人工智能真正的架构设计潜力（Katharopoulos et al., 2020; Choromanski et al., 2020; Tay et al., 2022; Wang et al., 2020）。&lt;/p&gt;&#xA;&lt;p&gt;我们的工作超越了传统神经架构搜索（NAS），后者本质上局限于探索人类定义的空间，代表了从自动化优化到自动化创新的范式转变。虽然之前的 NAS 方法（Zoph and Le, 2016; Real et al., 2017; Elsken et al., 2019; Cheng et al., 2025）只能在预定的构建块（predetermined building blocks）上进行优化，并且计算成本高昂（prohibitive computational costs），充当复杂的选择算法（sophisticated selection algorithms）而非创造性代理（creative agents），但我们提出了 ASI-ARCH - 这是 ASI4AI 在神经架构发现领域的首次演示。ASI-ARCH 利用现代大型语言模型（LLMs）的先进推理（reasoning）和编码能力（coding capabilities）（Brown et al., 2020; OpenAI, 2023; Li et al., 2022），通过自主提出新颖的架构概念，将其实现为可执行代码，并通过严格的实验进行实证验证其性能（Chen et al., 2023; Zhang et al., 2024），从而超越了人类设计的搜索空间（human-designed search spaces）。&lt;/p&gt;&#xA;&lt;p&gt;这代表了人工智能在神经架构设计领域首次展现出真正的科学超级智能（genuine scientific superintelligence）。就像 AlphaGo 的第 37 步棋揭示了人类玩家无法察觉的战略洞察一样，ASI-ARCH 发现的架构原则系统地超越了人类直觉（human intuition）。在进行了 1,773 次自主实验并耗费超过 20,000 GPU 小时后，ASI-ARCH 成功发现了 106 种新颖的、最先进的线性注意力架构。至关重要的是，我们建立了科学发现的第一个经验缩放定律——证明架构突破可以通过计算进行扩展，将研究进展从人类受限的过程转变为计算可扩展的过程，并为 ASI4AI 提供了具体的途径（concrete pathway）。&lt;/p&gt;&#xA;&lt;p&gt;我们的主要贡献为自我加速的人工智能系统建立了蓝图，并推动了这一范式：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;ASI4AI 框架（ASI4AI Framework）：&lt;/strong&gt; 我们设计并构建了人工智能研究领域人工超级智能的首次演示，通过一个高度自主、以工具为中心（tool-centric）的多智能体系统（multi-agent system），使人工智能能够在神经架构发现领域独立进行整个科学研究过程——从假设生成（hypothesis generation）到实证验证。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;新兴设计智能（Emergent Design Intelligence）：&lt;/strong&gt; 通过全面分析，我们识别了人工智能驱动的发现中出现的新颖设计模式，展示了超越人类设计范式（human design paradigms）并为注意力机制创新建立新原则的定性不同（qualitatively different）的架构智能。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;发现的计算扩展（Computational Scaling of Discovery）：&lt;/strong&gt; 我们发现了 106 种新颖的、最先进的线性注意力架构，并建立了自动化科学突破的第一个缩放定律，证明研究进展可以随计算资源而非人类专业知识进行扩展。我们开源了完整的框架、发现的架构和认知轨迹，以使人工智能驱动的研究民主化。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202507-alphagopaperread/image.png&#39; alt=&#34;图 1&#34; height=&#34;849&#34; width=&#34;1543&#34;&gt;&#xA;图 1：科学发现的缩放定律。图表显示了发现的最先进（SOTA）架构的累积数量与消耗的总计算小时数的关系。强大的线性关系表明，AI 系统发现新颖、高性能架构的能力与分配的计算预算有效地呈线性关系。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-相关工作&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;2. 相关工作&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#2-%e7%9b%b8%e5%85%b3%e5%b7%a5%e4%bd%9c&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;h3 id=&#34;人工智能用于人工智能研究ai-for-ai-research&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;人工智能用于人工智能研究（AI For AI Research）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%ba%ba%e5%b7%a5%e6%99%ba%e8%83%bd%e7%94%a8%e4%ba%8e%e4%ba%ba%e5%b7%a5%e6%99%ba%e8%83%bd%e7%a0%94%e7%a9%b6ai-for-ai-research&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;将人工智能应用于推进人工智能研究本身代表了一个引人注目的前沿领域（Kokotajlo et al., 2025），最好理解为科学过程中人工智能自主性（AI autonomy）不断提高的一个谱系（spectrum）。最初，人工智能的角色类似于一个复杂的助手，处理特定任务，例如在“副驾驶”（copilot）模型中生成代码，其中人类研究人员保留了对研究方向的完全控制。此后，这种协作已演变为人工智能作为“人工智能科学家”（AI scientist），能够独立生成新颖的假设并提出有前景的研究想法供人类考虑（Tshitoyan et al., 2019; Boiko et al., 2023）。最近，一些例子已经展示了人工智能在最少人为干预（minimal human intervention）的情况下完成整个研究周期的能力。例如，AlphaEvolve（Novikov et al., 2025; Cheng et al., 2025）等框架采用大型语言模型（LLMs）迭代地变异（mutate）和选择改进的程序变体（program variants），完成发现和改进的完整循环。同样，AlphaGeometry 在自主发现数学证明方面的成功展示了从问题陈述（problem statement）到解决方案（solution）的高度研究自主性（Trinh et al., 2024; Chervonyi et al., 2025）。随着人类在此协作循环中参与比例的降低，人工智能自我优化（self-optimization）的潜力变得越来越核心。这一概念以 Darwin-Gödel machines（Zhang et al., 2025）等自指系统（self-referential systems）为代表，这些系统旨在迭代修改自己的代码并实证验证这些更改，标志着向完全自我改进系统（fully self-improving systems）（Schmidhuber, 1997; Baum, 2004）的明确轨迹。&lt;/p&gt;&#xA;&lt;p&gt;在此基础上，ASI-ARCH 将人工智能自进化（AI self-evolution）的原则应用于高度复杂的神经架构设计领域。这比之前的自我改进系统提出了更大的挑战，因为架构探索涉及一个明显更复杂的实验环境（experimental environment）和巨大的搜索空间（vast search space），成功无法得到保证。因此，我们的工作代表了在此更具挑战性和影响力的前沿领域推进人工智能自进化的重要尝试。&lt;/p&gt;&#xA;&lt;h3 id=&#34;高效架构efficient-architecture&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;高效架构（Efficient Architecture）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e9%ab%98%e6%95%88%e6%9e%b6%e6%9e%84efficient-architecture&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;Transformer 架构自推出以来一直主导着序列建模（sequence modeling），但其二次注意力复杂度（quadratic attention complexity）催生了对亚二次（sub-quadratic）替代方案的广泛研究，从而创建了一个日益复杂的设计空间（design space）（Vaswani et al., 2017）。在这些替代方案中，稀疏注意力（sparse attention）方法，如 Native Sparse Attention (NSA)（Yuan et al., 2025），采用分层稀疏策略（hierarchical sparse strategies），在保持模型能力的同时实现显著加速（substantial speedups）。除了稀疏注意力，还出现了三个主要具有线性时间复杂度（linear time complexity）的系列：线性注意力（Linear Attention），它使用线性化特征图（linearizing feature maps）（Katharopoulos et al., 2020; Choromanski et al., 2020; Qin et al., 2022）；状态空间模型（State-Space Models, SSMs），如 Mamba，采用结构化状态转移矩阵（structured state transition matrices）（Gu and Dao, 2023; Dao and Gu, 2024）；以及线性 RNNs（Linear RNNs），如 RWKV，具有矩阵值循环状态（matrix-valued recurrent states）（Peng et al., 2023; Qin et al., 2023, 2024b）。当前的趋势指向合成和混合（synthesis and hybridization），例如 Jamba 等架构交错（interleaving）不同的模型系列以利用各自的优势（Lieber et al., 2024; Qin et al., 2024a）。这种演变将格局从单一主导设计转变为一个巨大的组合空间（vast combinatorial space），其中最优架构高度依赖于特定任务和约束。虽然现有工作侧重于手动设计单个架构组件或系列，但这个过程通常是漫长的，需要人类专家数月的迭代努力才能产生一个最先进的架构。相比之下，ASI-ARCH 通过自动化多智能体协作（automated multi-agent collaboration）独特地解决了这个复杂设计空间的系统探索，从而能够发现超越传统系列边界的新颖架构。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-方法论&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;3. 方法论&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#3-%e6%96%b9%e6%b3%95%e8%ae%ba&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;ASI-ARCH 框架作为一个用于自主架构发现的闭环系统（closed-loop system）运行，围绕一个具有三个核心角色的模块化框架（modular framework）构建。研究员模块（Researcher module）提出新颖的架构，工程师模块（Engineer module）通过在真实世界环境中执行它们来进行实证评估，分析师模块（Analyst module）对结果进行分析总结以获取新见解。所有实验数据和派生见解（derived insights）都系统地存档在一个中央数据库（central database）中，从而创建了一个驱动整个过程的持久内存（persistent memory）。&lt;/p&gt;&#xA;&lt;p&gt;为了确保系统逐步生成更优的设计，我们实施了一种进化改进策略（evolutionary improvement strategy），使模型能够不断从经验中学习。这通过两种关键机制实现：首先，一个全面的适应度分数（comprehensive fitness score），它整体评估每个新架构，提供一个明确的优化目标（optimization target）；其次，利用人类专家文献中提炼出的知识（distilled knowledge from human expert literature）（认知, cognition）和其自身过去实验的分析总结（analytical summaries of its own past experiments）（分析, analysis）来指导后续设计提案的能力。鉴于这种进化过程的资源密集性（resource-intensive nature），我们采用两阶段的探索-验证策略（two-stage exploration-then-verification strategy）。初始阶段涉及在小规模模型上进行广泛探索，以有效地识别大量有希望的候选模型。在最后阶段，这些候选模型被扩展到更大的模型进行严格验证（rigorous validation），以确认其最先进的性能。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202507-alphagopaperread/image-1.png&#39; alt=&#34;图4&#34; height=&#34;793&#34; width=&#34;1130&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;图 4：我们的四模块 ASI-ARCH 框架概述，它在一个封闭的进化循环中运行。循环从研究员（紫色）根据历史数据提出新架构开始。工程师（橙黄色）处理随后的训练和评估。最后，分析师（蓝色）综合实验结果，用认知模块（红色）的知识丰富其发现。此分析的输出指导下一步进化，使系统能够持续改进。&lt;/p&gt;&#xA;&lt;h3 id=&#34;31-适应度函数the-fitness-function&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;3.1 适应度函数（The Fitness Function）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#31-%e9%80%82%e5%ba%94%e5%ba%a6%e5%87%bd%e6%95%b0the-fitness-function&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;ASI-ARCH 的模型架构演变模仿了生物进化，借鉴了自然选择（natural selection）的原则。在自然界中，适应度决定了生物体的生存和繁殖，类似地，我们定义了一个适应度函数，它控制着哪些架构在我们的进化过程中得以生存和繁殖。过去方法的一个关键缺陷是它们只依赖于损失（loss）和基准分数（benchmark scores）等定量指标（quantitative metrics）。这种狭隘的关注不可避免地导致奖励作弊（reward hacking）（Amodei et al., 2016），即系统学会最大化分数而没有产生真正优越的架构。我们通过引入对架构本身的定性评估（qualitative assessment）来扩展此定义。我们的复合适应度（composite fitness）结合了定量和定性维度，整体评估性能和设计质量：&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;\text{Fitness Objective} = \text{Performance} + \text{Architectural Quality} \quad&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;在我们的框架中，客观性能评估（objective performance assessment）同时评估基准分数和相对于基线架构的损失性能。认识到科学突破通常源于渐进式进步（incremental advances），我们对性能差异应用了 Sigmoid 变换：$\sigma(\Delta_{\text{performance}})$。这种变换具有双重目的——放大微小但可能显著的改进，同时限制可能主导优化过程的极端值。对于架构质量评估，我们引入了一个单独的 LLM 作为专家评估器（expert evaluator），模仿人类专家如何判断架构优劣。该评估器检查多个维度：架构创新、结构复杂性（structural complexity）、实现正确性（implementation correctness）和收敛特性（convergence characteristics）。通过将这些定性评估与定量指标相结合，我们捕获了难以简单数值测量（simple numerical measurement）的架构质量。我们最终的复合适应度函数形式如下：&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;\text{Fitness} = \frac{1}{3}[\sigma(\Delta_{\text{loss}}) + \sigma(\Delta_{\text{benchmark}}) + LLM_{\text{judge}}] \quad&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;其中 $\sigma(\Delta_{\text{loss}})$ 和 $\sigma(\Delta_{\text{benchmark}})$ 表示相对于基线的 Sigmoid 变换性能改进，$LLM_{\text{judge}}$ 提供归一化到 $[0,1]$ 的主观质量评估（subjective quality assessment）。&lt;/p&gt;&#xA;&lt;h3 id=&#34;32-研究员提出新架构researcher-propose-new-architecture&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;3.2 研究员：提出新架构（Researcher: Propose New Architecture）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#32-%e7%a0%94%e7%a9%b6%e5%91%98%e6%8f%90%e5%87%ba%e6%96%b0%e6%9e%b6%e6%9e%84researcher-propose-new-architecture&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;研究员模块（Researcher module）是我们系统的创造引擎（creative engine），人工智能在此模块中根据历史经验和人类专业知识独立提出新颖的模型架构。我们的设计旨在实现两个关键目标：确保高质量的架构创新，同时防止重复探索浪费计算资源。为了实现这些目标，我们实施了四个协同工作（work together）的关键机制：&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;种子选择（Seed Selection）：&lt;/strong&gt; ASI-ARCH 维护一个候选池（candidate pool），其中包含所有先前实验中得分最高的 50 个架构。对于每个进化步骤，我们使用两级采样方法（two-level sampling approach）：从排名前 10 的模型中随机选择一个父架构（parent architecture）作为修改的基础，同时从排名 11-50 的模型中采样 4 个参考架构（reference architectures），以提供多样化的设计示例。这种两级选择确保了进化建立在已验证的成功之上，同时保持足够的随机性（randomness）以探索新方向。父架构直接被修改，而参考架构则作为成功设计模式的示例，本身不被更改。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;模型设计（Model Design）：&lt;/strong&gt; 在向研究员提供历史数据以进行下一个进化周期之前，我们执行了一个关键的数据汇总步骤（data summarization step）。我们数据库中的每个架构都包含大量信息，包括其动机（motivation）、实现代码、实验结果和详细分析。为了管理上下文大小（context size），我们使用一个低温 LLM（low-temperature LLM）来为每个历史架构的自然语言部分生成简短的事实性摘要（brief, factual summaries）。至关重要的是，这些摘要是为每个进化周期动态生成（dynamically generated）的，并且不存储在数据库中。这种动态汇总过程（dynamic summarization process）固有地引入了相同历史数据随时间呈现方式的细微变化（subtle variations）。这不仅防止了研究员接收静态、重复的上下文（这可能会限制其输出的多样性），而且还积极鼓励更多样化的设计探索。最终的组合摘要（final combined summaries）为进化模型提供了可管理的上下文和不断更新的多样化见解，以指导下一次设计尝试。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;程序实现（Program Implementation）：&lt;/strong&gt; 传统方法通常将架构设计与代码实现分开，为每个任务使用专门的模型。然而，这种分离会产生一个关键的信息鸿沟（information gap）——实现模型只看到高层动机，缺乏指导原始设计的丰富上下文。这通常会导致实现漂移（implementation drift），即最终代码与预期架构不同。ASI-ARCH 通过为这两个任务使用一个代理（single agent）来解决这个问题：首先在完全访问所有上下文的情况下提出架构动机，然后立即实现相应的代码，同时保持对设计推理（design reasoning）的完全感知。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;新颖性和健全性检查（Novelty and Sanity Check）：&lt;/strong&gt; 为了确保每个提出的架构都是新颖的并且将正确实现，我们在接受训练之前实施了两阶段验证过程。第一阶段是相似性检查（similarity check），以防止冗余（redundancy）。当提出新架构时，我们首先提取其动机，并使用基于嵌入的搜索（embedding-based search）找到前 5 个最相似的历史动机。然后，一个专门的 LLM 评估新提案是真正的创新（genuine innovation）还是仅仅是现有工作的变体。第二阶段包括代码级健全性检查（code-level sanity checks），以防止基本的实现缺陷（fundamental implementation flaws），包括验证代码不超过 O(n2) 复杂度并确保正确实现掩码（mask）以防止信息泄露（information leakage）。如果提案未能通过新颖性或正确性检查，它将被拒绝，并将相关反馈返回给代理以提示重写（rewrite）。&lt;/p&gt;&#xA;&lt;h3 id=&#34;33-工程师训练和评估模型engineer-train-and-evaluate-models&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;3.3 工程师：训练和评估模型（Engineer: Train and Evaluate Models）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#33-%e5%b7%a5%e7%a8%8b%e5%b8%88%e8%ae%ad%e7%bb%83%e5%92%8c%e8%af%84%e4%bc%b0%e6%a8%a1%e5%9e%8bengineer-train-and-evaluate-models&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;评估过程（evaluation process）为最终适应度分数提供数据，由两部分组成：在真实代码环境中的定量评估和由 LLM 作为评判（LLM-as-judge）的定性评分。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;真实代码环境（Real Code Environment）：&lt;/strong&gt; 定量评估在交互式编码环境（interactive coding environment）中进行，代理必须利用一组定义的工具来启动训练、修改代码和检查错误日志。ASI-ARCH 的一个关键区别在于其强大的自我修正机制（robust self-revision mechanism）。与之前的工作（Cheng et al., 2025）形成鲜明对比的是，之前的工作通常使用抽象语法树（Abstract Syntax Tree, AST）解析等静态分析（static analysis），并简单地丢弃任何未能通过这些检查的架构，而 ASI-ARCH 要求代理修复自己的错误。当训练运行因实现错误而失败时，系统会自动捕获完整的错误日志（full error log）并将其返回给代理，然后代理的任务是分析此反馈并修改其先前生成的代码。这种迭代调试循环（iterative debugging loop）持续进行，直到训练成功，确保有希望的想法不会因简单的编码错误而过早地被丢弃。此外，为了保持高效率，自动化质量保证系统（automated quality assurance system）实时监控训练日志。这至关重要，因为一些功能设计可能效率极低，例如模型消耗的训练时间是同类模型的两到三倍。ASI-ARCH 会检测此类异常，以及异常低的损失指示的基本错误，并立即终止运行（terminates the run），将问题报告回代理进行修订。这种主动终止（proactive termination）可以防止在有缺陷的架构上浪费资源，并显著加速整个搜索过程。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;LLM 作为评判评分（LLM-as-Judge Scoring）：&lt;/strong&gt; 在定量评估之后，我们启动一个基于 LLM 的评分模块（scoring module）以提供定性评估。此评分过程不仅考虑客观性能指标，还考虑架构复杂性、计算效率和所提出想法的新颖性，所有这些都与基线模型进行基准测试。为了确保一致性和可重复性（consistency and reproducibility），我们在提示（prompt）中提供了详细的教学大纲（detailed syllabus），并略微提高了模型的温度（model&amp;rsquo;s temperature），鼓励它为其分数生成更详细和细致的理由（nuanced justifications）。&lt;/p&gt;&#xA;&lt;h3 id=&#34;34-分析师挖掘实验见解analyzer-mine-experimental-insights&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;3.4 分析师：挖掘实验见解（Analyzer: Mine Experimental Insights）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#34-%e5%88%86%e6%9e%90%e5%b8%88%e6%8c%96%e6%8e%98%e5%ae%9e%e9%aa%8c%e8%a7%81%e8%a7%a3analyzer-mine-experimental-insights&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;为了推动进化过程，ASI-ARCH 为代理提供了两种不同的知识来源，用于后续的每个设计步骤：源自累积人类专业知识的“认知”（cognition, derived from accumulated human expertise），以及从系统自身实验历史中动态生成的“分析”（analysis, generated dynamically from the system&amp;rsquo;s own experimental history）。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;认知库（Cognition Base）：&lt;/strong&gt; 为了确保 ASI-ARCH 能够利用现有领域知识，我们构建了一个以认知为中心（cognition-centered）的知识库。我们从线性注意力领域选择了近 100 篇开创性论文（seminal papers），并使用专门的 LLM 从每篇论文中提取 1-3 个不同的认知。每个认知都是一个结构化条目（structured entry），由三个关键元素组成：适用场景（applicable scenario），描述原始论文旨在解决的具体问题；提出的算法（proposed algorithm），总结核心技术解决方案；以及历史背景（historical context），将论文置于其时代的研究趋势中。&lt;/p&gt;&#xA;&lt;p&gt;为了保证此知识库的实用性，我们精心设计了用于提取 LLM 的提示。提示的结构专门设计用于确保提取的“实验触发器”（experiment trigger）与我们的分析师模块生成的“问题分析”（problem analyses）在语义上对齐（align semantically）。这种对齐对于有效检索（effective retrieval）至关重要。在分析的最后阶段，分析师总结了当前实验中观察到的具体缺点（specific shortcomings），此摘要用作基于嵌入检索的查询（query for embedding-based retrieval），对照我们知识库中的场景进行检索。然后，检索到的认知内容存储在我们的数据库中以供将来参考，为研究员模块提供了一种高度相关、信息密集且有针对性的解决方案查找方式。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;上下文分析（Contextual Analysis）：&lt;/strong&gt; ASI-ARCH 通过一个由大型语言模型驱动的专用分析模块生成自己的见解。该代理被提供当前实验的完整信息集，包括所有性能指标、训练日志和基线模型的性能。此外，为了实现类似于消融研究（ablation study）的效果，我们还提供了系统发育树（phylogenetic tree）中当前架构的父节点（parent）和兄弟节点（sibling）的数据。基于这些节点共享显著结构相似性（significant structural similarities）的假设，我们期望代理通过比较这些密切相关架构之间的性能差异来推断单个模块的具体贡献。然后，将生成的分析存档以指导后续设计周期。&lt;/p&gt;&#xA;&lt;h3 id=&#34;35-探索-验证策略exploration-then-verification-strategy&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;3.5 探索-验证策略（Exploration-then-Verification Strategy）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#35-%e6%8e%a2%e7%b4%a2-%e9%aa%8c%e8%af%81%e7%ad%96%e7%95%a5exploration-then-verification-strategy&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;鉴于架构评估的资源密集性，我们采用两阶段探索-验证策略以保持可行性和效率。基本原则是，一个真正优越的架构应该在不同的设置中展现其优势。因此，在初始探索阶段，我们使用较小的模型和资源高效的协议（resource-efficient protocols）来快速识别大量有希望的候选模型，这些模型优于基线。在随后的验证阶段，只有这些有希望的候选模型被扩展到更大的参数大小，进行广泛训练和针对已建立的最先进基线的严格验证。这种两阶段方法使我们能够平衡广泛探索的需求与彻底、高保真验证（high-fidelity validation）的必要性。&lt;/p&gt;&#xA;&lt;h2 id=&#34;4-实验&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;4. 实验&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#4-%e5%ae%9e%e9%aa%8c&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;h3 id=&#34;41-实验设置experimental-setup&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;4.1 实验设置（Experimental Setup）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#41-%e5%ae%9e%e9%aa%8c%e8%ae%be%e7%bd%aeexperimental-setup&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;适应度函数（Fitness Function）：&lt;/strong&gt; 在我们的实验中，我们使用 DeltaNet (Yang et al., 2024b) 作为基线。如第 3.1 节所述，我们的评分系统由三个组件组成。对于定量评分，由于线性注意力中的架构差异通常会产生较小的性能变化，我们只关注基线 10% 以内的差异，并通过 Sigmoid 函数将其映射以获得分数。此外，损失高于基线 10% 的架构被认为存在信息泄露（information leakage），并立即被丢弃。对于定性评分，我们建立了一个校准量表（calibrated scale），DeltaNet 为 5 分作为中点，Gated DeltaNet (Yang et al., 2024a) 为 10 分作为上限参考。LLM 评估器在此 1-10 量表上评估每个架构。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;并行搜索架构和策略（Parallel Search Architecture and Policy）：&lt;/strong&gt; 为了加速发现，我们并行运行了许多搜索过程。这由一个基于云的数据库支持，该数据库存储所有历史实验结果，允许不同的代理通过 API 服务添加或请求数据并共享所有累积知识。为了有效管理这种并行探索同时鼓励多样性，我们实施了一个战略性候选池更新策略（strategic candidate pool update policy）：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;冷启动（Cold Start）：&lt;/strong&gt; 在实验开始时，ASI-ARCH 进行 200 次探索而不更新数据库。这个初始阶段鼓励模型广泛探索多样化的架构框架，而不是立即收敛到早期发现的变体。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;批处理更新（Batched Updates）：&lt;/strong&gt; 冷启动期结束后，我们每 50 个新条目才更新候选池，而不是动态选择前 50 个。这种批处理方法确保所有代理在每个探索阶段都使用稳定的参考集，从而促进一致性，而初始延迟则促进了创造力。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;面向效率的框架设置（Efficiency-Oriented Framework Settings）：&lt;/strong&gt; 如我们的方法论所述，我们的搜索过程分为两个具有不同配置的阶段：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;探索阶段（Exploration Stage）：&lt;/strong&gt; 为了实现大规模探索，我们将模型大小限制在大约 20M 参数，并在 1B 令牌上进行训练。对于评估，我们每个基准只采样 500 个示例，以平衡评估质量和计算效率。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;验证阶段（Verification Stage）：&lt;/strong&gt; 探索阶段最有希望的候选模型被推进到严格的验证阶段。在这里，我们将架构扩展到 400M 参数，并在 1B 令牌上训练它们以进行初始性能验证。然后，从该组中选择表现最好的模型进行最终的、更广泛的 15B 令牌数据集训练，以全面评估其与强大基线的性能。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;42-主要结果main-results&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;4.2 主要结果（Main results）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#42-%e4%b8%bb%e8%a6%81%e7%bb%93%e6%9e%9cmain-results&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;为了平衡探索效率和验证准确性，我们采用了两阶段策略：首先在小型模型上进行初始探索，然后在大型模型上进行验证。在第一阶段，我们使用 20M 参数模型进行了 1,773 次探索，消耗了大约 10,000 GPU 小时。&lt;/p&gt;&#xA;&lt;p&gt;表1：语言模型和零样本常识推理的性能比较&lt;/p&gt;&#xA;&lt;p&gt;类型（Type）表示模型是人类设计还是人工智能发现。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Model&lt;/th&gt;&#xA;          &lt;th&gt;Type&lt;/th&gt;&#xA;          &lt;th&gt;Wiki. ppl&lt;/th&gt;&#xA;          &lt;th&gt;LMB. ppl&lt;/th&gt;&#xA;          &lt;th&gt;LMB. acc↑&lt;/th&gt;&#xA;          &lt;th&gt;PIQA acc&lt;/th&gt;&#xA;          &lt;th&gt;Hella. acc n↑&lt;/th&gt;&#xA;          &lt;th&gt;Wino. acc↑&lt;/th&gt;&#xA;          &lt;th&gt;ARC-e acc↑&lt;/th&gt;&#xA;          &lt;th&gt;ARC-C acc_n↑&lt;/th&gt;&#xA;          &lt;th&gt;SIQA acc↑&lt;/th&gt;&#xA;          &lt;th&gt;BoolQ ace↑&lt;/th&gt;&#xA;          &lt;th&gt;Avg.&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Mamba2&lt;/td&gt;&#xA;          &lt;td&gt;(Human-designed)&lt;/td&gt;&#xA;          &lt;td&gt;27.08&lt;/td&gt;&#xA;          &lt;td&gt;40.09&lt;/td&gt;&#xA;          &lt;td&gt;31.32&lt;/td&gt;&#xA;          &lt;td&gt;67.90&lt;/td&gt;&#xA;          &lt;td&gt;42.25&lt;/td&gt;&#xA;          &lt;td&gt;51.46&lt;/td&gt;&#xA;          &lt;td&gt;62.04&lt;/td&gt;&#xA;          &lt;td&gt;29.27&lt;/td&gt;&#xA;          &lt;td&gt;39.25&lt;/td&gt;&#xA;          &lt;td&gt;59.24&lt;/td&gt;&#xA;          &lt;td&gt;47.84&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Gated DeltaNet&lt;/td&gt;&#xA;          &lt;td&gt;(Human-designed)&lt;/td&gt;&#xA;          &lt;td&gt;27.62&lt;/td&gt;&#xA;          &lt;td&gt;38.69&lt;/td&gt;&#xA;          &lt;td&gt;31.42&lt;/td&gt;&#xA;          &lt;td&gt;68.28&lt;/td&gt;&#xA;          &lt;td&gt;40.77&lt;/td&gt;&#xA;          &lt;td&gt;51.14&lt;/td&gt;&#xA;          &lt;td&gt;61.03&lt;/td&gt;&#xA;          &lt;td&gt;27.05&lt;/td&gt;&#xA;          &lt;td&gt;38.79&lt;/td&gt;&#xA;          &lt;td&gt;60.12&lt;/td&gt;&#xA;          &lt;td&gt;47.32&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;DeltaNet&lt;/td&gt;&#xA;          &lt;td&gt;(Human-designed)&lt;/td&gt;&#xA;          &lt;td&gt;27.41&lt;/td&gt;&#xA;          &lt;td&gt;42.08&lt;/td&gt;&#xA;          &lt;td&gt;30.41&lt;/td&gt;&#xA;          &lt;td&gt;67.63&lt;/td&gt;&#xA;          &lt;td&gt;40.82&lt;/td&gt;&#xA;          &lt;td&gt;50.83&lt;/td&gt;&#xA;          &lt;td&gt;61.07&lt;/td&gt;&#xA;          &lt;td&gt;29.27&lt;/td&gt;&#xA;          &lt;td&gt;40.02&lt;/td&gt;&#xA;          &lt;td&gt;52.23&lt;/td&gt;&#xA;          &lt;td&gt;46.54&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;PathGate FusionNet&lt;/td&gt;&#xA;          &lt;td&gt;(AI-discovered)&lt;/td&gt;&#xA;          &lt;td&gt;26.76&lt;/td&gt;&#xA;          &lt;td&gt;37.40&lt;/td&gt;&#xA;          &lt;td&gt;33.17&lt;/td&gt;&#xA;          &lt;td&gt;68.77&lt;/td&gt;&#xA;          &lt;td&gt;41.57&lt;/td&gt;&#xA;          &lt;td&gt;53.91&lt;/td&gt;&#xA;          &lt;td&gt;61.03&lt;/td&gt;&#xA;          &lt;td&gt;29.61&lt;/td&gt;&#xA;          &lt;td&gt;39.46&lt;/td&gt;&#xA;          &lt;td&gt;60.58&lt;/td&gt;&#xA;          &lt;td&gt;48.51&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ContentSharpRouter&lt;/td&gt;&#xA;          &lt;td&gt;(AI-discovered)&lt;/td&gt;&#xA;          &lt;td&gt;26.80&lt;/td&gt;&#xA;          &lt;td&gt;36.58&lt;/td&gt;&#xA;          &lt;td&gt;32.72&lt;/td&gt;&#xA;          &lt;td&gt;67.79&lt;/td&gt;&#xA;          &lt;td&gt;40.78&lt;/td&gt;&#xA;          &lt;td&gt;53.12&lt;/td&gt;&#xA;          &lt;td&gt;61.07&lt;/td&gt;&#xA;          &lt;td&gt;30.20&lt;/td&gt;&#xA;          &lt;td&gt;40.79&lt;/td&gt;&#xA;          &lt;td&gt;60.28&lt;/td&gt;&#xA;          &lt;td&gt;48.34&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;FusionGatedFIRNet&lt;/td&gt;&#xA;          &lt;td&gt;(AI-discovered)&lt;/td&gt;&#xA;          &lt;td&gt;26.37&lt;/td&gt;&#xA;          &lt;td&gt;33.44&lt;/td&gt;&#xA;          &lt;td&gt;33.38&lt;/td&gt;&#xA;          &lt;td&gt;68.61&lt;/td&gt;&#xA;          &lt;td&gt;42.20&lt;/td&gt;&#xA;          &lt;td&gt;50.99&lt;/td&gt;&#xA;          &lt;td&gt;62.50&lt;/td&gt;&#xA;          &lt;td&gt;28.92&lt;/td&gt;&#xA;          &lt;td&gt;40.48&lt;/td&gt;&#xA;          &lt;td&gt;59.24&lt;/td&gt;&#xA;          &lt;td&gt;48.29&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;HierGateNet&lt;/td&gt;&#xA;          &lt;td&gt;(AI-discovered)&lt;/td&gt;&#xA;          &lt;td&gt;26.56&lt;/td&gt;&#xA;          &lt;td&gt;36.83&lt;/td&gt;&#xA;          &lt;td&gt;32.23&lt;/td&gt;&#xA;          &lt;td&gt;68.93&lt;/td&gt;&#xA;          &lt;td&gt;41.30&lt;/td&gt;&#xA;          &lt;td&gt;52.64&lt;/td&gt;&#xA;          &lt;td&gt;62.75&lt;/td&gt;&#xA;          &lt;td&gt;29.95&lt;/td&gt;&#xA;          &lt;td&gt;39.71&lt;/td&gt;&#xA;          &lt;td&gt;58.38&lt;/td&gt;&#xA;          &lt;td&gt;48.24&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;AdaMultiPathGateNet&lt;/td&gt;&#xA;          &lt;td&gt;(AI-discovered)&lt;/td&gt;&#xA;          &lt;td&gt;26.62&lt;/td&gt;&#xA;          &lt;td&gt;38.31&lt;/td&gt;&#xA;          &lt;td&gt;31.65&lt;/td&gt;&#xA;          &lt;td&gt;68.06&lt;/td&gt;&#xA;          &lt;td&gt;41.37&lt;/td&gt;&#xA;          &lt;td&gt;53.43&lt;/td&gt;&#xA;          &lt;td&gt;62.04&lt;/td&gt;&#xA;          &lt;td&gt;29.01&lt;/td&gt;&#xA;          &lt;td&gt;39.36&lt;/td&gt;&#xA;          &lt;td&gt;60.52&lt;/td&gt;&#xA;          &lt;td&gt;48.18&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202507-alphagopaperread/image-3.png&#39; alt=&#34;图 5：架构系统发育树。我们定义了一种父子关系，其中新架构是通过直接修改前一个架构的代码生成的。外围的颜色用于区分树的不同进化分支。&#34; height=&#34;996&#34; width=&#34;992&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;图 5 展示了第一阶段的部分系统发育树。从这些实验中，我们筛选出在相同参数规模下，在损失和基准指标上均优于 DeltaNet 的架构，产生了 1,350 个有希望的候选模型。在第二阶段，我们将这些候选模型扩展到 340M 参数，与 DeltaNet 的配置相匹配，并筛选掉复杂度或参数数量过多（excessive complexity or parameter counts）的架构。然后，我们训练了大约 400 个模型架构，在 1B 令牌上，消耗了 10,000 GPU 小时。其中，106 个架构取得了最先进的结果，所有这些架构都可以在我们的模型库网站（Model Gallery website）上公开获取，供社区参考。为了最终验证，我们选择了 5 个表现最好的架构，并在 340M 参数设置下，在 15B 令牌上训练它们。这些模型在相同的实验设置下与 DeltaNet、Gated DeltaNet 和 Mamba2 进行了比较。如表 1 所示，我们的模型在各种基准测试中几乎都优于所有基线。为最终验证选择的五个架构如下所述，每个都代表了改进 DeltaNet 基线的不同策略：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;分层路径感知门控（Hierarchical Path-Aware Gating, PathGateFusionNet）：&lt;/strong&gt; 该架构引入了一个分层两阶段路由器（hierarchical, two-stage router），以解决局部和全局推理（local and global reasoning）之间的权衡。第一阶段在直接复制路径（direct copy path）和上下文池（contextual pool）之间分配预算，而第二阶段将该上下文预算分配到短程（short-range）、长程（long-range）和 Delta 规则路径。它通过一个小的、始终开启的残差连接（always-on residual connection）确保稳定的梯度流（stable gradient flow），并添加了头部特定（head-specific）的输出门以进行细粒度的局部控制（fine-grained local control）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;内容感知锐度门控（Content-Aware Sharpness Gating, ContentSharpRouter）：&lt;/strong&gt; 该模型解决了创建既内容感知又能做出决定性（锐利, sharp）路由决策的门控的挑战。它融合了两个关键思想：一个使用令牌嵌入（token embeddings）和路径统计信息（path statistics）来指导其决策的内容感知门控，以及一个可学习的、每个头部温度参数（learnable, per-head temperature parameter），允许模型动态控制路由 softmax 的锐度，防止过早的门控崩溃（premature gate collapse）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;带有保留的并行 Sigmoid 融合（Parallel Sigmoid Fusion with Retention, FusionGatedFIRNet）：&lt;/strong&gt; 该架构从根本上改变了门控机制，以打破 softmax 施加的“零和”（zero-sum）权衡。它用每个路径的并行、独立的 Sigmoid 门替换了单个 softmax 路由器。这使得模型能够同时激活局部和全局路径。它还通过一个可学习的、每个头部保留参数（learnable, per-head retention parameter）增强了 Delta 规则，赋予其可控的记忆范围（controllable memory horizon）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;带有动态下限的分层门控（Hierarchical Gating with Dynamic Floors, HierGateNet）：&lt;/strong&gt; 该模型采用两阶段分层门控来分离宏观（macro, local vs. global）和细粒度路由决策。其关键创新是为每个路径和头部使用动态、可学习的下限（dynamic, learnable floors）。这种机制确保没有关键路径（特别是用于长程推理的 Delta 路径）会完全崩溃，根据上下文调整其最小分配。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;自适应多路径门控（Adaptive Multi-Path Gating, AdaMultiPathGateNet）：&lt;/strong&gt; 该设计侧重于在最细粒度上提供最大控制。它实现了一个统一的 BalancedSparseGate，结合了全局、每个头部和每个令牌的 logits，允许在令牌级别控制每个路径。为了防止门控崩溃，它结合使用了一个小的 epsilon-下限（epsilon-floor）和一个持久的、始终开启的熵惩罚（entropy penalty），确保路径多样性而无需复杂的训练计划。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;5-分析&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;5. 分析&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#5-%e5%88%86%e6%9e%90&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;ASI-ARCH 中架构的演变由一个候选池驱动，该候选池在每生成 50 个新架构后更新。由于每个架构变异步骤都只引用该池中的数据，因此我们根据生成顺序顺序分析搜索过程，以 50 个架构为基本分析单元。为了方便我们调查高性能模型的区别，我们将前 106 个架构统称为“模型库”（model gallery）。&lt;/p&gt;&#xA;&lt;h3 id=&#34;51-llm-驱动架构搜索的有效性effectiveness-of-llm-driven-architecture-search&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;5.1 LLM 驱动架构搜索的有效性（Effectiveness of LLM-Driven Architecture Search）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#51-llm-%e9%a9%b1%e5%8a%a8%e6%9e%b6%e6%9e%84%e6%90%9c%e7%b4%a2%e7%9a%84%e6%9c%89%e6%95%88%e6%80%a7effectiveness-of-llm-driven-architecture-search&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;为了证明我们 LLM 驱动的神经架构搜索系统的有效性，我们检查了搜索过程如何随时间演变。由于我们的系统仅从前 50 名候选池中选择父架构进行修改，因此该池的特性直接决定了搜索轨迹（search trajectory）和最终性能。因此，我们分析了与此候选池相关的两个关键指标集：（1）前 50 名候选模型的平均适应度分数的总体趋势及其三个组成部分的个体趋势：损失改进、基准改进和 LLM 评判分数；以及（2）这些相同候选模型的平均原始性能，特别是基准分数和损失值。这些指标共同提供了我们系统搜索动态（search dynamics）和持续优化过程的全面视图。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202507-alphagopaperread/image-4.png&#39; alt=&#34;图 6&#34; height=&#34;547&#34; width=&#34;944&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;图 6：该图 (a) 绘制了关键性能指标与累积评估样本数量的关系。图 (b) 显示，顶级候选模型的平均原始基准分数呈稳定上升趋势，而相应的平均原始损失则呈持续下降趋势。复合适应度分数及其主要组成部分（Agent, Benchmark）均显示出快速的初始改进，随后逐渐趋于平稳。分数中的损失组成部分在整个过程中表现出更渐进但持续的增长。&lt;/p&gt;&#xA;&lt;p&gt;对搜索动态的分析揭示了几个互补的模式。首先，前 50 名候选模型的平均适应度分数遵循典型的学习曲线（characteristic learning curve），初始阶段快速增长，随后逐渐稳定（图 6b）。早期阶段的分数增长主要由损失组件的优化驱动。随后的稳定化是我们的适应度函数设计的直接结果；由于 Sigmoid 变换，即使后期阶段的显著性能提升也会映射到较小的分数增长。这通过限制任何单一指标的分数贡献来防止奖励作弊，从而阻止过度优化。重要的是，尽管适应度分数增长按设计趋于平缓，但系统并未遇到性能瓶颈（performance bottleneck），这由原始基准和损失指标的持续稳定改进所证实。这种收敛证据（convergent evidence）证实，我们的 LLM 驱动搜索在整个搜索过程中有效地学会了生成更优的架构。&lt;/p&gt;&#xA;&lt;h3 id=&#34;52-架构设计模式architectural-design-patterns&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;5.2 架构设计模式（Architectural Design Patterns）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#52-%e6%9e%b6%e6%9e%84%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8farchitectural-design-patterns&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;为了理解 LLM 在搜索过程中对架构的偏好，这可以提供关于这些模型如何处理设计空间的见解，我们分析了复杂性趋势和组件偏好。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;模型复杂性稳定性（Model Complexity Stability）：&lt;/strong&gt; 神经架构搜索中的一个基本问题是性能提升是否仅仅来自模型大小的增加。我们使用参数数量（parameter count）作为模型复杂度的代理（proxy）来检查这个问题。图 8 显示了迭代过程中参数数量的分布。数据显示，虽然早期迭代主要生成 400-600M 参数范围内的模型，但系统很快多样化以探索 600-800M 参数之间的模型。重要的是，在初始探索阶段之后，参数分布保持稳定，没有系统性增长。在整个搜索过程中，大多数架构始终落在 400-600M 范围内，没有出现模型越来越复杂的趋势。这种稳定性表明 ASI-ARCH 没有将复杂的组件堆叠（complex component stacking）作为一种简单的性能改进策略，即使没有明确的参数约束，也保持了架构的规范性（architectural discipline）。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;架构组件偏好（Architectural Component Preferences）：&lt;/strong&gt; 为了理解 LLM 的底层设计策略，我们对其选择修改的架构组件进行了细粒度分析（fine-grained analysis）。我们使用一个单独的大型语言模型来解析系统生成的每个动机，识别每个步骤中哪些特定模型组件被修改。这个过程产生了大约 5,000 个组件实例（component instances），然后我们手动整理并将其分组为 40 个高级类别。然后，我们统计比较了这些类别在我们高性能模型库中的使用比例与其余模型中的使用比例。图 7 中可视化的比较分析揭示了我们 LLM 驱动设计过程的两个关键见解。首先，ASI-ARCH 明显偏好门控机制（gating mechanisms）和卷积（convolutions）等已建立的架构组件，而物理启发机制（physics-inspired mechanisms）等不常见的组件则很少出现，这可能反映了训练文献中的偏差（biases in the training literature）。其次，更具启发性的是，模型库在其组件使用中表现出明显不那么显著的长尾分布（long-tail distribution）。这表明，虽然系统探索了许多新颖的组件，但表现最好的模型收敛到一组经过验证且有效的核心技术。这反映了人类科学家典型的研究方法：通过主要在经过验证的技术基础上进行迭代和创新来获得最先进的结果，而不是为了新颖性而追求新颖性。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202507-alphagopaperread/image-6.png&#39; alt=&#34;图 7&#34; height=&#34;687&#34; width=&#34;948&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;图 7：架构组件使用情况的统计分析。该表提供了组件使用情况的统计细分，比较了表现最佳的模型库与所有其他生成的架构。数据揭示了系统对门控机制和卷积等已建立组件的明确偏好。此外，在组件分布中观察到一个关键区别：非 SOTA 模型表现出更严重的“长尾问题”，这表明它们对新颖组件的更广泛探索在提高性能方面不如 SOTA 模型更集中的策略有效。&lt;/p&gt;&#xA;&lt;h3 id=&#34;53-好的设计从何而来where-do-good-designs-come-from&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;5.3 好的设计从何而来？（Where Do Good Designs Come From?）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#53-%e5%a5%bd%e7%9a%84%e8%ae%be%e8%ae%a1%e4%bb%8e%e4%bd%95%e8%80%8c%e6%9d%a5where-do-good-designs-come-from&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;为了指导未来更高效和自适应框架的开发，了解 ASI-ARCH 的哪些组件对模型架构设计产生最显著的影响至关重要。我们系统的设计过程受其输入限制：对于每个新架构，模型的上下文严格限于从候选池中提取的五个历史实验记录的动机、程序、实验结果、分析和认知部分。鉴于这种有限的上下文，我们可以假设任何新的设计灵感都必须来自三个渠道之一：从人类专家文献中提炼出的知识（我们称之为认知, cognition）、通过对其相关历史实验的分析和总结识别出的模式（分析, analysis），或模型本身生成的新想法（原创, original）。为了量化这三个渠道的贡献，我们设计了一个实验来追溯每个设计思想的来源（provenance of each design idea）。我们提示一个 LLM，充当公正的评估者（impartial evaluator），根据其最可能的来源对每个架构组件（如我们之前的动机分析中识别的）进行分类，将其分类为源自认知、分析或作为原创思想。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202507-alphagopaperread/image-5.png&#39; alt=&#34;图 8：探索阶段的参数分布。&#34; height=&#34;307&#34; width=&#34;494&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;表 3 中显示的结果揭示了一个引人注目的双重模式（compelling two-fold pattern）。在所有生成的架构中，大多数设计思想源自认知阶段，表明对直接的先前示例存在基线依赖（baseline reliance）。然而，当我们专门关注模型库时，观察到显著的转变。对于这些表现最好的架构，归因于分析阶段的设计组件比例显著增加（increases markedly）。这一发现表明了与人类科学进步的关键相似之处：虽然能力可以建立在直接经验之上，但要实现真正的卓越需要更深层次、更抽象的理解。它证明，要使人工智能产生突破性结果，它不能仅仅重用过去的成功（依赖于认知）。相反，它必须参与探索、总结和发现的过程（依赖于分析），以合成新颖和卓越的解决方案。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;表 3：管道组件对 SOTA 模型设计与其他模型设计影响的比较。数据显示，SOTA 架构的开发对经验分析的依赖程度更高。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Category&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Experience&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Cognition&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Originality&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Model Gallery&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.8%&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;48.6%&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;6.6%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Others&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;37.7%&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;51.9%&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;10.4%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;All&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;38.2%&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;51.7%&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;10.1%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;讨论和未来工作discussion-and-future-work&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;&lt;strong&gt;讨论和未来工作（Discussion and Future Work）&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e8%ae%a8%e8%ae%ba%e5%92%8c%e6%9c%aa%e6%9d%a5%e5%b7%a5%e4%bd%9cdiscussion-and-future-work&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;我们的工作成功地展示了一个用于人工智能自我优化（AI self-optimization）的框架，其中自主代理可以迭代地发现和完善新颖的神经架构。本研究的主要重点是建立这种方法的可行性（viability of this methodology）——证明人工智能可以驾驭复杂的设空间以实现最先进的性能。我们的发现为未来的研究开辟了几个有前景的方向。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;多架构初始化（Multi-Architecture Initialization）：&lt;/strong&gt; 我们目前的方法从一个单一的、强大的基线（DeltaNet）开始搜索。这是一个经过深思熟虑的方法论选择（deliberate methodological choice），它提供了一个明确的目标和稳定的基础来推动持续改进，这在探索此类框架的早期阶段至关重要。一个自然而令人兴奋的扩展将是同时用多样化的架构组合（diverse portfolio of architectures）来初始化该过程。这不仅会测试框架管理更复杂、多模态搜索（multi-modal search）的能力，还可能导致发现全新的架构家族。然而，这种尝试将需要计算资源和时间的显著增加。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;组件级分析（Component-wise Analysis）：&lt;/strong&gt; 我们的实验验证了我们管道作为一个整体的有效性。由于每次设计迭代需要大量资源，我们没有进行细粒度的消融研究（fine-grained ablation study）来隔离框架内每个组件的贡献。未来工作的一个关键途径是从多个角度剖析管道（dissect the pipeline from multiple angles），以更好地理解其各个部分的相互作用和个体重要性，例如“认知”和“分析”模块。这将使框架能够进行更有针对性的优化（targeted optimization），可能带来更高的效率和创造力。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;工程优化（Engineering Optimization）：&lt;/strong&gt; 本文的核心贡献在于人工智能用于人工智能框架本身的设计，重点是架构创新和性能。因此，我们没有将我们的工作扩展到包括为新发现的架构编写自定义加速内核（custom accelerated kernels）（例如，使用 Triton）的劳动密集型任务（labor-intensive task）。因此，没有提供它们的计算效率的直接比较。下一步的关键，特别是将这些设计从研究过渡到实践，将是关注这一工程方面。对这些模型的效率和延迟进行基准测试（benchmarking the efficiency and latency）将是一项宝贵的后续研究，并将完成从自动化发现到实际部署（practical deployment）的循环。&lt;/p&gt;&#xA;&lt;h2 id=&#34;表2模型性能比较&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;表2：模型性能比较&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e8%a1%a82%e6%a8%a1%e5%9e%8b%e6%80%a7%e8%83%bd%e6%af%94%e8%be%83&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;训练损失（Train Loss）表示最终训练步骤的损失。测试分数（Test Score）是 ARC-Challenge、ARC-Easy、BoolQ、HellaSwag、PIQA、Social IQA 和 WinoGrande 这 7 项任务的平均性能。绿色下标表示相对于 Gated DeltaNet 基线的改进。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Model Name&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;20M params/1B tokens Train Loss↓&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;20M params/1B tokens Test Score ↑&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;340M params/ 1B tokens Train Loss↓&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;340M params/ 1B tokens Test Score ↑&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DeltaNet (Baseline)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.5749&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.23&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.5055&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;41.16&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Gated DeltaNet (Baseline)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.5678&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.60&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4768&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.10&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveContextFusionNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4973 -0.0705&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.03 +0.43&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4624 -0.0144&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.74 +0.64&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveEntropyGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4423 -0.1255&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.91 +0.31&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4558 -0.0210&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.37 +0.27&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveEntropy Router&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3547 -0.2131&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;39.26 +2.66&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4066 -0.0702&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.31 +2.21&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Adaptive Entropy RouterNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3326 -0.2352&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.94 +0.34&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4298 -0.0470&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.25 +1.15&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Adaptive FloorGate&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4695 -0.0983&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.00 +0.40&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4418 -0.0350&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.57 +1.47&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Adaptive FloorNet-HAF&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4002 -0.1676&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.03 +0.43&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4241 -0.0527&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.59 +1.49&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Adaptive FractalGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.5484 -0.0194&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.43 +1.83&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4351 -0.0417&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.84 +1.74&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Adaptive FusionNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3521 -0.2157&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.51 +0.91&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4336 -0.0432&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.78 +1.68&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Adaptive FusionNet-DSI&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3781 -0.1897&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.63 +0.03&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4270 -0.0498&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.39 +1.29&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveFusionRNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3940 -0.1738&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.03 +0.43&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4086 -0.0682&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.73 +1.63&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4228 -0.1450&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.57 -0.03&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4377 -0.0391&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.64 +1.54&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveGateNet-AFP&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4198 -0.1480&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.80 +1.20&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4193 -0.0575&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.88 +1.78&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveGate Router_X&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4126 -0.1552&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.69 +2.09&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4114 -0.0654&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.68 +0.58&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveGatedRouter-Hybrid&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3335 -0.2343&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.74 +1.14&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4060 -0.0708&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.56 +1.46&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveHierGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.5096 -0.0582&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.71 +0.11&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4433 -0.0335&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.44 +1.34&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveHybridGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3867 -0.1811&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.11 +0.51&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4239 -0.0529&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.01 +0.91&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveMixGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3709 -0.1069&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.91 +0.31&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4289 -0.0479&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.28 +1.18&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveMix Transformer&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4855 -0.0823&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.49 -0.11&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4593 -0.0175&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.50 +0.40&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptivePathRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4324 -0.1354&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.00 +1.40&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4332 -0.0436&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.42 +0.32&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AdaptiveSpanGateConv&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4431 -0.1247&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.74 +0.14&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4247 -0.0521&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.90 +1.80&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Adaptive TokenGate&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4954 -0.0724&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.77 +0.17&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4400 -0.0368&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.08 +1.98&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Adaptive TokenRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3745 -0.1033&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.63 +2.03&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4238 -0.0530&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.56 +0.40&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AnnealedPathFusionNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4564 -0.1114&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.83 +0.23&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4472 -0.0296&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.73 +1.63&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;BAMG MemoryGate&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4804 -0.0874&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.17 -0.43&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4587 -0.0181&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.42 +1.32&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;BlockState FusionNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3551 -0.2127&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.66 +1.06&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4085 -0.0683&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.20 +1.10&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;BoundedTempAnnealNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4331 -0.1347&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;39.60 +3.00&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4098 -0.0670&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.19 +1.09&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ContentSharpRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3127 -0.2551&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.00 +0.40&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4229 -0.0539&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.42 +1.32&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Conv Fusion Wide31&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4279 -0.1399&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.60 +2.00&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4273 -0.0495&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.47 +1.37&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Convex BlendFloorNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4021 -0.1057&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.80 +1.20&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4265 -0.0503&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.54 +1.44&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DepthwiseConvPointMixer&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4081 -0.1597&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.94 +0.34&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4143 -0.0625&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.50 +1.40&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DualFIR-QuadFusion&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3883 -0.1795&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.03 +0.43&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4038 -0.0730&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.71 +1.61&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DualScaleGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4878 -0.0800&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.71 +0.11&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4589 -0.0179&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.58 +0.48&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DualScaleMemory Router&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3900 -0.1778&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.74 +1.14&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4047 -0.0721&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.13 +2.03&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DualScaleStatFusionNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3662 -0.2016&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.97 +0.37&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4123 -0.0645&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.13 +2.03&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DualStagePathGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4596 -0.1082&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.63 +1.03&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4428 -0.0340&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.41 +1.31&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DynFuseFlexGate&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3435 -0.2243&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;39.03 +2.43&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4274 -0.0494&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.19 +1.09&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DynMemGate&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3719 -0.1959&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.14 +0.54&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4247 -0.0521&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.73 +1.63&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DynamicMemGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.5042 -0.0636&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.20 +0.60&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4469 -0.0299&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.59 +0.49&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;EntropyEnhancedMultiScaleGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4217 -0.1461&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.37 +0.77&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4044 -0.0724&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.36 +1.26&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;EntropyFlowGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3964 -0.1714&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.26 -0.34&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4166 -0.0602&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.61 +1.51&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;EntropyFusionNormX&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3963 -0.1715&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.26 +0.66&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4592 -0.0176&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.99 +1.89&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;EntropyKLAdaptiveGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3705 -0.1973&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;39.69 +3.09&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4124 -0.0644&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.24 +1.14&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionBalance Transformer&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3485 -0.2193&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.06 +1.46&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4108 -0.0660&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.86 +1.76&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionConv-AMG&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.5040 -0.0638&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.89 +1.29&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4593 -0.0175&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.38 +0.28&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionFeedback-MixNormNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3071 -0.2607&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.26 +0.66&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4452 -0.0316&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.67 +1.57&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGATE-HMSR&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4316 -0.1362&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.71 +1.11&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4286 -0.0482&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.83 +1.73&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGate AdaptiveNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4446 -0.1232&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.86 +0.26&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4231 -0.0537&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.28 +1.18&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGate-CAGT&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3810 -0.1868&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.17 +0.57&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4060 -0.0708&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.14 +1.04&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGate-HierarchicalRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3657 -0.2021&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.89 +2.29&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4312 -0.0456&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.14 +1.04&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGate-MS&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3509 -0.2169&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.17 +0.57&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4058 -0.0710&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.18 +2.08&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGate-MS3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3836 -0.1842&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.54 +1.94&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4052 -0.0716&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.23 +1.13&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGate-MS3E-Hybrid&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3828 -0.1850&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.09 +0.49&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4251 -0.0517&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.59 +1.49&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGate-X&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3577 -0.2101&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.37 -0.23&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4512 -0.0256&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.19 +1.09&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGate-XL&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4634 -0.1044&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.77 +0.17&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4536 -0.0232&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.70 +1.60&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGate-XR&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4262 -0.1416&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.69 +0.09&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4353 -0.0415&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.09 +1.99&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGateBR&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3475 -0.2203&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;39.23 +2.63&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4229 -0.0539&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.39 +1.29&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGateMemoryNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4445 -0.1233&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.83 +1.23&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4252 -0.0516&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.77 +0.67&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGateNet v3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3889 -0.1789&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.14 +0.54&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4064 -0.0704&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.89 +1.79&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGateX&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3619 -0.2059&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.80 +2.20&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4298 -0.0470&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.37 +1.27&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionGatedFIRNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4233 -0.1445&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;39.37 +2.77&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4048 -0.0720&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.02 +1.92&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FusionLogicNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3962 -0.1716&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.14 +0.54&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4137 -0.0631&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.66 +1.56&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;GateDivergeTransformer&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3576 -0.2102&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;39.14 +2.54&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4103 -0.0665&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.10 +2.00&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;GateFlooredResNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3467 -0.2211&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.97 +2.37&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4441 -0.0327&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.89 +0.79&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;GateFusionNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3957 -0.1721&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.91 +2.31&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4415 -0.0353&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.66 +1.56&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;GatedFusionTransformer&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3416 -0.2262&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.60 +2.00&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4126 -0.0642&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.01 +0.91&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;GroupTempMLP&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3948 -0.1730&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.97 +1.37&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4243 -0.0525&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.84 +0.74&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;HeadWiseGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4140 -0.1538&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.89 +1.29&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4131 -0.0637&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.90 +1.80&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;HierGate-MEM&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4518 -0.1160&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.09 +1.49&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4398 -0.0370&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.76 +1.66&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;HierarchiMix-Gate&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4372 -0.1306&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.83 +0.23&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4096 -0.0672&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.99 +1.89&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;HybridCausalRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4242 -0.1436&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.91 +2.31&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4233 -0.0535&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.53 +1.43&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;HybridFlowNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3745 -0.1933&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.57 +0.97&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4238 -0.0530&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.25 +2.15&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;HybridFusionFloor&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3926 -0.1752&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.66 +1.06&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4340 -0.0428&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.22 +1.12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;HybridGateFlow&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3653 -0.2025&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.63 +0.03&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.3998 -0.0770&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.78 +1.68&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;HybridGateTransformer&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4780 -0.0898&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;39.03 +2.43&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4656 -0.0112&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.74 +1.64&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;HybridScale-GateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4064 -0.1614&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.69 +0.09&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4191 -0.0577&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.89 +1.79&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;HybridSparseGateMemoryNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4204 -0.1474&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.29 +1.69&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4469 -0.0299&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.49 +1.39&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;HyenaMAFR&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3518 -0.2160&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;40.69 +4.09&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4283 -0.0485&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.38 +1.28&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;HyperRouteFusion&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3655 -0.2023&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.89 +0.29&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4040 -0.0728&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.12 +1.02&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;LexiFuse-Percept&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3432 -0.2246&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.14 +1.54&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4327 -0.0441&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.02 +1.92&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;LocalGlobalBlendNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4653 -0.1025&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.54 +0.94&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4361 -0.0407&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.56 +1.46&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;MinFloorRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4057 -0.1621&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.31 +0.71&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4269 -0.0499&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.97 +1.87&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;OutputAwareMultiScaleRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3917 -0.1761&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.03 +0.43&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4046 -0.0722&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.58 +2.48&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ParallelFusionTransformer&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3923 -0.1755&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.20 +0.60&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4141 -0.0627&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.04 +0.94&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;PathAwareMemoryRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3680 -0.1998&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;39.26 +2.66&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4085 -0.0683&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.74 +1.64&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;PathGatedFusionNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3772 -0.1906&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.31 +0.71&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4301 -0.0467&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.69 +1.59&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;PerHeadSimplexRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3930 -0.1748&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.49 -0.11&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4116 -0.0652&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.64 +1.54&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;QuotaGatedStatNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4415 -0.1263&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.26 +0.66&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4163 -0.0605&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.64 +0.54&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ResConvGate&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3881 -0.1797&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.11 +0.51&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4418 -0.0350&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.72 +0.62&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ResGate MS FusionNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4848 -0.0830&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.69 +2.09&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4126 -0.0642&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.76 +0.66&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ResiFuse-CausalGater&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3674 -0.2004&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.23 -0.37&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4243 -0.0525&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.03 +0.93&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;SparseGateDelta&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4503 -0.1175&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.31 +0.71&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4433 -0.0335&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.40 +1.30&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;SparseTempGateNet&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4493 -0.1185&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.03 +0.43&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4693 -0.0075&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.08 +0.98&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;SpectralContextMixer&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;5.1512 -0.5834&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.17 -0.43&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4695 -0.0073&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.41 +1.31&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;StatGateRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4155 -0.1523&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.69 +0.09&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4465 -0.0303&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.43 +1.33&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;StreamAwareRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3508 -0.2170&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;37.97 +1.37&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4179 -0.0589&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.62 +1.52&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;SynerFuse-LGX&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3611 -0.2067&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;39.80 +3.20&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4243 -0.0525&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.67 +1.57&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;TempMixAnnealRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3416 -0.2262&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;38.46 +1.86&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4014 -0.0754&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;44.01 +1.91&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;TokenPruneRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3754 -0.1924&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;39.40 +2.80&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4253 -0.0515&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.69 +0.59&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;TokenScaleRouter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.4552 -0.1126&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;39.31 +2.71&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4274 -0.0494&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;42.91 +0.81&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;TriScale-GatedFusion&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4.3647 -0.2031&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;36.69 +0.09&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3.4027 -0.0741&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;43.70 +1.60&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;</description>
    </item>
    <item>
      <title>“天才法案”与新东印度公司：美元稳定币将如何挑战现有法币体系及国家形态</title>
      <link>http://localhost:1313/posts/202507-forward_post/</link>
      <pubDate>Sun, 20 Jul 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/202507-forward_post/</guid>
      <category domain="http://localhost:1313/categories/technology/">Technology</category>
      <description>&lt;p&gt;“天才法案”与新东印度公司：美元稳定币将如何挑战现有法币体系及国家形态&lt;/p&gt;&#xA;&lt;p&gt;这是一种极其高明的非对称战略。美国正在利用其对手最薄弱的一环：对失控的恐惧，来构建自己的护城河 &amp;ndash; 作者&lt;/p&gt;&#xA;&lt;h2 id=&#34;一历史的幽灵东印度公司的数字回归&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;一、历史的幽灵：东印度公司的数字回归&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%b8%80%e5%8e%86%e5%8f%b2%e7%9a%84%e5%b9%bd%e7%81%b5%e4%b8%9c%e5%8d%b0%e5%ba%a6%e5%85%ac%e5%8f%b8%e7%9a%84%e6%95%b0%e5%ad%97%e5%9b%9e%e5%bd%92&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;历史从不简单地重复，但它会押韵。当川普愉快的在“天才法案”（GENIUS Act）的文件上，签下自己的名字的时候，我脑中涌现的，是历史的记忆——那是在十七、十八世纪，被国家授予了主权权力的商业巨兽，荷兰与英国的东印度公司。&lt;/p&gt;&#xA;&lt;p&gt;这部法案看似只是金融监管的技术性调整，但其深层意涵，却是在为21世纪的“新东印度公司”颁发特许状，一场重塑全球权力格局的变革已然拉开序幕。&lt;/p&gt;&#xA;&lt;p&gt;1a. 新权力的特许状&lt;/p&gt;&#xA;&lt;p&gt;回溯四百年前，荷兰东印度公司（VOC）和英国东印度公司（EIC）并非寻常的贸易商行。它们是凭借国家授权，集商人、士兵、外交官和殖民者于一身的混合体。荷兰政府授予VOC的权力包括：自行招募军队、发行货币、与其他国家君主签订条约，甚至发动战争。同样，英女王伊丽莎白一世授予EIC的皇家特许状，也使其拥有了在印度进行贸易垄断、建立军事和行政职能的权力。这些公司是历史上最早的跨国公司，它们控制的不是简单的商品，而是定义了那个时代全球化的命脉——海洋贸易航线。&lt;/p&gt;&#xA;&lt;p&gt;今天，&amp;ldquo;天才法案&amp;quot;所做的，正是以立法形式，为新时代的权力巨头——稳定币发行商——授予合法性。表面上，法案旨在通过设定储备金标准、要求资产认证等方式来规范市场，防范风险。但其真正的效果，是通过筛选和认证，创造出一个受美国政府认可的&amp;quot;合法&amp;quot;稳定币发行商寡头集团。这些被&amp;quot;加冕&amp;quot;的公司，如Circle（USDC发行商）、未来的Tether（如果其选择合规），以及像apple、google、meta、x等多家坐拥数十亿用户的互联网巨头，他们将不再是野蛮生长的加密叛军，而是被正式纳入美国金融战略版图的&amp;quot;特许公司&amp;rdquo;。它们控制的，将是新时代的全球贸易航线——24/7不间断运行的、无国界的数字金融轨道。&lt;/p&gt;&#xA;&lt;p&gt;1b. 从贸易航路到金融轨道&lt;/p&gt;&#xA;&lt;p&gt;东印度公司的权力根植于对物理贸易路线的垄断。它们用炮舰和要塞确保了香料、茶叶和鸦片贸易的独占权，并从中攫取了巨额利润。新时代的&amp;quot;数字东印度公司&amp;quot;则将通过控制全球价值流动的金融轨道来行使权力。当一个由美国财政部或特定机构监管的美元稳定币，成为全球跨境支付、DeFi（去中心化金融）借贷、RWA（真实世界资产）交易的默认结算单位时，其发行商就掌握了定义新金融体系规则的权力。它们可以决定谁能接入这个系统，可以根据指令冻结任何地址的资产，可以设定交易的合规标准。这是一种比控制物理航线更深层、更无形的权力。&lt;/p&gt;&#xA;&lt;p&gt;1c. 与国家之间模糊的共生与对抗&lt;/p&gt;&#xA;&lt;p&gt;东印度公司的历史，是一部与母国之间关系不断演变的史诗。起初，它们是国家推行重商主义、与竞争对手（如葡萄牙）进行战略博弈的代理人。然而，公司的逐利本性使其迅速膨胀为一个独立的权力中心。为了利润，EIC不惜发动战争（如普拉西战役）、从事不道德贸易（如鸦片贸易），屡屡将英国政府拖入其不愿参与的外交与军事泥潭。最终，当公司因管理不善和过度扩张而濒临破产时，又不得不向国家求援，导致政府通过一系列法案（如1773年的《茶叶法案》和1784年的《皮特法案》）逐步加强监管，最终在1858年印度民族大起义后，彻底剥夺了其行政权力，将其领土收归王室直接统治。&lt;/p&gt;&#xA;&lt;p&gt;这段历史为我们预演了未来稳定币发行商与美国政府之间可能的动态关系。目前，这些公司被视为推行美元霸权、对抗中国数字人民币的战略资产。然而，一旦它们成长为&amp;quot;大到不能倒&amp;quot;的全球金融基础设施，其自身的机构利益和股东诉求将变得至关重要。它们可能会为了商业利益，做出与美国外交政策相悖的决定。&lt;/p&gt;&#xA;&lt;p&gt;这预示着，当私人机构发行的美元稳定币体系过于庞大时，将不可避免地和国家主权发生冲突，届时，我们很可能会看到基于利益博弈的稳定币法案的再升级。&lt;/p&gt;&#xA;&lt;p&gt;以下表格清晰地对比了这两种跨越时空的权力实体，揭示了历史惊人的相似性：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202507-forward_post/1.png&#39; alt=&#34;图像&#34; height=&#34;207&#34; width=&#34;658&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;历史的幽灵已经归来。通过&amp;quot;天才法案&amp;quot;，美国正在释放一种新的东印度公司。它披着科技创新的外衣，手持区块链的权杖，但其内核，却是古老的商业帝国逻辑——一个由国家特许、最终将与国家争夺权力的全球性私人企业主权。&lt;/p&gt;&#xA;&lt;h2 id=&#34;二全球货币海啸美元化大通缩与非美元央行的终结&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;二、全球货币海啸：美元化、大通缩与非美元央行的终结&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%ba%8c%e5%85%a8%e7%90%83%e8%b4%a7%e5%b8%81%e6%b5%b7%e5%95%b8%e7%be%8e%e5%85%83%e5%8c%96%e5%a4%a7%e9%80%9a%e7%bc%a9%e4%b8%8e%e9%9d%9e%e7%be%8e%e5%85%83%e5%a4%ae%e8%a1%8c%e7%9a%84%e7%bb%88%e7%bb%93&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;&amp;ldquo;天才法案&amp;quot;所催生的，不仅是一个新的权力实体，更是一场将席卷全球的货币海啸。这场海啸的能量，源于1971年布雷顿森林体系的崩溃。正是那次历史性的&amp;quot;解放&amp;rdquo;，为今天美元稳定币的全球征服铺平了道路。对于那些主权信用本就脆弱的国家而言，未来将不再是由政府选择本国货币还是传统美元，而是由民众选择在崩溃的本币和触手可及、毫无摩擦的数字美元之间做出抉择。这将引发一波前所未有的超级美元化浪潮，彻底终结许多国家的货币主权，并给它们带来毁灭性的通缩冲击。&lt;/p&gt;&#xA;&lt;p&gt;2a. 布雷顿森林体系的幽灵&lt;/p&gt;&#xA;&lt;p&gt;要理解稳定币的威力，必须回到布雷顿森林体系解体的那个时刻。该体系将美元与黄金挂钩，其他货币与美元挂钩，形成了一个以黄金为最终锚的稳定结构。然而，这一体系内含一个致命的矛盾，即&amp;quot;特里芬难题&amp;quot;：作为全球储备货币，美元必须通过美国的贸易逆差持续流向世界，以满足全球贸易发展的需求；但持续的逆差又会动摇人们对美元兑换黄金能力的信心，最终导致体系崩溃。1971年，尼克松总统关闭黄金兑换窗口，宣告了该体系的死亡。&lt;/p&gt;&#xA;&lt;p&gt;然而，美元的死亡却是它新生的开始。在随后的&amp;quot;牙买加体系&amp;quot;下，美元与黄金彻底脱钩，成为一种纯粹的信用货币。它被从&amp;quot;黄金的枷锁&amp;quot;中解放出来，美联储可以更自由地发行货币，以满足美国国内的财政需求（如越南战争的开支）和全球对美元流动性的需求。这奠定了过去半个世纪美元霸权的基础——一个依赖于全球网络效应和美国综合国力的、无锚的霸权。稳定币，尤其是受美国法律认可的稳定币，正是这个后布雷顿森林体系的终极技术形态。它将美元的流动性供给能力提升到了一个全新的维度，使其能够绕过层层监管的各国政府，绕过传统的、缓慢且昂贵的银行体系，直接渗透到全球经济的每一个毛细血管，每一个个人的手（机）里。&lt;/p&gt;&#xA;&lt;p&gt;2b. 超级美元化（Hyper-dollarization）的降临&lt;/p&gt;&#xA;&lt;p&gt;在阿根廷、土耳其等长期遭受高通胀和政治动荡困扰的国家，民众为了保全财富，自发地将本币兑换成美元，这便是&amp;quot;美元化&amp;quot;现象。然而，传统美元化存在诸多障碍：你需要银行账户，需要面对资本管制，需要承担持有实体货币的风险。稳定币彻底拆除了这些藩篱。任何拥有智能手机的人，都可以在几秒钟内，以极低的成本，将即将贬值的本币换成锚定美元的稳定币。&lt;/p&gt;&#xA;&lt;p&gt;在越南，中东，香港，日本，韩国，一家家的u店正在快速的取代传统的找换店，迪拜售楼处开始接受比特币付款，义乌小店开始能用u来买烟。&lt;/p&gt;&#xA;&lt;p&gt;这些无孔不入支付渗透，将把美元稳定币化从一个渐进的过程，变成一场瞬时完成的海啸。当一个国家的通胀预期稍有抬头，资本将不再是&amp;quot;外流&amp;quot;，而是&amp;quot;蒸发&amp;quot;——瞬间从本币体系中消失，进入全球加密网络。我们可将这种属性定义为&amp;quot;对主权货币的替代性增强&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;对于那些信用本已摇摇欲坠的政府，这将是致命一击。本币的地位将被彻底动摇，因为民众和企业拥有了一个更完美、高效的替代品。&lt;/p&gt;&#xA;&lt;p&gt;2c. 大通缩与国家权力的蒸发&lt;/p&gt;&#xA;&lt;p&gt;当一个经济体被超级美元化浪潮席卷后，其主权国家将失去两项最核心的权力：一是通过印钞来弥补财政赤字的权力（即货币铸币税）；二是通过利率和货币供应量来调控经济的权力（即货币政策独立性）。&lt;/p&gt;&#xA;&lt;p&gt;其后果是灾难性的。&lt;/p&gt;&#xA;&lt;p&gt;首先，随着本币被大规模抛弃，其汇率将螺旋式下跌，陷入恶性通胀。然而，在以美元计价的经济活动层面，却会出现剧烈的大通缩。资产价格、工资和商品价值若以美元衡量，将一落千丈。&lt;/p&gt;&#xA;&lt;p&gt;其次，政府的税基将随之蒸发。以迅速贬值的本币计价的税收，将变得毫无价值，国家财政将陷入崩溃。这种财政的死亡螺旋，将彻底摧毁国家的治理能力。&lt;/p&gt;&#xA;&lt;p&gt;这一过程，从川普签署天才法案为起点，将通过RWA（真实世界资产上链）加速。&lt;/p&gt;&#xA;&lt;p&gt;2d. 白宫 vs. 美联储：美国内部的权力博弈&lt;/p&gt;&#xA;&lt;p&gt;这场货币革命并不只是打击美国的对手，它甚至将在美国内部引发危机。&lt;/p&gt;&#xA;&lt;p&gt;目前，美联储作为独立的中央银行，掌握着美国的货币政策。然而，一个由财政部或白宫下设新机构监管的、私人发行的数字美元体系，将创造出一个平行的货币轨道。行政部门可以通过影响对稳定币发行商的监管规则，来间接甚至直接地干预货币供应和流向，从而绕开美联储。这可能成为美国行政分支为实现其政治或战略目标（例如，在选举年刺激经济，或精准制裁对手）而打造的强大工具，从而在将来引发美元一场关于货币政策独立性的深刻的信任危机。&lt;/p&gt;&#xA;&lt;h2 id=&#34;三21世纪的金融战场美国对抗中国的自由金融体系&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;三、21世纪的金融战场：美国对抗中国的“自由金融体系”&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%b8%8921%e4%b8%96%e7%ba%aa%e7%9a%84%e9%87%91%e8%9e%8d%e6%88%98%e5%9c%ba%e7%be%8e%e5%9b%bd%e5%af%b9%e6%8a%97%e4%b8%ad%e5%9b%bd%e7%9a%84%e8%87%aa%e7%94%b1%e9%87%91%e8%9e%8d%e4%bd%93%e7%b3%bb&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;如果说稳定币法案对内是一场权力重构，那么对外，它就是美国在与中国的大国博弈棋局上，落下的一枚至关重要的棋子：通过立法扶持一个私有的、基于公共区块链的、以美元为核心的&amp;quot;自由金融体系&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;3a. 新时代的金融铁幕&lt;/p&gt;&#xA;&lt;p&gt;二战后，美国主导建立了布雷顿森林体系，其目的不仅是重建战后经济秩序，更是在冷战背景下，构建一个将苏联及其盟友排除在外的西方经济集团。国际货币基金组织（IMF）和世界银行等机构，成为了推行西方价值观和巩固同盟体系的工具。如今，&amp;ldquo;天才法案&amp;quot;所要构建的，正是数字时代的新版&amp;quot;布雷顿森林体系&amp;rdquo;。它旨在建立一个以美元稳定币为基础的全球金融网络，这个网络开放、高效，且在意识形态上与中国国家主导的模式截然对立。这有点像美国当年为对抗苏联的自由贸易体系的安排，但出手更狠。&lt;/p&gt;&#xA;&lt;p&gt;3b. 开放围剿封闭：许可制 vs. 无需许可&lt;/p&gt;&#xA;&lt;p&gt;中美在数字货币上的战略路径，呈现出根本性的差异，这是一场&amp;quot;开放&amp;quot;对&amp;quot;封闭&amp;quot;的意识形态战争。&lt;/p&gt;&#xA;&lt;p&gt;中国的数字人民币（e-CNY）是一个典型的&amp;quot;许可制&amp;quot;（Permissioned）系统。它运行在由央行控制的私有账本上，每一笔交易、每一个账户都在国家的严密监控之下。这是一个数字化的&amp;quot;围墙花园&amp;quot;，其优势在于高效的中心化管理和强大的社会治理能力，但其封闭性也使其难以获得全球用户的真正信任，尤其是那些对其监控能力抱有警惕的个人和机构。&lt;/p&gt;&#xA;&lt;p&gt;相比之下，美国通过&amp;quot;天才法案&amp;quot;所支持的稳定币，则建立在以太坊、Solana等&amp;quot;无需许可&amp;quot;（Permissionless）的公共区块链之上。这意味着，任何人，无论身在何处，都可以在这个网络上进行创新——开发新的金融应用（DeFi）、创建新的市场、进行交易——而无需得到任何中心化机构的批准。美国政府的角色，不是成为这个网络的运营者，而是成为这个网络中最核心资产（美元）的&amp;quot;信用担保人&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;这是一种极其高明的非对称战略。美国正在利用其对手最薄弱的一环——对失控的恐惧——来构建自己的护城河。它将全球的创新者、开发者和寻求金融自由的普通用户，都吸引到以美元为中心的开放生态中。中国被邀请来参加一场它在结构上就无法获胜的游戏：一个由国家控制的局域网，如何与一个向全球开放的、充满活力的金融互联网竞争？&lt;/p&gt;&#xA;&lt;p&gt;3c. 绕开SWIFT：釜底抽薪的降维打击&lt;/p&gt;&#xA;&lt;p&gt;近年来，中俄等国应对美元霸权的一个核心策略，是建立绕开美国控制的金融基础设施，例如替代SWIFT（环球银行金融电信协会）的跨境支付系统。然而，稳定币的出现，让这一策略显得笨拙而过时。基于公共区块链的稳定币交易，从根本上就不需要经过SWIFT或任何传统银行的中介。价值的转移，通过全球分布的节点网络以密码学方式完成，这是一个全新的、与旧体系平行的轨道。&lt;/p&gt;&#xA;&lt;p&gt;这意味着，美国不再需要费力地保卫旧的金融城堡（SWIFT），而是直接开辟了一个全新的战场。在这个新战场上，规则由代码和协议定义，而非国家间的条约。当全球大部分的数字价值开始在这条新轨道上运行时，试图建立一个&amp;quot;SWIFT替代品&amp;quot;就如同在高速公路时代，努力去修建一条更豪华的马车道一样，失去了意义。&lt;/p&gt;&#xA;&lt;p&gt;3d. 赢得网络效应之战&lt;/p&gt;&#xA;&lt;p&gt;数字时代的核心战争，是网络效应的战争。平台一旦吸引了足够多的用户和开发者，就会形成强大的引力，使其竞争对手难以追赶。通过&amp;quot;天才法案&amp;quot;，美国正在将美元——这个全球最强健的货币网络——与加密世界——这个全球最具创新活力的金融网络——进行融合。其产生的网络效应将是指数级的。&lt;/p&gt;&#xA;&lt;p&gt;全球的开发者会优先选择为拥有最大流动性和最广泛用户基础的美元稳定币开发应用。全球的用户会因为丰富的应用场景和资产选择，而涌入这个生态。相比之下，e-CNY可能在&amp;quot;一带一路&amp;quot;等特定范围内推广，但它封闭的、以人民币为中心的特性，使其难以在全球范围内与这个开放的美元生态系统相抗衡。&lt;/p&gt;&#xA;&lt;p&gt;综上所述，&amp;ldquo;天才法案&amp;quot;远非一部简单的国内法案。它是美国在21世纪地缘政治棋局中的核心战略部署。它以一种&amp;quot;四两拨千斤&amp;quot;的方式，利用&amp;quot;去中心化&amp;quot;和&amp;quot;开放&amp;quot;的理念，来巩固其最核心的权力——美元霸权。它不是在与中国进行一场对称的军备竞赛，而是通过改变金融战场的地形，将竞争带入一个美国拥有绝对优势的新维度，对对手的金融体系进行降维打击。&lt;/p&gt;&#xA;&lt;h2 id=&#34;四万物的非国家化rwa与defi如何瓦解国家控制&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;四、万物的&amp;quot;非国家化&amp;rdquo;：RWA与DeFi如何瓦解国家控制&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%9b%9b%e4%b8%87%e7%89%a9%e7%9a%84%e9%9d%9e%e5%9b%bd%e5%ae%b6%e5%8c%96rwa%e4%b8%8edefi%e5%a6%82%e4%bd%95%e7%93%a6%e8%a7%a3%e5%9b%bd%e5%ae%b6%e6%8e%a7%e5%88%b6&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;稳定币本身并非革命的终点，它更像是一匹攻入城的特洛伊城木马。一旦全球用户习惯了通过它来持有和转移价值，一场更宏大、更深刻的革命便会随之而来。这场革命的核心，是将一切有价值的资产——股票、债券、房产、艺术品——都转化为可以在全球公共账本上自由流动的数字代币。这个过程，即&amp;quot;真实世界资产上链&amp;quot;（RWA），将从根本上切断资产与特定国家司法管辖权的联系，实现资产的&amp;quot;非国家化&amp;quot;，并最终颠覆以银行为核心的传统金融体系。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202507-forward_post/2.jpeg&#39; alt=&#34;图像&#34; height=&#34;673&#34; width=&#34;680&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;4a. 稳定币：通往新世界的&amp;quot;特洛伊木马&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;在古老的传说中，希腊人通过献上一具巨大的木马，最终攻陷了坚固的特洛伊城。今天，稳定币正扮演着类似的角色。在各国政府和监管机构眼中，受监管的、有资产抵押的稳定币似乎是驯服加密世界这匹野马的&amp;quot;木马&amp;quot;——一个相对安全、可控的入口。&lt;/p&gt;&#xA;&lt;p&gt;然而，历史的吊诡之处在于，GENIUS法案在致力于通过推广&amp;quot;安全&amp;quot;的稳定币来巩固国家权力的同时，无意中为&amp;quot;危险&amp;quot;的、真正去中心化的非国家货币，构建了有史以来最庞大的用户获取渠道。&lt;/p&gt;&#xA;&lt;p&gt;稳定币的核心功能，是作为连接传统法定货币世界与加密资产世界的门户。它们是加密世界的&amp;quot;入口匝道&amp;quot;（on-ramp），是跨越两个世界的&amp;quot;桥梁&amp;quot;。一个普通用户最初可能只是为了享受稳定币在跨境汇款或日常支付中带来的低成本和高效率，或商家给予的补贴。但一旦他们下载了数字钱包，习惯了链上交易的模式，他们与比特币、以太坊等真正去中心化资产之间的距离，就只剩下一次点击。&lt;/p&gt;&#xA;&lt;p&gt;那些提供稳定币交易服务的平台，如Coinbase或Kraken，本身就是一个包罗万象的加密资产超市。用户为了稳定币而来，但很快就会被DeFi协议提供的高额收益、或是比特币作为价值存储的叙事所吸引。从持有USDC到质押ETH参与流动性挖矿，这个过程对于一个已经入门的用户来说，是自然而然的延伸。&lt;/p&gt;&#xA;&lt;p&gt;这就为国家制造了一个深刻的悖论。国家的短期目标是通过推广与美元挂钩的稳定币来强化美元霸权。为了实现这一目标，国家必须鼓励和支持用户友好的钱包、交易所和各类应用的开发与普及。然而，这些基础设施在技术上是中立的、协议无关的。同一个钱包，既可以存放受监管的USDC，也可以存放匿名的门罗币；同一个交易所，既可以交易合规的稳定币，也可以交易完全去中心化的比特币。&lt;/p&gt;&#xA;&lt;p&gt;随着用户对加密世界的理解加深，他们对更高收益、更强隐私保护、或真正抗审查性的需求也会随之增长。届时，他们自然会从仅提供价值稳定但无增值潜力的稳定币，转向那些能够满足这些更高层次需求的资产。&lt;/p&gt;&#xA;&lt;p&gt;4b. RWA革命：资产挣脱国界的枷锁&lt;/p&gt;&#xA;&lt;p&gt;如果说DeFi是这场革命的上层建筑，那么RWA就是其坚实的经济基础。RWA的核心，是将存在于物理世界或传统金融系统中的资产，通过法律和技术流程，转化为区块链上的代币。&lt;/p&gt;&#xA;&lt;p&gt;我们可以设想这样一个场景：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;一个由中国团队开发的苹果应用商店里拥有数百万全球用户的app，其所有权通过法律和技术手段被代币化，成为在区块链上流通的数字凭证。&lt;/li&gt;&#xA;&lt;li&gt;该代币在一个链上的、无需许可的去中心化金融（DeFi）协议中进行交易。&lt;/li&gt;&#xA;&lt;li&gt;阿根廷一位用户在发起交易后，几秒钟内就在自己的数字钱包中收到了这个代币。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;整个过程——资产的代币化、抵押、稳定币的铸造与转移——完全在链上完成，绕开了中国、美国（因其美元锚定）和阿根廷三国的传统银行系统。这不仅仅是一条更优越的支付轨道，它是一个平行的、几乎无视威斯特伐利亚体系所划定的政治与法律边界的金融平行宇宙。&lt;/p&gt;&#xA;&lt;p&gt;这正是&amp;quot;货币的非国家化&amp;quot;推动&amp;quot;金融的非国家化&amp;quot;，并最终实现&amp;quot;资本的非国家化&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;在资本可以非国家化的情况下，资本家，自然也将非国家化。&lt;/p&gt;&#xA;&lt;p&gt;4c. 传统金融体系的末日&lt;/p&gt;&#xA;&lt;p&gt;这个由稳定币驱动、以RWA为基础的新金融生态，是对传统金融体系的一次全面冲击。传统金融的核心功能，本质上是作为信息和信任的中介。银行、券商、交易所、支付公司等机构，通过其庞大的资本、复杂的系统和政府的牌照，来解决交易双方的信任问题，并从中收取高昂的费用。&lt;/p&gt;&#xA;&lt;p&gt;而区块链技术，通过其不可篡改、公开透明的特性，以及由代码（智能合约）强制执行的规则，提供了一种全新的信任机制——&amp;ldquo;代码即法律&amp;rdquo;。在这个新范式下，传统中介的大部分功能都显得多余和低效：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;银行的存贷业务，可以被去中心化的借贷协议所取代。&lt;/li&gt;&#xA;&lt;li&gt;交易所的撮合交易，可以被自动做市商（AMM）算法所取代。&lt;/li&gt;&#xA;&lt;li&gt;支付公司的跨境结算，可以被稳定币的秒级全球转账所取代。&lt;/li&gt;&#xA;&lt;li&gt;华尔街的资产证券化，可以被更透明、更高效的RWA代币化所取代。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;五主权个体的崛起与国家的黄昏&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;五、主权个体的崛起与国家的黄昏&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e4%ba%94%e4%b8%bb%e6%9d%83%e4%b8%aa%e4%bd%93%e7%9a%84%e5%b4%9b%e8%b5%b7%e4%b8%8e%e5%9b%bd%e5%ae%b6%e7%9a%84%e9%bb%84%e6%98%8f&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;当资本可以无国界流动，当资产可以脱离司法管辖，当权力从民族国家向私人巨头和网络社群转移，我们便抵达了这场变革的终点——一个由&amp;quot;主权个人&amp;quot;（The Sovereign Individual）主导，以威斯特伐利亚体系（Westphalian system）终结为标志的新时代。这场由稳定币和人工智能（AI）共同驱动的革命，其深远影响将超越法国大革命，因为它并不仅仅带来政权的更迭，它改变的，更是权力的存在形式。&lt;/p&gt;&#xA;&lt;p&gt;（主权个人一书，的确是我们这个时代的预言）&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#39;http://localhost:1313/posts/202507-forward_post/3.png&#39; alt=&#34;图像&#34; height=&#34;475&#34; width=&#34;310&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;5a. 《主权个人》的预言成真&lt;/p&gt;&#xA;&lt;p&gt;1997年，詹姆斯·戴尔·戴维森（James Dale Davidson）和里斯-莫格勋爵（Lord William Rees-Mogg）在其惊世骇俗的著作《主权个人》中预言，信息时代的到来将从根本上改变暴力和权力的逻辑。他们认为，民族国家之所以能在工业时代崛起，是因为它能有效地保护大规模、固定化的工业资产，并从中征税。但在信息时代，最重要的资本——知识、技能和金融资产——将变得高度流动，甚至存在于无形的网络空间中。届时，国家将像一个试图用栅栏圈住“长了翅膀的牛”的牧场主，其征税和控制能力将大打折扣。&lt;/p&gt;&#xA;&lt;p&gt;稳定币、DeFi和RWA的出现，正是这本书中“网络货币”（cybermoney）和“网络经济”（cybereconomy）的现实版本。它们共同构建了一个全球性的、低摩擦的价值网络，让资本真正长上了翅膀。一个精英个体可以轻松地将自己的财富配置于全球各地的RWA代币，并通过稳定币在不同司法管辖区之间瞬时转移，而这一切都记录在一个国家机器难以触及的公共账本上。书中预言的“个人将摆脱政府的压迫”和“财富持有者将能够绕开国家对货币的垄断”正在成为现实。&lt;/p&gt;&#xA;&lt;p&gt;5b. 威斯特伐利亚体系的终结&lt;/p&gt;&#xA;&lt;p&gt;自1648年《威斯特伐利亚和约》签订以来，世界政治的基本单位就是主权国家。这个体系的核心原则包括：国家在其领土内拥有至高无上的主权、各国主权平等、以及互不干涉内政原则。这个体系的基石，是国家对领土内的人口和财产的绝对控制权。&lt;/p&gt;&#xA;&lt;p&gt;主权个人的崛起，正在从根本上侵蚀这一基石。当最富创造力和生产力的个体，其经济活动和财富积累都发生在“域外”（cyberspace）时，领土的边界就失去了意义。国家发现自己无法有效向这些全球流动的精英征税，其财政基础将不可避免地被削弱。为了阻止财富外流，绝望的政府可能会采取更激进、更专制的手段，例如书中预言的“人质劫持式”的税收和对促成个人自主的技术进行破坏。但这只会加速精英的出走，形成恶性循环。最终，民族国家可能会蜕变为一个空壳，其功能仅限于为那些无法进入全球数字经济的、不那么具有流动性的民众提供福利和保障——一个为穷人服务的“保姆国家“。但显然，这样的国家，与财富创造无关&lt;/p&gt;&#xA;&lt;p&gt;5c. 最后的边疆：隐私与国家税收的终局之战&lt;/p&gt;&#xA;&lt;p&gt;这场革命的下一步，将是隐私。目前的公共区块链虽然是匿名的（pseudonymous），但交易仍可被追踪。然而，随着零知识证明等隐私技术的成熟（如Zcash和Monero所采用的技术），未来的金融交易将可能实现完全的匿名和不可追踪。&lt;/p&gt;&#xA;&lt;p&gt;当全球化的、基于稳定币的金融系统与强大的隐私技术相结合时，就构成了对国家税收能力的最终挑战。税务机关将面临一个无法穿透的“黑箱”，无法有效识别交易方和应税所得。这将是“去监管”的最终形态，因为当国家失去征税能力时，它也就失去了进行有效监管和提供公共服务的能力。&lt;/p&gt;&#xA;&lt;p&gt;法国大革命，是用“民族主权”替代了“君主主权”，权力的主体从国王换成了民族国家，但权力的地域性本质并未改变。而稳定币开启的这场革命，则是用“网络主权”和“个体主权”，去消解“民族国家的领土主权”。它不是权力的转移，而是权力的“去中心化”和“非国家化”。这是一个更根本、更彻底的范式转移，其影响之深远，确实不亚于，甚至可能超过法国大革命。我们正站在一个旧世界解体、新秩序浮现的黎明。这个新世界将赋予个体前所未有的自由和力量，但也将带来我们今天难以想象的混乱与挑战。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>十大英雄联盟悲情语录</title>
      <link>http://localhost:1313/posts/202507-lol/</link>
      <pubDate>Sun, 20 Jul 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/202507-lol/</guid>
      <category domain="http://localhost:1313/categories/%E4%BA%BA%E9%97%B4%E4%B8%96/">人间世</category>
      <description>&lt;p&gt;刚看了一个视频，突然想到有句话这个视频里面有，于是把这个视频的字幕提取出来了。&lt;/p&gt;&#xA;&lt;p&gt;下面的视频制作时间：2019-04-21&lt;/p&gt;&#xA;&lt;p&gt;在刚刚结束的比赛中，IG击败京东获得了历史上第一个联赛冠军，捍卫了如今LPL第一排面的地位。电子竞技只有一个胜者却有无数败者。LPL固然精彩，但那些浴火而生的新军、战斗不息的老兵同样有动人的故事。苦追而不得，意满却难平。&lt;/p&gt;&#xA;&lt;p&gt;今天我们就来盘点那些选手们的意难平语录&lt;/p&gt;&#xA;&lt;h2 id=&#34;第十名-做了个梦我们拿了冠军这一定是梦吧rookie&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;第十名 “做了个梦，我们拿了冠军，这一定是梦吧。”&amp;ndash;Rookie&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e5%8d%81%e5%90%8d-%e5%81%9a%e4%ba%86%e4%b8%aa%e6%a2%a6%e6%88%91%e4%bb%ac%e6%8b%bf%e4%ba%86%e5%86%a0%e5%86%9b%e8%bf%99%e4%b8%80%e5%ae%9a%e6%98%af%e6%a2%a6%e5%90%a7rookie&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;在这期盘点的10人中，rookie是唯一一个在上赛季捧杯的选手，因此我们将它排在第十名。&lt;code&gt;但在他站上最高山峰之后，大家是否还记得他在风雨中奔跑了多久，才等来了这场金色的雨。&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;在初来LPL的时候，rookie只是IG买kakao的赠品，煤矿少年靠自己的天赋与努力爬上了主力中单的位置，但IG那个时候的战绩并不理想，S5被FNATIC两回合暴打回家，每个赛季前都说要起飞到最后却习惯性断腿，就算在夺冠前的春夏季赛，也被喷为18连胜总殿军。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;年复一年的努力&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;却换来了年复一年的失利&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;S7夏季赛ROX的那场梦&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;现在听起来也依然是笑中带泪&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;连一个夏季赛的冠军&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;那个时候看起来都遥不可及&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;“做了一个梦，我们IG拿冠军，我说是不是假的，但就是个梦吧。”&lt;/p&gt;&#xA;&lt;p&gt;他当时特别开心，但接连不断的失望也没有让rookie绝望，每个赛季他都是那个勤勉努力、超级C的rookie。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;苦心人，天不负。&lt;/code&gt;在S8的顶峰上，rookie捧起了第一座属于LPL的冠军，而今年能否再回头填补上那座夏季赛冠军的梦，就让我们继续拭目以待吧。&lt;/p&gt;&#xA;&lt;h2 id=&#34;第九名-我不想讲韦神-godv&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;第九名 “我不想讲韦神”—— GODV&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%b9%9d%e5%90%8d-%e6%88%91%e4%b8%8d%e6%83%b3%e8%ae%b2%e9%9f%a6%e7%a5%9e-godv&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;GODV，年少成名，法号无天，S5带领老干爹拿下了夏季赛冠军，一时风光无两。&lt;/p&gt;&#xA;&lt;p&gt;但后来的故事我们也都知道了，反向Q和天刀之后老干爹和韦神再也回不到曾经攀登过的高峰了，直到S8开始前的一条微博告诉我们，&lt;code&gt;他选择褪去皎月的光，却拿起了绝地的枪。&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;很多人猜测韦神转型的原因。有的人认为他再也追赶不上当初被寄予厚望的自己，有的说是为了蹭吃鸡的热度。捞了可以再去变强，冠军可以不断去追寻，哀莫大于心死。对于这个中二嘤嘤怪来说，这么多失去的东西里，愤恨难平的只有老干爹&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;“在老干爹打，我是有目标的，去了其他的，我没有目标。”&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;韦神从来没有放弃过对于英雄联盟的梦想，只是这个梦想，如果没有老干爹就不再有意义了。&lt;/p&gt;&#xA;&lt;p&gt;4AM的GODV或许看起来光芒万丈，但在内心深处，可能永远残留着那一段属于英雄联盟的意难平吧。&lt;/p&gt;&#xA;&lt;p&gt;“你现在是准备彻底转型吃鸡了对吧”&lt;/p&gt;&#xA;&lt;p&gt;“嗯”&lt;/p&gt;&#xA;&lt;p&gt;“这句话需要你自己重新说下”&lt;/p&gt;&#xA;&lt;p&gt;“我不想讲”&lt;/p&gt;&#xA;&lt;p&gt;但是韦神，你那射丢的一剑，imp已经帮你射回来了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;第八名-金咕咕想去s8doinb&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;第八名 “金咕咕想去S8。”——DOINB&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e5%85%ab%e5%90%8d-%e9%87%91%e5%92%95%e5%92%95%e6%83%b3%e5%8e%bbs8doinb&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;我们对于DOINB的印象经常是直播鬼才100个飞机，但看到他这个id，我们才意识到对于这个狗东西最重要的一直只有赢。&lt;/p&gt;&#xA;&lt;p&gt;2018年初与OMG决裂的司马老贼，在EDG当年背过的mouse和DOINB等人来到RW，自此初代侠勇成立。一群失意的人走到一起为了梦想背水一战。春季赛中他们一路披荆斩棘拿下了春季赛季军，洲际赛上他们往狂澜于既倒，护国侠勇力斩KZ。这支队伍里，无论是DOINB还是老贼，征战多年却都没有打进过S赛，唯一打进过S赛拉光，对于世界赛也只有背锅的回应。想去S8的不只是金咕咕，而是这整只rw。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;但电竞是残酷的，每座顶峰下都是数不清的败者。&lt;/code&gt;HARO的三角回旋踢踢碎了他们的梦想。赛季结束后mouse退役，DOINB司马老贼小夫纷纷离队。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;烟花燃起&#xA;&#xA;没能冲达云霄&#xA;&#xA;便四散为花火&#xA;&#xA;留下了短暂却耀眼的光芒&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;今年的DOINB还有去S9的机会，只是身边已经不再是这些人了&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;“佳慧难再遇，三载为千秋”&lt;/code&gt;，侠盗1.0的故事不会再有续集了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;第七名-输的时候说什么都像是借口&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;第七名 “输的时候说什么都像是借口。”&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%b8%83%e5%90%8d-%e8%be%93%e7%9a%84%e6%97%b6%e5%80%99%e8%af%b4%e4%bb%80%e4%b9%88%e9%83%bd%e5%83%8f%e6%98%af%e5%80%9f%e5%8f%a3&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;kaoma这句话更多时候都是配上了李哥的图片在网络上流传起来，实际上这句话是由SKT教练在2015年MSI失利后对队员说的话。&lt;/p&gt;&#xA;&lt;p&gt;那一年的MSISKT和EDG来到了决赛的第五场，尽管不是最好的选择，但Faker依然锁下了此前百分之百胜率的妖妓。然而这一切都是在EDG的计划之中，比赛结束后，Faker在漫天的采血中不知所措，他的对手为LPL拿下了第一个官方世界冠军，赛后的Faker躲在了角落里，扣马对着所有人说出了这句话，是的，电竞的世界里，亚军是不会被记住的，只有胜者才能享受聚光灯和欢呼声，19岁的Faker记住了这句话。&lt;/p&gt;&#xA;&lt;p&gt;几个月后，他与SSKT便捧起了S5的冠军奖杯。&lt;code&gt;输的时候说什么都像是借口，那么一直赢下去就可以了吧。&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;第六名-输不起是吧笑笑&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;第六名 “输不起是吧。”——笑笑&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e5%85%ad%e5%90%8d-%e8%be%93%e4%b8%8d%e8%b5%b7%e6%98%af%e5%90%a7%e7%ac%91%e7%ac%91&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;在中国英雄联盟职业的最早期是IG与we的时代，两支队伍此消彼长。在主队长期的对抗中，双方粉丝积累下了不少恩怨。那不是最好的时代，而是最坏的时代。选手们在拥挤的网吧打比赛，平常的训练和吃饭都是问题，而粉丝文化也充满了戾气，比现在更深。在那个时候有选手出现失误、队伍意外战败都可能被粉丝喷的抬不起头来。在2013年s we we l的决赛中，IG3比二击败we，正当队员们在台上为胜利欢呼时，谁能想到一个矿泉水瓶就砸向了PDD&lt;/p&gt;&#xA;&lt;p&gt;现在去分析，笑笑那句简单的“输不起是吧”，心中反而有一些五味杂陈，PDD笑笑他们都是优秀的选手，却生在了最坏的时代，他们的训练环境比当年选手更加艰苦，现在的队伍拿下比赛会获得山呼海啸的欢呼，他们迎来的却是夹杂着矿泉水瓶的辱骂，他们拿下了比赛，但在当时却得不到相应的认可。看着心仪的IG在众山之巅的风光，笑笑心中除了欣慰，或许还存留着一点羡慕吧。&lt;/p&gt;&#xA;&lt;h2 id=&#34;第五名-我打比赛是为了钱但我真的很想赢麻辣香锅&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;第五名 “我打比赛是为了钱,但我真的很想赢。”——麻辣香锅&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%ba%94%e5%90%8d-%e6%88%91%e6%89%93%e6%af%94%e8%b5%9b%e6%98%af%e4%b8%ba%e4%ba%86%e9%92%b1%e4%bd%86%e6%88%91%e7%9c%9f%e7%9a%84%e5%be%88%e6%83%b3%e8%b5%a2%e9%ba%bb%e8%be%a3%e9%a6%99%e9%94%85&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;有这么一个选手，他喜欢吃小龙虾，连名字都是麻辣香锅的缩写，和那些说为了梦想打游戏的选手不一样，他说自己打职业就是为了钱，但我们知道刘诗雨真的很想赢。他只有一副竹竿身板却没有他不敢开的团，对手不需要去野区找他因为下一秒麻辣香锅就会跳到你脸上。2018对麻辣香锅本应该是最丰收的一年，S8强队伍取得了所有的冠军，他想赢也一直在赢。S8的最后，曾经力挽狂澜的梦魇这次也没能救下RNG。他想赢但这次真的赢不了了。到了2019年，因为伤病，郭老师暂时离开了赛场。当RNG春季赛被淘汰的时候，场下的香锅看着队员们失落的样子一定很难过吧，他想赢，但如果没法上场，连拼一把的机会都不会有。&lt;/p&gt;&#xA;&lt;p&gt;夏天快到了，我们也不知道那个绝食打野还能不能回来。&lt;/p&gt;&#xA;&lt;h2 id=&#34;第四名-我不是退役只是没人要&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;第四名 “我不是退役，只是没人要。”&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e5%9b%9b%e5%90%8d-%e6%88%91%e4%b8%8d%e6%98%af%e9%80%80%e5%bd%b9%e5%8f%aa%e6%98%af%e6%b2%a1%e4%ba%ba%e8%a6%81&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;我们在赛场上看到的选手，都是从金字塔底部慢慢爬上去的精英，而在最底层有太多我们不知姓名的选手，他们或许是实力不够，或许是年纪大了没有状态。在这个丛林法则的电竞圈，一切都是残酷的。&lt;/p&gt;&#xA;&lt;p&gt;而在这些人中，吉吉国王应该是最值得唏嘘的一个吧。2013年春季赛的一场对决中，黑暗势力OMG对战OMG，看似悬殊的比赛，却被OTTO1人扭转乾坤。他使用gogoing以为傲的鳄鱼单杀了大哥的瑞兹五次，但OTTO的职业生涯并没有像这样平步青云，之后他离开OMG去了sat经历了万猪拱塔，然后淡出了职业赛场在斗鱼开启了直播。每天的生活从训练比赛rank变成了只剩下在直播中喷喷打野，但OTTO从没有退役，他有些自嘲地说着&lt;code&gt;“我不是退役，只是没人要”。&lt;/code&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;国王&#xA;&#xA;你最光辉的时刻是什么时候&#xA;&#xA;是单杀gogoing吗&#xA;&#xA;但这些都已经回不去了呀&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;第三名-求求你们陪我打完g联赛再离开草莓&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;第三名 “求求你们陪我打完G联赛再离开。”——草莓&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%b8%89%e5%90%8d-%e6%b1%82%e6%b1%82%e4%bd%a0%e4%bb%ac%e9%99%aa%e6%88%91%e6%89%93%e5%ae%8cg%e8%81%94%e8%b5%9b%e5%86%8d%e7%a6%bb%e5%bc%80%e8%8d%89%e8%8e%93&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;2012年，五个少年登上了LPL的领奖台带来了第一座世界冠军，成为后来LPL一切沉沦与荣耀的开始。此后的we 开启了48连胜的不败神话，五个传奇般的IG至今仍在玩家之间口口相传。&lt;/p&gt;&#xA;&lt;p&gt;然而可惜的是，无论流星在天空多么闪耀，都逃不了坠落的那一刻。2013年的we战绩并不理想，冲击世界赛失败，也在队内埋下了矛盾的种子，而在we cg败给OMG之后，we 的动荡也随之开始。阿布带着诺言和卷毛离队转投EDG，那个平时看上去冷酷男孩的草莓，在第二天得知消息后在微博含泪挽留“我求求你们陪我打完G联赛再离开”。赛场上他是能将队员护在身后的上单，这一次却阻止不了队友从身边离开。&lt;/p&gt;&#xA;&lt;p&gt;从此老we we分崩离析，再也无法挽回颓势，&lt;code&gt;那些五个人在一起训练比赛吃外卖的日子，草莓纵使再不舍，也终究是回不去了。&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;第二名-去年没能带队友来到这里真的很对不起他们faker&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;第二名 “去年没能带队友来到这里，真的很对不起他们。”——Faker&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%ba%8c%e5%90%8d-%e5%8e%bb%e5%b9%b4%e6%b2%a1%e8%83%bd%e5%b8%a6%e9%98%9f%e5%8f%8b%e6%9d%a5%e5%88%b0%e8%bf%99%e9%87%8c%e7%9c%9f%e7%9a%84%e5%be%88%e5%af%b9%e4%b8%8d%e8%b5%b7%e4%bb%96%e4%bb%acfaker&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;如果神也玩英雄联盟，他的id应该就是SKT Faker。天神下凡的实力，心无杂念的态度，将自己的人生都融入了召唤师峡谷。但谁能想到17年的MSI后的两年Faker再也没摸到过奖杯。S7总决赛失利后哭的像个孩子，S8在冷板凳上看着队伍不断失利，即使是神也会流下迷茫的泪水，这个被我们捧上神坛的男人，其实还是个不到23岁的男孩。他想赢，但他也会失利，他想前进，但他也会迷茫。&lt;/p&gt;&#xA;&lt;p&gt;S9开始前，SKT其余人全部离队，再一次只剩下了Faker。当年那个想和队员们分享快乐，结果转头空无一人此情景又再一次出现。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;被称作Faker接班人的选手接连出现，但站到最后的一直都是Faker。&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;今年LCK春季赛中，Faker与SSKT在hi flabean注视下横扫了green。&lt;/p&gt;&#xA;&lt;p&gt;就是这样一个男人，他忘了S7bad推推棒，他忘了S8blank水货发挥，他流下眼泪是因为觉得自己不够强，但他明明已经是最强的那个了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;魔王啊，就这样把你的故事继续下去吧&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;第一名-rox-tigers-这样的队伍也许再也颇有了smeb&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;第一名 “rox tigers 这样的队伍也许再也颇有了。”——SMEB&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%b8%80%e5%90%8d-rox-tigers-%e8%bf%99%e6%a0%b7%e7%9a%84%e9%98%9f%e4%bc%8d%e4%b9%9f%e8%ae%b8%e5%86%8d%e4%b9%9f%e9%a2%87%e6%9c%89%e4%ba%86smeb&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;2016年LCK夏季赛总决赛结束之前，英文流解说这么说道，就是这样的一群选手被其他队员拒绝，没有大赞助商，没有训练基地，没有关系，因为他们即将夺得LCK夏季赛冠军。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;rox tigers的故事像极了那些热血少年漫画。一群不知道哪里聚集到一起的小屁孩，却笑着走向了挑战大魔王的路&lt;/code&gt;。&lt;code&gt;可电竞不是童话，勇者最后倒在了魔王的面前&lt;/code&gt;，经历了一场史诗级别的BO5以后，ROXTT水晶被SKT推平。由于没有资金队伍即将解散，追梦的少年被折断了手中的剑。&lt;/p&gt;&#xA;&lt;p&gt;一个月后，在rox tigers最后一场比赛中，他们零封SSKT捧起奖杯，&lt;code&gt;勇者执起了断剑，挥出将死的一击。&lt;/code&gt;，随后不久队伍解散，路人离队。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;聚是一团火，散是满天星。他们彼此陪伴了最难忘的日子，但今后的路就要自己走了。&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;很多时候让我们爱上那些选手的瞬间，不是那些胜利后的意气风发，而是与奖杯擦肩过后的背影。&lt;code&gt;泪水让他们的故事更加有血有肉&lt;/code&gt;，让我们想着原来他也和我们一样啊。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;谁都有属于自己的意难平，或许是失去联系的挚友，或许是没能说出的抱歉，也或许是再也见不到的初恋，毕竟谁的青春没有遗憾相伴呢。&lt;/code&gt;&lt;/p&gt;&#xA;</description>
    </item>
  </channel>
</rss>
